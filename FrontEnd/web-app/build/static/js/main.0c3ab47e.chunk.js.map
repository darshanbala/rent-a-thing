{"version":3,"sources":["components/home/SearchBar.js","components/products/Card.js","components/products/Things.js","components/framework/ThingsHandler.js","components/home/Home.js","components/framework/City.js","components/framework/ImageUpload.js","components/user/CreateAccount.js","components/user/Login.js","components/products/SendMessage.js","components/products/Item.js","components/user/profile/UserReview.js","components/user/profile/AddUserReview.js","components/user/profile/UserReviews.js","components/user/profile/MyRentals.js","components/user/profile/UserPosts.js","components/user/profile/UserLookingFor.js","components/user/profile/template_profile_picture.png","components/user/profile/Profile.js","components/products/PostItem.js","components/products/Category.js","components/products/Categories.js","components/home/Individual.js","components/home/ChosenIndividual.js","components/home/About.js","components/user/profile/MessagePage.js","components/framework/GenericPage.js","App.js","index.js"],"names":["SearchBar","props","state","item","onHomePage","handleChange","event","target","name","value","setState","console","log","this","PrevProps","PrevState","submitSearch","preventDefault","dateFrom","dateTo","location","type","className","id","onChange","e","placeholder","Component","checkCardType","Card","price","cardType","img_url","rented_from","rented_until","trader_first_name","trader_last_name","isValidCardType","includes","to","src","alt","style","height","now","Date","dueDate","highlight","class","format","Things","items","a","prevProps","prevState","map","is_available","ThingsHandler","categoryId","searchCriteria","searchingFor","date_from","date_to","all","currentLocation","cityOptions","categoryOptions","showMenu","locationFilteredItemList","propsLoaded","searchRadiusOptions","selectedSearchRadius","locationAndRadiusFilteredItems","filterBy","getCities","getCategories","newStateRadius","oldStateRadius","newStateLocation","oldStateLocation","fetch","process","method","credentials","response","json","cityId","headers","body","JSON","stringify","city","filterByLocation","categories","itemList","filteredItems","filter","city_id","thingsThatPass","currentLocationId","response2","currentLocationData","test1","latitude","slice","test2","longitude","calculationValue1Plus","calculationValue1Minus","calculationValue2Plus","calculationValue2Minus","parseFloat","forEach","object","innerCalculationValue1","innerCalculationValue2","innerTest1","innerTest2","push","totally_unfiltered","category_id","filterByLocationAndRadius","locationFilteredItems","searchParams","changeCategory","changeCity","changeSearchRadius","cookieCheck","React","Home","submissionConfirmed","category","undefined","arg","ImageUpload","handleImgUrl","useState","fileName","setFileName","sourceUrl","setSourceUrl","previousSourceUrl","setPreviousSourceUrl","onSubmit","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","files","margin","CreateAccount","valid_new_user","first_name","last_name","email","password1","password2","DoB","phone_number","address_1","address_2","postcode","validationMessage","validEmail","successfullySubmitted","hasChosenCountry","url","checkValidEmail","validateSubmit","toBeSent","code","idResponse","axios","require","username","data","then","catch","error","isEmailValid","info","length","i","isNaN","which","cityName","innerHTML","chosenCity","key","submitEmailInfo","submitUser","htmlFor","onKeyDown","handleKeyDown","updateInfo","max","validateLive","onClick","Login","initialState","password","touched","field","newTouched","resetForm","handleSubmit","onBlur","markAsTouched","emailErrors","passwordErrors","disabled","SendMessage","message","chatId","success","text","config","loggedInUser","secret","sucessMessage","usernames","ownerName","is_direct_chat","sendChatId","Item","itemDuringChange","fields","rentFrom","rentUntil","rentalConfirmed","errorMessage","errorMessageEditName","errorMessageEditDescription","usersOwnItem","itemIsInEditMode","descriptionIsInEditMode","redirect","clicked","user","itemWasFound","submitForm","itemId","changeEditModeItem","changeEditModeDescription","description","handleEditChangeName","handleEditChangeDescription","updateItemNameValue","ownerId","owner_id","changedValue","updateItemDescriptionValue","changeItemAvailability","isAvailable","window","href","urlSplit","split","itemInArray","user_id","redirectClicked","redirectUser","pathname","justVisiting","goToUserProfile","min","rows","UserReview","review","title","content","howLongAgo","rating","AddUserReview","reviewAdded","parseInt","star_rating","textInput","changeStarRating","submitUserReview","refreshPage","UserReviews","refresh","forceUpdate","reviews","bind","getReviews","index","formattedReviews","MyRentals","lending","borrowing","fromBackend","Profile","newLoad","getStarRating","created_at","PostItem","nameCharacterLimit","descriptionCharacterLimit","age_restriction","previous_submit_successful","toFixed","allFieldsEntered","ownerID","submitted","descriptionCharacterAlert","nameRemainingCharactersAlert","countDown","maxlength","step","imgurl","Category","handleClick","Categories","hasChosen","chosenValue","Individual","individualData","cv_img","github_link","linkedin_link","ChosenIndividual","backToTeam","chosenIndividual","About","teamMembers","MessagePage","userName","userSecret","projectID","renderChatSettings","renderNewChatForm","GenericPage","App","isLoggedIn","checkWhoIsSignedIn","toggleLoggedIn","setUser","updatedUserValue","hasSearched","activeClassName","logout","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c3ab47e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport '../../index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n  onHomePage: false\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(this.props.onHomePage);\n        try{\n          this.setState({onHomePage: this.props.onHomePage})\n        }catch{}\n    }\n\n    componentDidUpdate(PrevProps, PrevState) {\n        if(this.state.item!== PrevState.item){\n          //console.log(this.state)\n          if(!this.state.onHomePage) {\n            this.props.submitSearch(this.state)\n          }\n        }\n\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        if(this.state.onHomePage){\n          this.setState({ onHomePage: false })\n        }else{\n          this.props.submitSearch(this.state);\n        }\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <section>\n                <form type=\"submit\" className=\"searchBar\">\n                    <div>\n                    <span><input type=\"text\" name=\"item\" id=\"searchForItem\" value={item} onChange={(e) => this.handleChange(e)} placeholder='Rent-A-...' /></span>\n                    {/*<span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} min={format(new Date(), 'y-MM-d')} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} min={format(new Date(), 'y-MM-d')} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    */}\n                    </div>\n                    <div>\n                    {/*<input id='search_submit' type='submit' onClick={(e) => this.formSubmission(e)} value='GO'/>*/}\n                    </div>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport '../../css/Card.css';\n\nconst checkCardType = ['things-page-card', 'myrentals-page-card']\n\n\nexport default function Card({\n    id,\n    name,\n    price,\n    cardType,\n    img_url,\n    rented_from,\n    rented_until,\n    trader_first_name,\n    trader_last_name,\n}) {\n    // Checks to see if card is valid\n    const isValidCardType = checkCardType.includes(cardType)\n\n    if (isValidCardType && cardType === 'things-page-card') {\n    //console.log(img_url)\n        return (\n            <Link to={`/item/${id}`}>\n                <div className={cardType} >\n\n                    <img className={`${cardType}-img`} src={!img_url ? \"logo192.png\" : img_url} alt={name} style={{ height: '192px' }} />\n\n                    <div className={`${cardType}-text-container`}>\n                        <h4><b>{name}</b></h4>\n                        <p>Price: £{price}</p>\n                    </div>\n                </div>\n            </Link>\n\n        )\n\n    } else if (isValidCardType && cardType === 'myrentals-page-card') {\n        const now = Date.now();\n        //console.log(now)\n\n        const dueDate = new Date(rented_until)\n        //console.log(dueDate)\n        //const dueDate = new Date(rented)\n        let highlight = null;\n        if(now > dueDate) {\n          highlight = 'overdue'\n        }else if(now < dueDate) {\n          highlight = 'notDueYet'\n        }\n        return (\n            <div id={highlight} className={cardType} >\n                <img src={!img_url ? \"logo192.png\" : img_url} alt={name} class='rentals-page-card-img'/>\n                <div className={`${cardType}-container`}>\n                    <h4><b>{name}</b></h4>\n                    <p>Pick up date: {format(new Date(rented_from), 'E dd MMMM, y')}</p>\n                    <p>Drop off date: {format(new Date(rented_until), 'E dd MMMM, y')}</p>\n                    <p>You're dealing with: {trader_first_name} {trader_last_name}</p>\n                    <p>Price: £{price}</p>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css';\nimport Card from './Card';\n\nclass Things extends Component {\n\n    state = {\n        items: null\n    }\n\n    async componentDidMount() {\n        const items = this.props.items\n        //console.log(\"Items:\")\n        //console.log(items)\n        this.setState({ items })\n\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n      //console.log(this.props)\n      if(prevProps !== this.props){\n\n\n\n          await this.setState({\n            items: []\n          })\n\n\n        this.setState({\n          items: this.props.items\n        })\n      }\n    }\n\n    handleItemClick(id) {\n        //console.log(id)\n\n    }\n\n    render() {\n        //const { items } = this.state;\n        const items = this.props.items;\n        //console.log(items);\n        //console.log(\"Items:\")\n        //console.log(items)\n        if (!items[0]) {\n            return (<p>Loading....</p>)\n        } else {\n\n            return (\n                <div className='item-list'>\n                    {items.map(({ id, name, price, is_available, img_url }) =>\n                        <Card  id={id} name={name} price={price} img_url={img_url} cardType='things-page-card' />\n                    )}\n                </div>\n\n            )\n        }\n    }\n\n} export default Things;\n","import React from 'react';\nimport Things from '../products/Things.js'\n\nclass ThingsHandler extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      items: null,\n      categoryId: 0,\n      searchCriteria: {\n        searchingFor: null,\n        date_from: null,\n        date_to: null,\n        location: null\n      },\n      all: null,\n      currentLocation: {\n        id: 0,\n        name: null\n      },\n      cityOptions: null,\n      categoryOptions: null,\n      showMenu: false,\n      locationFilteredItemList: '',\n      propsLoaded: false,\n      searchRadiusOptions: ['None', '0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'],\n      selectedSearchRadius: 'None',\n      locationAndRadiusFilteredItems: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getCities();\n    const response = await fetch(`${process.env.REACT_APP_API_URL}checkWhoIsSignedIn`, { method: 'GET', credentials: 'include' });\n    const user = await response.json();\n    if (user) {\n      await this.changeCity(user.city_id);\n    } else {\n      await this.changeCity(1)\n    }\n    //this.setState({currentLocation: { name: 'all'}})\n    await this.filterBy();\n  }\n\n  async componentDidUpdate(PrevProps, PrevState) {\n\n    const newStateRadius = this.state.selectedSearchRadius;\n    const oldStateRadius = PrevState.selectedSearchRadius;\n    const newStateLocation = this.state.currentLocation.id;\n    const oldStateLocation = PrevState.currentLocation.id;\n\n    if (this.props !== PrevProps) {\n      if(this.state.propsLoaded === false){\n        await this.setState({categoryId: this.props.searchCriteria.categoryId, propsLoaded: true})\n        //console.log(this.props.searchCriteria.searchingFor)\n        try{\n        if(this.props.searchCriteria.searchingFor.item){\n          await this.setState({searchCriteria: {searchingFor: this.props.searchCriteria.searchingFor.item}})\n          //console.log(this.props.searchCriteria.searchingFor)\n        }\n      }catch{}\n      }\n      await this.filterBy()\n    }\n    if(this.state.categoryId !== PrevState.categoryId || this.state.searchCriteria.searchingFor !== PrevState.searchCriteria.searchingFor){\n      //console.log(this.state)\n      await this.filterBy();\n    }\n\n    if(newStateRadius != oldStateRadius || newStateLocation != oldStateLocation) {\n      await this.filterBy()\n    }\n\n  }\n\n  async getCities() {\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}cities`,\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    )\n    const cityOptions = await response.json()\n\n    this.setState({ cityOptions });\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({\n      showMenu: true,\n    });\n  }\n\n  async changeCity(e) {\n    let cityId = 0;\n    try{\n     cityId = e.target.value;\n  }catch{\n     cityId = e;\n  }\n  if(cityId === '0') {\n    await this.setState({\n           currentLocation:\n               {\n                 id: null,\n                 name: null\n                }\n            });\n\n    return;\n  }else{\n    cityId = cityId--;\n  }\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}getCity`,\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cityId })\n      }\n    );\n    const city = await response.json();\n    const name = city[0].name;\n    const id = city[0].id;\n    await this.setState({\n      currentLocation: {\n                          id: id,\n                          name: name\n                        }\n                          });\n\n    let { items, locationFilteredItemList } = this.state;\n    locationFilteredItemList = await this.filterByLocation(items);\n    //console.log(\"locationFilteredItems:\");\n    //console.log(locationFilteredItemList);\n    this.setState({ locationFilteredItemList });\n  }\n\n  async componentDidMount() {\n    await this.filterBy()\n    //get list of cities for drop down later\n    await this.getCities();\n    await this.getCategories();\n    //Check if someone is logged in, in for get their city_id to later filter items\n    /*\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/checkWhoIsSignedIn`, { method: 'GET', credentials: 'include' });\n    const user = await response.json();\n    if (user) {\n      //const response = await fetch(`${process.env.REACT_APP_API_URL}/checkUserLocation`, { method: 'GET', credentials: 'include', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({ user }) });\n      const userLocation = await this.changeCity(user.city_id);\n      //console.log(\"User Logged in:\");\n      //console.log(user);\n      //console.log(userLocation);\n      this.setState({ currentLocationId: userLocation });\n    } else {\n      //console.log(\"User NOT Logged in:\");\n      await this.changeCity(0)\n    }\n    */\n    await this.setState({ currentLocation: {\n                            id: 0\n                            },\n                          selectedSearchRadius: 'None'\n                          });\n\n\n  }\n\n  async getCategories() {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}categories`, {\n        method: 'GET',\n        credentials: 'include'\n    })\n    const categories = await response.json()\n    this.setState({ categoryOptions: categories })\n  }\n\n  async filterByLocation(itemList) {\n    const { currentLocation } = await this.state;\n    if (currentLocation.id) {\n      const filteredItems = itemList.filter(item => item.city_id === currentLocation.id);\n      return filteredItems;\n    } else {\n      return itemList;\n    }\n  }\n\n  async filterByLocationAndRadius(itemList) {\n    const { currentLocation, selectedSearchRadius } = this.state;\n    let thingsThatPass = [];\n\n    if (selectedSearchRadius !== 'None') {\n      const currentLocationId = currentLocation.id;\n      const response2 = await fetch(`${process.env.REACT_APP_API_URL}currentLocationData`, { method: 'POST', credentials: 'include', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ currentLocationId }) });\n      const currentLocationData = await response2.json();\n\n      //console.log(\"Current Location Data: \");\n      //console.log(currentLocationData[0].latitude);\n      //console.log(currentLocationData[0].longitude);\n\n      let calculationValue1Plus;\n      let calculationValue1Minus;\n      let calculationValue2Plus;\n      let calculationValue2Minus;\n      const test1 = currentLocationData[0].latitude.slice(0, 1);\n      const test2 = currentLocationData[0].longitude.slice(0, 1);\n\n      if (test1 === '-') {\n        calculationValue1Plus = currentLocationData[0].latitude.slice(1);\n        calculationValue1Minus = currentLocationData[0].latitude.slice(1);\n      } else {\n        calculationValue1Plus = currentLocationData[0].latitude.slice(0);\n        calculationValue1Minus = currentLocationData[0].latitude.slice(0);\n      }\n      if (test2 === '-') {\n        calculationValue2Plus = currentLocationData[0].longitude.slice(1);\n        calculationValue2Minus = currentLocationData[0].longitude.slice(1);\n      } else {\n        calculationValue2Plus = currentLocationData[0].longitude.slice(0);\n        calculationValue2Minus = currentLocationData[0].longitude.slice(0);\n      }\n\n      //Need plus and minus for a raduius, not just plus.\n      calculationValue1Plus = parseFloat(calculationValue1Plus) + parseFloat(selectedSearchRadius);\n      calculationValue1Minus = parseFloat(calculationValue1Minus) - parseFloat(selectedSearchRadius);\n      calculationValue2Plus = parseFloat(calculationValue2Plus) + parseFloat(selectedSearchRadius);\n      calculationValue2Minus = parseFloat(calculationValue2Minus) - parseFloat(selectedSearchRadius);\n\n      //console.log(\"Expanded search radius Data: \");\n      //console.log(\"Lat Plus: \");\n      //console.log(calculationValue1Plus);\n      //console.log(\"Lat Minus: \");\n      //console.log(calculationValue1Minus);\n      //console.log(\"Long Plus: \");\n      //console.log(calculationValue2Plus);\n      //console.log(\"Long Minus: \");\n      //console.log(calculationValue2Minus);\n\n      itemList.forEach((object) => {\n        let innerCalculationValue1;\n        let innerCalculationValue2;\n\n        let innerTest1 = object.latitude.slice(0, 1);\n        let innerTest2 = object.longitude.slice(0, 1);\n\n        if (innerTest1 === '-') {\n          innerCalculationValue1 = object.latitude.slice(1);\n        } else {\n          innerCalculationValue1 = object.latitude.slice(0);\n        }\n        if (innerTest2 === '-') {\n          innerCalculationValue2 = object.longitude.slice(1);\n        } else {\n          innerCalculationValue2 = object.longitude.slice(0);\n        }\n\n        innerCalculationValue1 = parseFloat(innerCalculationValue1);\n        innerCalculationValue2 = parseFloat(innerCalculationValue2)\n\n        if (innerCalculationValue1 < calculationValue1Plus && innerCalculationValue1 > calculationValue1Minus) {\n          if (innerCalculationValue2 < calculationValue2Plus && innerCalculationValue2 > calculationValue2Minus) {\n            //console.log(\"Thing that made it: \")\n            //console.log(\"Lat: \")\n            //console.log(innerCalculationValue1);\n            //console.log(\"Long: \")\n            //console.log(innerCalculationValue2);\n\n            thingsThatPass.push(object);\n          }\n        }\n      });\n    } else {\n      thingsThatPass = this.filterByLocation(itemList);\n    }\n\n    return thingsThatPass;\n  }\n\n  async filterBy() {\n    //console.log(\"IN FILTER BY\")\n    const { all, locationFilteredItemList, searchCriteria } = this.props\n    //console.log(this.props)\n    const { categoryId } = this.state\n    //console.log(this.state.searchCriteria)\n    let searchingFor = '';\n    try{\n        searchingFor  = this.props.searchCriteria.searchingFor.item\n    }catch{}\n    let itemList = [];\n    //console.log('category search: '+categoryId)\n    //console.log('category type: '+typeof(categoryId))\n\n    if(categoryId && categoryId !== '0'){\n      if(this.state.totally_unfiltered) {\n        this.setState({totally_unfiltered: false})\n      }\n      //console.log('category search: '+categoryId)\n      //console.log(searchingFor)\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}searchByCategory`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ category_id: categoryId, searchCriteria: searchingFor })\n        }\n      );\n\n      let itemList = await response.json();\n      //console.log(await itemList)\n      if (await itemList[0]) {\n        const locationAndRadiusFilteredItems = await this.filterByLocationAndRadius(itemList);\n        this.setState({ locationAndRadiusFilteredItems });\n        this.setState({ items: [], locationFilteredItems: [] })\n      }\n    } else if (searchingFor) {\n      if(this.state.totally_unfiltered) {\n        this.setState({totally_unfiltered: false})\n      }\n      //console.log('searchbar search')\n      //console.log(searchingFor)\n      //console.log(categoryId)\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}searchByFilter`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ searchCriteria: searchingFor })\n        }\n      );\n      itemList = await response.json();\n      //console.log(await itemList)\n\n      if (await itemList[0]) {\n        const locationAndRadiusFilteredItems = await this.filterByLocationAndRadius(itemList);\n        this.setState({ items: await itemList, locationAndRadiusFilteredItems: locationAndRadiusFilteredItems });\n      } else {\n        this.setState({ items: [], locationFilteredItems: [] })\n      }\n    } /*else if (all) {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/items`,\n        {\n          method: 'GET',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n        }\n      )\n      itemList = await response.json()\n      if (await itemList[0]) {\n        const locationAndRadiusFilteredItems = await this.filterByLocationAndRadius(itemList);\n        this.setState({ items: await itemList, locationAndRadiusFilteredItems });\n      } else {\n        this.setState({ items: [] })\n      }\n    }*/else{\n      this.setState({totally_unfiltered: true})\n    }\n\n  }\n\n  async changeSearchRadius(e) {\n    await this.setState({ selectedSearchRadius: e.target.value });\n  }\n\n  async changeCategory(e) {\n    e.preventDefault();\n    const categoryId = e.target.value\n    this.setState({ categoryId: categoryId})\n    await this.filterBy();\n  }\n\n  render() {\n    const { totally_unfiltered, items, categoryId, searchParams, date_from, date_to, all, cityOptions, categoryOptions, locationFilteredItems, locationFilteredItemList, currentLocation, searchRadiusOptions, selectedSearchRadius, locationAndRadiusFilteredItems } = this.state\n    //console.log(\"Category filtered items:\");\n    //console.log(items);\n    //console.log(\"Location filtered items:\");\n    //console.log(locationFilteredItemList);\n    //console.log(JSON.stringify(currentLocation))\n    //console.log(categoryId)\n    if (!items) {\n      return (\n        <p>Loading...</p>\n      )\n    } {\n      return (\n        <section>\n                    { categoryOptions &&\n                      <select name=\"categories\" value={categoryId} onChange={(e) => this.changeCategory(e)}>\n                        <option value={0}>All categories</option>\n                            {categoryOptions.map(({ id, name }) =>{\n                                //console.log(id+'  '+name);\n                                return <option key={id} id={id} name={id} value={id}>{name}</option>\n                                }\n                            )}\n                      </select>\n                    }\n                    { cityOptions &&\n                      <select name=\"cities\" value={currentLocation.id} onChange={(e) => this.changeCity(e)}>\n                        <option value={0}>All locations</option>\n                            {cityOptions.map(({ id, name }) =>{\n                                //console.log(id+'  '+name);\n                                return <option key={id} id={id} name={currentLocation.id} value={id}>{name}</option>\n                                }\n                            )}\n                      </select>\n                    }\n\n                    {searchRadiusOptions &&\n                      <select name=\"selectedSearchRadius\" value={selectedSearchRadius} onChange={(e) => this.changeSearchRadius(e)}>\n                        {searchRadiusOptions.map((value) => {\n                          //console.log(id+'  '+name);\n                          return <option key={value} id={value} name={selectedSearchRadius} value={value}>{value}</option>\n                        }\n                    )}\n                  </select>\n                  }\n\n                  { !totally_unfiltered &&\n                    <Things items={locationAndRadiusFilteredItems} cookieCheck={this.props.cookieCheck} />\n                  }\n\n          { totally_unfiltered &&\n            <p>Why not search for something?</p>\n          }\n        </section>\n      )\n    }\n  }\n}\n\nexport default ThingsHandler;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport SearchBar from './SearchBar';\nimport ThingsHandler from '../framework/ThingsHandler';\n\nclass Home extends Component {\n\n    state = {\n        submissionConfirmed: false,\n        searchCriteria: {\n          category: null,\n          searchingFor: false\n        },\n        onHomePage: false\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n/*\n    async checkForUser(){\n        let { user } = this.props;\n        user = await this.props.checkWhoIsSignedIn();\n        if(user){\n            //console.log(user.user[0]);\n            this.props.setUser(user.user[0]); // Set user as object of user data {...}\n            await this.props.toggleLoggedIn(true);\n        }else{\n            this.props.setUser(null); // Or set user as null\n            await this.props.toggleLoggedIn(false);\n        }\n    }\n*/\n    async componentDidMount() {\n        //this.props.cookieCheck();\n        if(this.props.searchParams) {\n          this.setState({searchCriteria: this.props.searchParams})\n        }\n        console.log(await this.props.onHomePage)\n        if(this.props.onHomePage === true){\n          this.setState({onHomePage: true})\n        }\n    }\n\n    componentDidUpdate(PrevProps, PrevState) {\n        console.log(\"\"+JSON.stringify(this.props));\n        if(PrevProps !== this.props){\n          try{\n            if(this.props.onHomePage === false && this.props.onHomePage !== undefined) {\n              this.setState({onHomePage: false, searchCriteria: {category: this.props.categoryId} })\n            }else{\n              this.setState({ onHomePage: true })\n            }\n          }catch{\n            this.setState({onHomePage: true})\n          }\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n        this.setState({onHomePage: ''})\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    /*\n    formSubmission(event) {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ submissionConfirmed: true });\n        //this\n        //const response = await fetch(.../thing);\n        //const data = await response.jsonStringify();\n        //if(data === 200){\n        //    redirect to things\n        //} else {\n        //    redirect to error page\n        //}\n    }\n*/\n    submitSearch(arg) {\n        //console.log(arg);\n        this.setState({ submissionConfirmed: true, searchCriteria: { searchingFor: arg } });\n    }\n\n    render() {\n        const { submissionConfirmed, searchCriteria, onHomePage } = this.state;\n        console.log(searchCriteria)\n        if (submissionConfirmed || !onHomePage) {\n            return (\n                <section>\n                    <SearchBar onHomePage={onHomePage} submitSearch={(arg) => this.submitSearch(arg)} />\n                    <ThingsHandler searchCriteria={ searchCriteria } cookieCheck={this.props.cookieCheck}/>\n                </section>\n            );\n        }\n        else {\n            return (\n                <section>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <section>\n                        <h1 id='welcome_message'>Welcome to Rent-A-Thing!</h1>\n                        <h3 id='welcome_message'>Where you can rent any thing our community of users has to offer.</h3>\n                        <h3 id='welcome_message'>What's mine is yours.</h3>\n                        <h3 id='handshake'>🤝</h3>\n                        <p id='terms_and_conditions'>Terms and conditions apply...</p>\n                        <br />\n                        {/*<img src='https://www.europeancitiesmarketing.com/wp-assets/uploads/2016/06/Banner-Sharing-Economy.jpg' />*/}\n                    </section>\n                </section>\n            );\n        }\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\n\nclass City extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div id='cityCard' className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <span>{this.props.id}</span>\n                <span>{this.props.name}</span>\n            </div>\n\n        )\n    }\n\n}\n\nexport default City;\n","import React, { useState } from 'react';\n\nconst ImageUpload = ({ handleImgUrl, img_url }) => {\n\n    const [fileName, setFileName] = useState('')\n    const [sourceUrl, setSourceUrl] = useState('')\n    const [previousSourceUrl, setPreviousSourceUrl] = useState('')\n\n\n\n    const previewFile = (file) => {\n        const reader = new FileReader()\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n            setSourceUrl(reader.result)\n            setFileName(file.name)\n        }\n\n    }\n\n\n    const handFileChange = (e) => {\n        const file = e.target.files[0]\n        previewFile(file)\n    }\n\n\n    const handleFileSubmit = (e) => {\n        //console.log('Submitting on ImageUpload.js')\n        e.preventDefault()\n\n        if (!sourceUrl) return;\n        //console.log(sourceUrl)\n        handleImgUrl(sourceUrl)\n        setPreviousSourceUrl(sourceUrl)\n\n        // const reader = new FileReader()\n        // reader.readAsDataURL(selectedFile)\n    }\n\n\n\n\n    return (\n\n        <div className=\"img-upload\">\n            <form onSubmit={handleFileSubmit}>\n                <div className=\"upload-btn-wrapper\">\n                    <button className=\"btn\">Upload an image</button>\n                    <input\n                        type='file'\n                        name={fileName}\n                        onChange={handFileChange}>\n                    </input>\n                </div>\n\n                {sourceUrl && (\n                    <>\n                        <div>\n                            <img src={sourceUrl} alt={fileName} style={{ height: '300px', margin: '20px' }} />\n                        </div>\n                        <div>\n                            <button className={!img_url || sourceUrl !== previousSourceUrl ? \"btn-done\" : \"btn-done-confirmed\"} type=\"submit\">Done</button>\n                            { sourceUrl !== previousSourceUrl &&\n                                <p>Click \"Done\" to confirm</p>\n                            }\n\n                        </div>\n                    </>\n                )}\n\n\n            </form>\n\n        </div >\n\n\n    )\n}\n\nexport default ImageUpload;\n\n\n\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport '../../index.css';\nimport City from '../framework/City';\nimport ImageUpload from '../framework/ImageUpload';\n\nclass CreateAccount extends Component {\n\n  state = {\n    valid_new_user: false,\n    first_name: \"\",\n    last_name: \"\",\n    img_url: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n    DoB: \"\",\n    phone_number: \"\",\n    address_1: \"\",\n    address_2: \"\",\n    city: {\n      id: null,\n      name: null\n    },\n    postcode: \"\",\n    validationMessage: null,\n    validEmail: true,\n    successfullySubmitted: false,\n    cityOptions: null,\n    hasChosenCountry: false,\n  }\n\n  constructor(props) {\n    super(props);\n    console.log(\"\");\n  }\n\n  async componentDidMount() {\n    this.props.cookieCheck();\n    const response = await fetch(`${process.env.REACT_APP_API_URL}cities`, {\n      method: 'GET',\n      credentials: 'include'\n    })\n    const cityOptions = await response.json()\n    this.setState({ cityOptions });\n\n    // NEW GeoDB STUFF\n    /*\n    const newResponse = await fetch(\n      \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\",\n      {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          \"x-rapidapi-key\": \"b97ae692c1msh0cd7be3cd458128p1504dajsn77a8dde2b6be\",\n          \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n      }\n    );\n    const isSuccess = await newResponse.json();\n    console.log(isSuccess);\n    */\n\n    /*\n    fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"b97ae692c1msh0cd7be3cd458128p1504dajsn77a8dde2b6be\",\n        \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\"\n      }\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n      */\n  }\n\n  componentDidUpdate() {\n    console.log(\"\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"\");\n  }\n\n  updateState(e) {\n\n  }\n\n  updateInfo(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  async submitEmailInfo(e) { //async\n    e.preventDefault();\n    const { email, password1, password2 } = this.state\n    if (this.validateSubmit('first')) //And the user doesnt exist already\n    {\n      this.setState({\n        valid_new_user: true,\n        validationMessage: null\n      })\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async submitUser(e) {\n    e.preventDefault()\n    if (this.validateSubmit('second')) {\n      this.setState({ validationMessage: null })\n      const toBeSent = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        img_url: this.state.img_url,\n        email: this.state.email,\n        password1: this.state.password1,\n        password2: this.state.password2,\n        DoB: this.state.DoB,\n        phone_number: this.state.phone_number,\n        address_1: this.state.address_1,\n        address_2: this.state.address_2,\n        city: this.state.city.id,\n        postcode: this.state.postcode\n      }\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}createAccount`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(toBeSent)\n        }\n      );\n      const isSuccess = await response.json()\n\n\n      if (isSuccess.code === 200) {\n        const idResponse = await fetch(\n          `${process.env.REACT_APP_API_URL}getID`,\n          {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.email)\n          }\n        );\n        const result = await idResponse.json()\n        console.log(result.id)\n\n        this.setState({ successfullySubmitted: true })\n        let axios = require('axios');\n\n\n\n        let data = {\n          username: this.state.first_name,\n          username: `${this.state.first_name}${result.id}`,\n\n          secret: this.state.email,\n         }\n\n\n\n        var config = {\n          method: 'post',\n          url: 'https://api.chatengine.io/users/',\n          headers: {\n            'PRIVATE-KEY': 'ab826fa0-1758-4f20-9213-a0ce97bf6a5c'\n          },\n          data : data\n        };\n\n        axios(config)\n        .then(function (response) {\n          // console.log(JSON.stringify(response.data));\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n      }\n      this.props.cookieCheck()\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.email !== this.state.email && this.state.email !== '') {\n      await this.checkValidEmail()\n    }\n  }\n\n  async checkValidEmail() {\n    const { email } = this.state\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}isValidNewEmail`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email })\n      }\n    )\n    const isEmailValid = await response.json()\n    if (await isEmailValid !== this.state.validEmail) {\n      this.setState({ validEmail: isEmailValid })\n    }\n  }\n\n  validateLive(info) {\n    const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n    switch (info) {\n      case first_name: { }\n        break\n      case last_name: { }\n        break\n      case email: { }\n        break\n      case password1: {\n        if (password1.length < 8) {\n          return (<p className=\"error errorCreateAccount\">Password must be at least 8 characters</p>)\n        }\n      }\n        break\n      case password2: {\n        if (password2 !== password1) {\n          return (<p className=\"error errorCreateAccount\">Passwords do not match</p>)\n        }\n      }\n        break\n      case DoB: { }\n        break\n      case phone_number: {\n        if (phone_number[0] === \"+\") {\n          if (phone_number.length !== 12) {\n            return (<p className=\"error errorCreateAccount\">Please enter a valid phone number</p>)\n          }\n        } else {\n          if (phone_number.length !== 11) {\n            return (<p className=\"error errorCreateAccount\">Please enter a valid phone number</p>)\n          }\n        }\n        for (const i of phone_number) {\n          if (isNaN(i)) {\n            return (<p className=\"error errorCreateAccount\">Please enter a valid phone number</p>)\n          }\n        }\n      }\n        break\n      case address_1: { }\n        break\n      case address_2: { }\n        break\n      case city: { }\n        break\n      case postcode: { } //Link to royal mail postcodes API\n        break\n    }\n  }\n\n  validateSubmit(which) {\n    const { validEmail, password1, password2, phone_number } = this.state\n\n    if (which === 'first') {\n      if (password2 !== password1 || password1.length < 8 || !validEmail) {\n        return false\n      } else {\n        return true;\n      }\n    } else if (which === 'second') {\n      if (phone_number[0] === \"+\") {\n        if (phone_number.length !== 12) {\n          return false\n        }\n      } else {\n        if (phone_number.length !== 11) {\n          return false\n        }\n      }\n      for (const i of phone_number) {\n        if (isNaN(i)) {\n          return false\n        }\n      }\n      return true;\n    }\n  }\n  /*\n  myFunction(e) {\n    e.classList.toggle(\"show\");\n  }\n  */\n  /*\n  filterFunction(e) {\n    const filter = e.value.toUpperCase();\n    div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }\n*/\n\n  async changeCity(e) {\n    const { cityOptions } = this.state;\n    //console.log(e.target.innerHTML);\n    e.preventDefault();\n    //console.log(e.target.innerHTML);\n    const cityName = e.target.innerHTML; // Get city string i.e. Glasgow\n    //console.log(cityName);\n    const chosenCity = cityOptions.filter(city => {\n      if (city.name === cityName) {\n        //console.log(city.id)\n        return city\n      }\n    })\n    //console.log(chosenCity)\n    const cityId = chosenCity[0].id\n\n    //this.setState({ city });\n\n    //this.props.cookieCheck();\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}getCity`,\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cityId })\n      }\n    );\n    const city = await response.json(); // Get city id associated with i.e. Glasgow\n    //const cityOptions = await response.json()\n    this.setState({ city: { id: city[0].id, name: city[0].name }, hasChosenCountry: true, cityName: city[0].name });  // set user city to this id so in future user and other components can searh for location id and get city name back\n  }\n\n  handleImgUrl = (url) => {\n    //console.log(url,'Url on PostItem')\n    this.setState({ img_url: url })\n    console.log(this.state.img_url)\n  }\n\n  async handleKeyDown(e) {\n    const { valid_new_user } = this.state\n\n    console.log(e.key+' key pressed')\n    if(!valid_new_user){\n    if(e.key === 'Enter'){\n      await this.submitEmailInfo()\n    }\n  }else{\n    if(e.key === 'Enter'){\n      await this.submitUser()\n    }\n  }\n  }\n\n\n  render() {\n    const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode, cityOptions, hasChosenCountry, cityName } = this.state\n    //console.log(\"CITIES:\");\n    //console.log(cityOptions);\n    if (successfullySubmitted) {\n      return (<Redirect to=\"/\" />);\n    }\n\n    if (!valid_new_user) {\n      return (\n        <section>\n            <h1 className=\"centered\">Create an account</h1>\n            <form className=\"SubmissionForm SubmissionFormCreateAccount\">\n              <section>\n                <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                <input type=\"text\" name=\"email\" id=\"email\" value={email} onKeyDown={(e) => this.handleKeyDown(e)} onChange={(e) => this.updateInfo(e)} />\n                {!validEmail && <p className=\"error errorCreateAccount\" >Email address is unavailable</p>}\n              </section>\n              <section>\n                <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                <input type=\"password\" name=\"password1\" id=\"password1\" value={password1} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password1)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"password2\" value=\"Re-enter password: \" value={password2} >Re-enter password: </label>\n                <input type=\"password\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password2)}</div>\n              </section>\n              <section>\n                <input type=\"submit\" onClick={(e) => this.submitEmailInfo(e)}  value=\"Create account\" />\n                {validationMessage && <p className=\"error errorCreateAccount\">{validationMessage}</p>}\n              </section>\n            </form>\n        </section>\n      );\n    }\n    else {\n      return (\n        <section>\n            <h1>Submit your details</h1>\n            <div className=\"SubmissionForm\">\n\n            <section>\n              <label>Profile Picture:</label>\n              <ImageUpload handleImgUrl={this.handleImgUrl} />\n            </section>\n\n          </div>\n            <form className=\"SubmissionForm SubmissionFormCreateAccount\">\n              <section>\n                <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                <input type=\"text\" name=\"first_name\" id=\"first_name\" value={first_name} onKeyDown={(e) => this.handleKeyDown(e)} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                <input type=\"text\" name=\"last_name\" id=\"last_name\" value={last_name} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                <input type=\"date\" name=\"DoB\" id=\"DoB\" value={DoB} max={format(new Date(), 'y-MM-d')} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={phone_number} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(phone_number)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                <input type=\"text\" name=\"address_1\" id=\"address_1\" value={address_1} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                <input type=\"text\" name=\"address_2\" id=\"address_2\" value={address_2} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n\n              <div className=\"cityParent\">\n                <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                <br />\n                {/*<input type=\"text\" name=\"city\" id=\"city\" value={city} onChange={(e) => this.updateInfo(e)} />*/}\n                <section id='cities_section'>\n                  {!hasChosenCountry && cityOptions.map(({ id, name }) => <div className=\"cityCard\" onClick={(e) => this.changeCity(e)} key={id} value={name}>{name}</div>)}\n                  {hasChosenCountry && <div className=\"chosenCityCard\">{city.name}</div>}\n                </section>\n                {/*<City key={id} id={id} name={name} />*/}\n                {/*\n                <div className=\"dropdown\">\n                  <button onClick={(e) => this.myFunction(e)} className=\"dropbtn\">Dropdown</button>\n                  <div id=\"myDropdown\" className=\"dropdown-content\">\n                    <input type=\"text\" placeholder=\"Search..\" id=\"myInput\">\n                      <a href=\"#about\">About</a>\n                      <a href=\"#base\">Base</a>\n                      <a href=\"#blog\">Blog</a>\n                      <a href=\"#contact\">Contact</a>\n                      <a href=\"#custom\">Custom</a>\n                      <a href=\"#support\">Support</a>\n                      <a href=\"#tools\">Tools</a>\n                    </input>\n                  </div>\n                </div>\n                */}\n                </div>\n              </section>\n              <section>\n                <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                <input type=\"text\" name=\"postcode\" id=\"postcode\" value={postcode} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <input type=\"submit\" name=\"submit\" value=\"Submit details\" onClick={(e) => this.submitUser(e)} />\n                {validationMessage && <p className=\"error\">{validationMessage}</p>}\n              </section>\n            </form>\n        </section>\n      )\n    }\n  }\n}\n\nexport default CreateAccount;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\n\nclass Login extends Component {\n\n    initialState = {\n        email: '',\n        password: '',\n        touched: {\n            email: false,\n            password: false,\n        },\n        successfullySubmitted: false,\n        //user: null\n    }\n\n    state = this.initialState;\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n    }\n\n    markAsTouched(field) {\n        const newTouched = { ...this.state.touched };\n        newTouched[field] = true;\n        this.setState({ touched: newTouched });\n    }\n\n    emailErrors() {\n        const { email, touched } = this.state;\n        if (!touched.email) return false;\n        if (email.length < 10) return \"Email is too short\";\n        if (email.length > 50) return \"Email is too long\";\n    }\n\n    passwordErrors() {\n        const { password, touched } = this.state;\n        if (!touched.password) return false;\n        if (password.length < 8) return \"Password is too short\";\n        if (password.length > 50) return \"Password is too long\";\n    }\n\n    async handleSubmit(e) {\n        const { email, password } = this.state;\n        e.preventDefault();\n        this.resetForm();\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}login`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            }\n        );\n        const isSuccess = await response.json();\n        if (isSuccess.code === 200) {\n            //console.log(isSuccess.loggedInAs);\n            //this.props.setSignedInUser(isSuccess.loggedInAs);\n            this.props.cookieCheck()\n            this.setState({ successfullySubmitted: true });\n        }\n    }\n    /*\n        CHECKING THE COOKIE IS NOW DONE IN APP.js SO THAT IF A USER HAS A COOKIE\n        THEY WILL AUTOMATICALLY BE LOGGED STRAIGHT IN NO MATTER WHAT PART OF THE SITE\n        THEY GO TO\n    \n        async checkForUser(){\n            let { user } = this.props;\n            user = await this.props.checkWhoIsSignedIn();\n            if(user){\n                //console.log(user.user[0]);\n                this.props.setUser(user.user[0]); // Set user as object of user data {...}\n                await this.props.toggleLoggedIn(true);\n            }else{\n                this.props.setUser(null); // Or set user as null\n                await this.props.toggleLoggedIn(false);\n            }\n        }\n    */\n\n    render() {\n        const { email, password, successfullySubmitted, touched } = this.state;\n        if (successfullySubmitted) {\n            //console.log(\"Sucessfully logged in and redirecting\")\n            return (<Redirect to=\"/\" />);\n        }\n\n        return (\n            <section>\n                <h1 className=\"centered\">Login to your account</h1>\n                <form className='SubmissionForm SubmissionFormLogin' onSubmit={(e) => this.handleSubmit(e)}>\n                    <section>\n                        <label>Email: </label>\n                            <input\n                                value={email}\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                onBlur={() => this.markAsTouched('email')}\n                                type='text'\n                            />\n                        {this.emailErrors() && <p className='error errorLogin'>{this.emailErrors()}</p>}\n                    </section>\n                    <section>\n                        <label>Password: </label>\n                            <input\n                                value={password}\n                                onChange={(e) => this.setState({ password: e.target.value })}\n                                onBlur={() => this.markAsTouched('password')}\n                                type='password'\n                            />\n                        {this.passwordErrors() && <p className='error errorLogin'>{this.passwordErrors()}</p>}\n                    </section>\n                    {/*<button type='submit' disabled={!touched.email || !touched.password || this.emailErrors() || this.passwordErrors()} >Login</button>*/}\n                    <input type='submit' value='Login' disabled={this.emailErrors() || this.passwordErrors()} />\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default Login;\n","import { secondsToMilliseconds } from 'date-fns';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport ImageUpload from '../framework/ImageUpload'\n\nclass SendMessage extends Component {\n\n    state = {\n        message: '',\n        chatId: 0,\n        success: '',\n\n    }\n\n    \n\n\n    async sendChatId(id) {\n\n        const { message, chatId } = this.state;\n        console.log(message);\n        console.log(chatId);\n        let axios = require('axios');\n        let data = {\n\n            text: message\n\n        }\n        //console.log(this.state.email)\n\n\n        let config = {\n            method: 'post',\n            url: `https://api.chatengine.io/chats/${chatId}/messages/`,\n            headers: {\n\n                'Project-ID': '738df1f7-4780-4c48-b34f-0938273bcb5d',\n                'User-Name': this.props.loggedInUser,\n                'User-Secret': this.props.secret\n\n            },\n            data: data\n        };\n\n\n\n\n\n\n        axios(config).then((response) => {\n            //console.log(JSON.stringify(response.data.id));\n            this.setState({message: ''})\n            let sucessMessage = ''\n            sucessMessage = <strong>Message Sent</strong>;\n            this.setState({success: sucessMessage});\n\n        })\n\n\n    }\n\n\n    async handleSubmit(e) {\n        //console.log('Submitting on PostItem.js')\n        e.preventDefault();\n       \n\n\n\n        let axios = require('axios');\n        let data = {\n            // username: this.state.first_name,\n            // secret: this.state.password1,\n            //   username: this.state.first_name,\n            //   secret: this.state.email,\n            //ext: message,\n            usernames: [this.props.ownerName],\n            // title: \"Another Surprise Party!\",\n            is_direct_chat: true\n        }\n        //console.log(this.state.email)\n\n\n        let config = {\n            method: 'put',\n            url: 'https://api.chatengine.io/chats/',\n            headers: {\n\n                'Project-ID': '738df1f7-4780-4c48-b34f-0938273bcb5d',\n                'User-Name': this.props.loggedInUser,\n                'User-Secret': this.props.secret,\n\n            },\n            data: data\n        };\n\n\n\n\n\n        axios(config)\n            .then((response) => {\n                //   console.log(JSON.stringify(response.data.id));\n                const chatId = JSON.stringify(response.data.id)\n\n                //console.log(chatId);\n                this.setState({ chatId })\n                //console.log(this.state.chatId);\n                this.sendChatId(this.state.chatId);\n\n\n            })\n\n\n\n    }\n\n\n\n\n    render() {\n        const { message } = this.state;\n        const placeholder = `Send a message to ${this.props.ownerName}`\n\n\n\n        return (\n\n\n\n\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n                {/* <label>{this.props.ownerName}<input type='text' name='name' value={this.props.ownerName}></input></label> */}\n                <textarea name='message' placeholder={placeholder} value={message}\n                    onChange={(e) => this.setState({ message: e.target.value })}></textarea>\n\n\n\n                <input type='submit' value='Send' />\n                {this.state.success}\n            </form>\n\n\n        );\n    }\n}\n\nexport default SendMessage;","import React, { Component, useReducer } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { format } from 'date-fns'\nimport '../../index.css'\nimport '../../css/Item.css'\nimport SendMessage from './SendMessage';\n\nclass Item extends Component {\n\n    initialState = {\n        item: [],\n        itemDuringChange: [],\n        fields: {\n            rentFrom: '',\n            rentUntil: '',\n        },\n        rentalConfirmed: false,\n        errorMessage: '',\n        errorMessageEditName: '',\n        errorMessageEditDescription: '',\n        usersOwnItem: false,\n        itemIsInEditMode: false,\n        descriptionIsInEditMode: false,\n        redirect: {\n            clicked: false,\n            user: null\n        },\n        itemWasFound: true,\n    }\n\n    state = this.initialState\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n\n\n        // Get id from the url\n        const url = window.location.href\n        const urlSplit = url.split('/')\n        const id = urlSplit[urlSplit.length - 1]\n\n        // Fetch API response\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}item/${id}`,\n            {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            }\n        )\n        const { itemInArray, usersOwnItem } = await response.json()\n\n        if (itemInArray.length === 0) {\n            this.setState({ itemWasFound: false })\n        } else {\n            const item = itemInArray[0]\n            this.setState({ item, itemDuringChange: item, usersOwnItem })\n        }\n    }\n\n    // Functions relating to the rental form\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n\n        this.setState(prevState => ({\n            fields: {\n                ...prevState.fields,\n                [name]: value,\n            },\n            errorMessage: '',\n            rentalConfirmed: false,\n        }))\n    }\n\n\n    submitForm = async () => {\n        const itemId = this.state.item.id\n        const { rentFrom, rentUntil } = this.state.fields\n\n        if (!rentFrom || !rentUntil) {\n            this.setState({ errorMessage: 'Please enter a valid rent from and rent until date' })\n            return\n        }\n\n        if (rentFrom > rentUntil) {\n            this.setState({ errorMessage: 'You cannot time travel (please set the return date to be later than the rental date)' })\n        }\n\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}rentItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ itemId, rentFrom, rentUntil })\n            }\n        )\n        const { errorMessage } = await response.json()\n\n        if (errorMessage) {\n            this.setState({ errorMessage })\n        } else {\n            this.setState({\n                fields: this.initialState.fields,\n                rentalConfirmed: true,\n            })\n        }\n    }\n\n    // Functions relating to editing a user's own item\n\n    changeEditModeItem = () => {\n        const usersOwnItem = this.state.usersOwnItem\n\n        // Can only edit your own item\n        if (!usersOwnItem) {\n            this.setState({\n                itemIsInEditMode: false,\n            })\n        } else {\n            this.setState(prevState => ({\n                itemDuringChange: {\n                    ...prevState.itemDuringChange,\n                    name: this.state.item.name,\n                },\n                itemIsInEditMode: !this.state.itemIsInEditMode,\n                errorMessageEditName: '',\n            }))\n        }\n    }\n\n    changeEditModeDescription = () => {\n        const usersOwnItem = this.state.usersOwnItem\n\n        // Can only edit your own item\n        if (!usersOwnItem) {\n            this.setState({\n                descriptionIsInEditMode: false,\n            })\n        } else {\n            this.setState(prevState => ({\n                itemDuringChange: {\n                    ...prevState.itemDuringChange,\n                    description: this.state.item.description,\n                },\n                descriptionIsInEditMode: !this.state.descriptionIsInEditMode,\n                errorMessageEditDescription: '',\n            }))\n        }\n    }\n\n    handleEditChangeName = (event) => {\n        const { name, value } = event.target\n\n        this.setState(prevState => ({\n            itemDuringChange: {\n                ...prevState.itemDuringChange,\n                [name]: value,\n            },\n            errorMessageEditName: '',\n        }))\n    }\n\n    handleEditChangeDescription = (event) => {\n        const { name, value } = event.target\n\n        this.setState(prevState => ({\n            itemDuringChange: {\n                ...prevState.itemDuringChange,\n                [name]: value,\n            },\n            errorMessageEditDescription: '',\n        }))\n    }\n\n    updateItemNameValue = async () => {\n        const item = this.state.item\n        const itemDuringChange = this.state.itemDuringChange\n\n        if (itemDuringChange.name === '') {\n            this.setState({\n                errorMessageEditName: 'Item name cannot be blank'\n            })\n            return\n        } else {\n            this.setState({\n                item: itemDuringChange,\n                itemIsInEditMode: false,\n            })\n        }\n\n        const itemId = item.id\n        const ownerId = item.owner_id\n        const changedValue = itemDuringChange.name\n\n        await fetch(\n            `${process.env.REACT_APP_API_URL}editItemName`,\n            {\n                method: 'PUT',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ itemId, ownerId, changedValue })\n            }\n        )\n    }\n\n    updateItemDescriptionValue = async () => {\n        const item = this.state.item\n        const itemDuringChange = this.state.itemDuringChange\n\n        if (itemDuringChange.description === '') {\n            this.setState({\n                errorMessageEditDescription: 'Item description cannot be blank'\n            })\n            return\n        } else {\n            this.setState({\n                item: itemDuringChange,\n                itemIsInEditMode: false,\n            })\n        }\n\n        this.setState({\n            item: itemDuringChange,\n            descriptionIsInEditMode: false,\n        })\n\n        const itemId = item.id\n        const ownerId = item.owner_id\n        const changedValue = itemDuringChange.description\n\n        await fetch(\n            `${process.env.REACT_APP_API_URL}editItemDescription`,\n            {\n                method: 'PUT',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ itemId, ownerId, changedValue })\n            }\n        )\n    }\n\n    changeItemAvailability = async () => {\n        const item = this.state.item\n        const itemId = item.id\n        const ownerId = item.owner_id\n        const isAvailable = !item.is_available\n\n        this.setState(prevState => ({\n            item: {\n                ...prevState.item,\n                is_available: isAvailable,\n            },\n        }))\n\n        await fetch(\n            `${process.env.REACT_APP_API_URL}changeItemAvailability`,\n            {\n                method: 'PUT',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ itemId, ownerId, isAvailable })\n            }\n        )\n    }\n\n    async goToUserProfile() {\n        const { item } = this.state\n        const user_id = item.owner_id\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}visitAnotherProfile`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ user_id: user_id })\n            }\n        )\n        const user = await response.json()\n        this.setState({\n            redirect: {\n                clicked: true,\n                user: user\n            }\n        })\n    }\n\n\n\n    render() {\n        //console.log(this.props)\n        const item = this.state.item\n        const itemDuringChange = this.state.itemDuringChange\n        const { rentFrom, rentUntil } = this.state.fields\n        const errorMessage = this.state.errorMessage\n        const errorMessageEditName = this.state.errorMessageEditName\n        const errorMessageEditDescription = this.state.errorMessageEditDescription\n        const rentalConfirmed = this.state.rentalConfirmed\n        const usersOwnItem = this.state.usersOwnItem\n        const itemIsInEditMode = this.state.itemIsInEditMode\n        const descriptionIsInEditMode = this.state.descriptionIsInEditMode\n        const redirectClicked = this.state.redirect.clicked\n        const itemWasFound = this.state.itemWasFound\n        let redirectUser = null;\n        if (redirectClicked) {\n            redirectUser = this.state.redirect.user\n        }\n\n        console.log('redirect clicked: ' + redirectUser)\n        console.log(this.props.user, 'user is')\n        return (\n            <>\n                {!itemWasFound && <h1>Error 404: Item was not found</h1>}\n\n\n                {redirectClicked &&\n                    <Redirect\n                        to={{\n                            pathname: \"/visitingUser\",\n                            state: { user: redirectUser, justVisiting: true }\n                        }}\n                    />\n                }\n                \n                {itemWasFound &&\n                    <div className='item-page-container'>\n                        <div className='item-page-image'>\n                            <img src={item.img_url} alt={item.name} />\n                        </div>\n                        <div className='item-page-content-container'>\n                            <div className=\"item-page-name\">\n                                {itemIsInEditMode ?\n                                    <h1>\n                                        <input\n                                            className=\"edit-box\"\n                                            type=\"text\"\n                                            name=\"name\"\n                                            id=\"name\"\n                                            value={itemDuringChange.name}\n                                            onChange={(e) => this.handleEditChangeName(e)}\n                                        />\n                                        <button className=\"cancel-edit\" onClick={this.changeEditModeItem}>X</button>\n                                        <button className=\"confirm-edit\" onClick={this.updateItemNameValue}>OK</button>\n                                    </h1> :\n                                    <h1>{item.name} {usersOwnItem && <button className=\"edit-button\" onClick={this.changeEditModeItem}>Edit</button>}</h1>}\n                                {errorMessageEditName && <p className=\"item-page-error\">{errorMessageEditName}</p>}\n                                <p>Offered by <span id='user_profile_link' onClick={() => this.goToUserProfile()}>{item.first_name} {item.last_name}</span></p>\n                            </div>\n                            {!usersOwnItem &&\n                                <div className=\"item-page-rent\">\n                                    <div>\n                                        {item.is_available &&\n                                            <form>\n                                                <span className=\"item-page-form-field\">\n                                                    <label htmlFor=\"rentFrom\">Rent from: </label>\n                                                    <input\n                                                        type=\"date\"\n                                                        name=\"rentFrom\"\n                                                        id=\"rentFrom\"\n                                                        value={rentFrom}\n                                                        min={format(new Date(), 'y-MM-d')}\n                                                        onChange={(e) => this.handleChange(e)} />\n                                                </span>\n                                                <span className=\"item-page-form-field\">\n                                                    <label htmlFor=\"rentUntil\">Rent until: </label>\n                                                    <input\n                                                        type=\"date\"\n                                                        name=\"rentUntil\"\n                                                        id=\"rentUntil\"\n                                                        value={rentUntil}\n                                                        min={format(new Date(), 'y-MM-d')}\n                                                        onChange={(e) => this.handleChange(e)} />\n                                                </span>\n                                                <input\n                                                    className=\"item-page-rent-button item-page-form-field\"\n                                                    type=\"button\"\n                                                    value=\"Rent item\"\n                                                    onClick={this.submitForm} />\n                                                <br />\n                                                {errorMessage && <p className=\"item-page-error\">{errorMessage}</p>}\n                                                {rentalConfirmed && <p>Item successfully rented</p>}\n                                            </form>\n                                        }\n                                        {!item.is_available &&\n                                            <div>\n                                                <span>This item is not currently available to be rented</span>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                            }\n                            {usersOwnItem &&\n                                <div className=\"item-page-management\">\n                                    <div>\n                                        {item.is_available &&\n                                            <button className=\"item-page-set-unavailable\" onClick={this.changeItemAvailability}>Available for rental</button>\n\n                                        }\n                                        {!item.is_available &&\n                                            <button className=\"item-page-set-available\" onClick={this.changeItemAvailability}>Unavailable for rental</button>\n                                        }\n                                    </div>\n                                </div>\n                            }\n                            <div className=\"item-page-info\">\n                                <h2>Description</h2>\n                                {descriptionIsInEditMode ?\n                                    <p>\n                                        <textarea\n                                            className=\"edit-box\"\n                                            type=\"text\"\n                                            name=\"description\"\n                                            id=\"description\"\n                                            rows=\"5\"\n                                            value={itemDuringChange.description}\n                                            onChange={(e) => this.handleEditChangeDescription(e)}\n                                        />\n                                        <button className=\"cancel-edit\" onClick={this.changeEditModeDescription}>X</button>\n                                        <button className=\"confirm-edit\" onClick={this.updateItemDescriptionValue}>OK</button>\n                                    </p> :\n                                    <p>{item.description} {usersOwnItem && <button className=\"edit-button\" onClick={this.changeEditModeDescription}>Edit</button>}</p>}\n                                {errorMessageEditDescription && <p className=\"item-page-error\">{errorMessageEditDescription}</p>}\n                            </div>\n                            {/*<div className=\"item-page-reviews\">\n                                <h2>Reviews</h2>\n                            </div>*/}\n                            {item.owner_id > 40 && !usersOwnItem && this.props.user &&\n                                <div className=\"item-page-chat\">\n\n                                    <SendMessage ownerName={`${item.first_name}${item.owner_id}`} loggedInUser={`${this.props.user.first_name}${this.props.user.id}`} secret={this.props.user.email} />\n                                </div>\n                            }\n                        </div>\n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default Item\n","import React from 'react';\nimport '../../../css/reviews.css';\n\nclass UserReview extends React.Component {\n\n  render() {\n    const { review } = this.props\n    //console.log(review)\n    return(\n      <section id='review-body'>\n        <h1 id=\"reviewer_name\">{review.first_name} {review.last_name}</h1>\n        <h1 id='review-title'>{review.title}</h1>\n        <h2 id=\"review_content\">{review.content}</h2>\n        <p id=\"how_long_ago\">{review.howLongAgo} ago</p>\n        <p id='rating'>rating: {review.rating}/5</p>\n      </section>\n    )\n  }\n}\n\nexport default UserReview;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../../css/reviews.css';\n\nclass AddUserReview extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      review: '',\n      rating: null,\n      reviewAdded: false\n    }\n  }\n\n  textInput(e) {\n    const value = e.target.value\n    const name = e.target.name\n    this.setState({\n      [name]: value\n    })\n  }\n\n  changeStarRating(e) {\n    let rating = e.target.value;\n    rating = parseInt(rating);\n    this.setState({\n      rating: rating\n    })\n  }\n\n  async submitUserReview(e) {\n    e.preventDefault();\n    const { review, rating, title } = this.state\n    //console.log(this.props.user)\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}postUserReview`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ review: review, star_rating: rating, user: this.props.user, title: title })\n        }\n    );\n  }\n\n  render() {\n      const { review, title, reviewAdded } = this.state\n      console.log(this.props)\n      if(reviewAdded){\n        return(<Redirect to=\"/profile\"/>)\n      }\n\n      const { user } = this.props\n\n\n      return(\n        <section id=\"review-body\">\n          <p>Leave a review:</p>\n          <form>\n          <input id='new_review_title' placeholder=\"Review title\" type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => this.textInput(e)} />\n          <textarea id='new_review_input' name=\"review\" rows=\"4\" id=\"new_review\" type=\"text\" value={review} onChange={(e) => this.textInput(e)} /> <br/><br/>\n          <select name=\"rating\" id=\"rating\" onChange={(e) => this.changeStarRating(e)}>\n              <option value=\"\">Give {user.first_name} a star rating</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n          </select>\n          <br/>\n          <input id='submit' type=\"submit\" value=\"Submit review\" onClick={(e) => {this.submitUserReview(e); this.props.refreshPage()}}/>\n          </form>\n        </section>\n      )\n    }\n}\n\nexport default AddUserReview;\n","import React from 'react';\nimport UserReview from './UserReview.js';\nimport AddUserReview from './AddUserReview';\nimport '../../../css/reviews.css';\n\n\nclass UserReviews extends React.Component {\n  constructor(props) {\n    super(props)\n    //console.log('AAAAAAAA '+JSON.stringify(props))\n    this.state = {\n      reviews: [],\n      user: ''\n    };\n    this.refresh = this.refresh.bind(this)\n  }\n\n/*\n  async componentDidMount() {\n    await this.getReviews();\n  }\n*/\n\n\n  async componentDidUpdate(prevProps, prevState) {\n    //console.log(this.props)\n    //console.log(prevProps)\n    if(this.props !== prevProps && this.props.user !== ''){\n      this.setState({user: this.props.user})\n      await this.getReviews()\n    }\n\n  }\n\n\n\n  async getReviews() {\n    const { user } = this.state\n    //console.log('USER REVIEWS PROPS '+JSON.stringify(this.props))\n    //console.log('USER = '+JSON.stringify(user))\n\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}getUserReviews`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ user })\n        }\n    );\n    const reviews = await response.json()\n    //console.log(await reviews)\n    this.setState({ reviews: await reviews});\n  }\n\n  formattedReviews() {\n    const { reviews } = this.state;\n      return(\n        <div id=\"review_container\">\n        {reviews.map((review, index) => {\n          console.log(index)\n          return(\n              <UserReview key={index} review={review}/>\n          )\n        })}\n        </div>\n      )\n  }\n  refresh = () => {\n    console.log('refreshing!!!!')\n    this.forceUpdate();\n  }\n\n  render() {\n    const { user, justVisiting } = this.props\n    const { reviews } = this.state\n    //console.log('user @ overall reviews page: '+JSON.stringify(user))\n    if(reviews[0]){\n    return(\n      <section  id='reviews'>\n      <section>\n        <h2>Reviews</h2>\n        {this.formattedReviews(user)}\n      </section>\n      { user && justVisiting && <AddUserReview user={user} /> }\n    </section>\n    )\n    }else{\n      return(\n        <section id='reviews'>\n          <h2>Reviews</h2>\n          <p>Nothing to show...</p>\n\n          {user && justVisiting &&\n            <AddUserReview refreshPage={ (e) => {this.refresh()} } user={user} />}\n        </section>\n      )\n    }\n    }\n\n}\n\nexport default UserReviews;\n","import React, { Component } from 'react';\nimport '../../../css/MyRentals.css'\nimport Card from '../../products/Card'\n\nclass MyRentals extends Component {\n\n    state = {\n        lending: [],\n        borrowing: []\n    }\n\n\n    //FETCH DATA FROM DATABASE FOR EACH USER\n    // ASSIGN IN TO A STATE\n    async componentDidMount() {\n\n        const response = await fetch(`${process.env.REACT_APP_API_URL}myrentals`, {\n            method: 'GET',\n            credentials: 'include'\n        })\n\n        const fromBackend = await response.json()\n\n        if(await fromBackend.lending){\n          this.setState({\n              lending: fromBackend.lending\n          })\n        }\n        if(await fromBackend.borrowing){\n          this.setState({\n              borrowing: fromBackend.borrowing\n          })\n        }\n    }\n\n\n    render() {\n        let lending = this.state.lending\n        let borrowing = this.state.borrowing\n        \n        return (\n\n            <div className=\"my-rentals-container\">\n                <h2>Lending</h2>\n                <div className=\"lending\">\n                    { lending &&\n                    lending.map(({ id, name, price, rented_from, rented_until, trader_first_name, trader_last_name, img_url }) =>\n                        <Card\n                            key={id}\n                            name={name}\n                            price={price}\n                            rented_from={rented_from}\n                            rented_until={rented_until}\n                            img_url={img_url}\n                            trader_first_name={trader_first_name}\n                            trader_last_name={trader_last_name}\n                            cardType='myrentals-page-card' />\n                    )\n                  } { !lending[0] &&\n                      <p>No items lended out</p>\n                  }\n                </div>\n                <h2>Borrowing</h2>\n                <div className=\"borrowing\">\n                    { borrowing &&\n                    borrowing.map(({ id, name, price, rented_from, rented_until, trader_first_name, trader_last_name, img_url }) =>\n                        <Card\n                            key={id}\n                            name={name}\n                            price={price}\n                            rented_from={rented_from}\n                            rented_until={rented_until}\n                            img_url={img_url}\n                            trader_first_name={trader_first_name}\n                            trader_last_name={trader_last_name}\n                            cardType='myrentals-page-card' />\n                    )\n                  } { !borrowing[0] &&\n                      <p>No items borrowed</p>\n                  }\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MyRentals;\n","import React from 'react';\nimport Things from '../../products/Things.js';\n\nclass UserPosts extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is lending</h1>\n        <div id=\"posts\">\n\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserPosts;\n","import React from 'react';\nimport Things from '../../products/Things.js';\n\n\nclass UserLookingFor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is looking for</h1>\n        <div id=\"posts\">\n\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserLookingFor;\n","export default __webpack_public_path__ + \"static/media/template_profile_picture.16b74247.png\";","import React from 'react';\nimport '../../../css/Profile_page.css';\nimport UserReviews from './UserReviews.js';\nimport UserPosts from './UserPosts.js';\nimport UserLookingFor from './UserLookingFor';\nimport MyRentals from './MyRentals.js';\nimport profile_picture from './template_profile_picture.png';\n//import React, { useState } from 'react'\nimport { ChatEngine, getOrCreateChat } from 'react-chat-engine'\n//TODO make dynamic import for profile pictures based on the user\n//and a link to their pp from the db\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      star_rating: `No reviews...`,\n      justVisiting: null,\n      newLoad: true\n    };\n  }\n  async componentDidMount() {\n    console.log('redirected')\n\n    try{\n    if(!this.props.location.state.justVisiting){\n      this.props.cookieCheck();\n      await this.getStarRating(this.props.state.user)\n      this.setState({\n        user: this.props.user,\n        justVisiting: false\n      })\n    }\n  }catch{}\n  try{\n      this.setState({\n        user: this.props.location.state.user,\n        justVisiting: true\n      })\n      await this.getStarRating(this.props.location.state.user)\n    }catch{}\n\n\n    //this.setState({\n    //  user: await this.props.checkWhoIsSignedIn()\n    //})\n  }\n  async componentDidUpdate(PrevProps, prevState) {\n    if(this.state.star_rating === 'loading...'){\n      await this.getStarRating(this.state.user)\n    }\n    if(this.props !== PrevProps){\n      this.forceUpdate()\n    }\n  }\n\n  async getStarRating(user) {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}getStarRating`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ id: user.id })\n        }\n    );\n    const { rating } = await response.json()\n    if(!isNaN(rating)){\n      this.setState({\n        star_rating: rating\n      })\n    }\n\n  }\n\n  async getUser(user) {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}getStarRating`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ id: user.id })\n        }\n    );\n  }\n\n  render() {\n    let { user } = this.props\n    let justVisiting = false\n    const{ newLoad } = this.state\n    console.log(newLoad)\n    try{\n        justVisiting  = this.props.location.state\n\n      if(justVisiting){\n        user = this.props.location.state.user\n        //console.log(user)\n        //this.getUser(user)\n      }\n    }catch{\n\n    }\n    console.log(justVisiting)\n    console.log(user.img_url)\n    //console.log('user @ profile render: '+JSON.stringify(user))\n    //console.log(user.first_name)\n    if(user){\n      return(\n\n          <section className='flex_container'>\n            <div id='left'>\n              <img src={user.img_url} id='profile_picture'/>\n              <h1>{`${user.first_name} ${user.last_name}`}</h1>\n              <p>Email: <a href={`mailto:${user.email}`}>{user.email}</a></p>\n              <p>Average rating: {this.state.star_rating}</p>\n              <p>City: {user.city}</p>\n              <p>User since: {user.created_at.slice(0,4)}</p>\n            </div>\n            <div id='centre_spacer' />\n            <div id='right'>\n              { !justVisiting &&\n                <MyRentals />\n              }\n                <UserReviews justVisiting={justVisiting} user={user} />\n            </div>\n          </section>\n        \n      )\n    }else{\n      return(\n        <section>Loading...</section>\n      )\n    }\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport ImageUpload from '../framework/ImageUpload';\n\n\nclass PostItem extends Component {\n\n    initialState = {\n        name: '',\n        nameCharacterLimit: 35,\n        description: '',\n        descriptionCharacterLimit: 100,\n        categories: null,\n        price: null,\n        category: null,\n        age_restriction: null,\n        owner_id: null,\n        img_url: '',\n        previous_submit_successful: false,\n    }\n\n    state = this.initialState;\n\n    async componentDidMount() {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}categories`, {\n            method: 'GET',\n            credentials: 'include'\n        })\n        const categories = await response.json()\n        this.setState({ categories })\n    }\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n\n    handleImgUrl = (url) => {\n        //console.log(url,'Url on PostItem')\n        this.setState({ img_url: url })\n    }\n\n    handleChange = (e) => {\n        console.log('HANDLE CHANGE FUNCTION')\n\n        const { name, value } = e.target\n        if (name === 'name') {\n            this.setState({ name: value })\n        } else if (name === 'description') {\n            this.setState({ description: value })\n        } else if (name === 'category') {\n            this.setState({ category: parseInt(value, 10) })\n        } else if (name === 'age_restriction') {\n            this.setState({ age_restriction: parseInt(value, 10) })\n        } else if (name === 'price') {\n            let price = parseFloat(value).toFixed(2);\n            price = parseFloat(price)\n            this.setState({ price })\n            //console.log(this.state.price)\n        }\n    }\n\n\n    async handleSubmit(e) {\n        //console.log('Submitting on PostItem.js')\n        e.preventDefault();\n        this.resetForm();\n\n        const { name, description, price, category, age_restriction, img_url } = this.state;\n        const ownerID = this.props.user.id\n        const cityId = this.props.user.city_id\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}postItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ name, description, price, category, age_restriction, ownerID, img_url, cityId })\n            }\n        );\n\n        const fromBackend = await response.json()\n        console.log(fromBackend, 'fromBackend')\n\n        if (fromBackend.submitted) {\n            this.setState({ previous_submit_successful: true })\n            // Can use this to add a green tick to page or something..\n        }\n\n        console.log(this.state.previous_submit_successful)\n\n        //const test = await response.json();\n        //console.log(test)\n        //console.log(document.cookie)\n\n    }\n\n    allFieldsEntered = () => {\n        const { name, description, price, category, age_restriction, img_url } = this.state;\n\n        const buttonDisabled = !name || !description || !price || !category || !age_restriction || !img_url\n\n        return !buttonDisabled\n    }\n\n    validateLive(info) {\n        const { name, nameCharacterLimit, description, descriptionCharacterLimit } = this.state;\n\n        const descriptionCharacterAlert = descriptionCharacterLimit - 10\n        const nameRemainingCharactersAlert = nameCharacterLimit - 5\n\n        if (info === name && name.length > nameRemainingCharactersAlert) {\n            const countDown = nameCharacterLimit - name.length\n            if (countDown === 0) {\n                return;\n            } else {\n                return (<p className=\"error errorItemTitle\">Remaining characters: {countDown}/{nameCharacterLimit}</p>)\n            }\n        } else if (info === description && description.length > descriptionCharacterAlert) {\n            const countDown = descriptionCharacterLimit - description.length\n            if (countDown === 0) {\n                return;\n            } else {\n                return (<p className=\"error errorItemDescription\">Remaining characters: {countDown}/{descriptionCharacterLimit}</p>)\n            }\n        }\n    }\n\n\n    render() {\n        const { name, nameCharacterLimit, description, descriptionCharacterLimit, price, category, age_restriction, categories, img_url, previous_submit_successful } = this.state;\n\n\n        return (\n            <>\n                <h1 className=\"centered\">Post an advert for an item to be made available for rental</h1>\n\n                <div className=\"PostItems-container\">\n\n                    <div className=\"PostItemsImage-container\">\n                        <ImageUpload img_url={img_url} handleImgUrl={this.handleImgUrl} />\n                    </div>\n\n                    <div className=\"PostItemsDetails-container\">\n                        <form className='SubmissionForm SubmissionFormPostItem' onSubmit={(e) => this.handleSubmit(e)}>\n                            <section>\n\n                                <label>Title </label>\n                                <input type='text' name='name' placeholder=\"What are you lending?\" value={name} maxlength={nameCharacterLimit} onChange={this.handleChange} />\n                                <div>{this.validateLive(name)}</div>\n\n                            </section>\n\n                            <section>\n                                <label>Description </label>\n                                <input type='text' name='description' placeholder=\"Accurately describe your item in a few words\" value={description} maxlength={descriptionCharacterLimit} onChange={this.handleChange}></input>\n                                <div>{this.validateLive(description)}</div>\n                            </section>\n\n\n                            <section>\n                                <label> Price: </label>\n                                <input type=\"number\" name='price' placeholder=\"£ / day\" value={price} onChange={this.handleChange} step=\"0.01\" min=\"0\" />\n                            </section>\n\n\n                            {categories &&\n                                <section>\n                                    <label>Category </label>\n                                    <select name=\"category\" value={category} onChange={this.handleChange}>\n                                        <option>Please select a category</option>\n                                        {categories.map(({ id, name, description, imgurl }) =>\n                                            <option key={id} id={id} name={category} value={id}>{name}</option>\n                                        )}\n                                    </select>\n                                </section>\n                            }\n\n                            <section>\n                                <label>Age restriction</label>\n                                <select name=\"age_restriction\" value={age_restriction} onChange={this.handleChange}>\n                                    <option>Please select an age restriction</option>\n                                    <option value='1'>No restriction</option>\n                                    <option value=\"18\">18 and over</option>\n                                </select>\n                            </section>\n\n                            <input disabled={!this.allFieldsEntered()} type='submit' value='Post item' />\n                        </form>\n\n                        {previous_submit_successful && <Redirect to=\"/page\" />}\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n\n\n\n} export default PostItem;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\n\nclass Category extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <div id=\"info_container\">\n                  <h2>{this.props.name}</h2>\n                  <h2>{this.props.description}</h2>\n                </div>\n                {/*<h2>{imgurl}</h2>*/}\n                <div id=\"img_container\">\n                  <img id=\"category_card_img\" src={this.props.imgurl} alt={this.props.id}/>\n                </div>\n            </div>\n\n        )\n    }\n\n}\n\n/*\nhandleClick(arg) {\n    console.log(arg);\n}\n*/\n/*\nexport default function Category({ id, name, description, imgurl }) {\n    //console.log(imgurl);\n    return (\n        <div className=\"category\" onClick={handleClick(id)}>\n            <h2>{name}</h2>\n            <h2>{description}</h2>\n            <img src={imgurl} alt={id}/>\n        </div>\n\n    )\n\n}\n*/\n\nexport default Category;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/categories.css';\nimport Category from './Category';\nimport ThingsHandler from '../framework/ThingsHandler.js';\nimport Home from '../home/Home.js';\n\nclass Categories extends Component {\n\n    state = {\n        categories: [],\n        hasChosen: false,\n        chosenValue: ''\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n        const response = await fetch(`${process.env.REACT_APP_API_URL}categories`, {\n            method: 'GET',\n            credentials: 'include'\n        })\n        const categories = await response.json()\n        this.setState({ categories })\n    }\n\n    handleClick(chosenValue) {\n        //console.log(chosenValue);\n        //return (<Redirect to=\"/\"/>);\n        this.setState({chosenValue});\n        this.setState({hasChosen: true});\n    }\n\n    render() {\n        const { categories, hasChosen, chosenValue } = this.state\n\n        if(hasChosen){\n            console.log('CHOSEN CATEGORY VALUE: '+chosenValue)\n            //call parent method that goes to things with chosenValue\n            return ( <Home searchParams={ {categoryId: chosenValue} } onHomePage={false} /> );\n        }\n\n        //console.log(categories);\n        if (categories.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n            //console.log(categories[0].imgurl);\n\n            return (\n                <div className='item-list'>\n                    {categories.map(({ id, name, description, imgurl }) =>\n                        <Category key={id} id={id} name={name} description={description} imgurl={imgurl} handleClick={(arg) => this.handleClick(arg)}/>\n                    )}\n                </div>\n\n            )\n        }\n    }\n\n} export default Categories;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\nimport '../../css/Card.css';\n\nclass Individual extends Component {\n\n    state = {\n        individualData: null\n    }\n\n    async componentDidMount() {\n        const { id, name, cv_img, description, email, github_link, linkedin_link } = this.props;\n        const individualData = { id, name, cv_img, description, email, github_link, linkedin_link };\n        this.setState({ individualData });\n    }\n\n    render() {\n        const { individualData } = this.state;\n        if (!individualData) {\n            return (<h1>Loading...</h1>);\n        } else {\n            return (\n                <div className=\"category\" onClick={() => this.props.handleClick(individualData)}>\n                    <div id=\"info_container\">\n                        <h2>{individualData.name}</h2>\n                        {/*<h2>{this.props.description}</h2>*/}\n                        {/*<h2>{this.props.email}</h2>*/}\n                        {/*<h2>{this.props.number}</h2>*/}\n                        {/*<h2>{this.props.link}</h2>*/}\n                    </div>\n                    <div id=\"img_container\">\n                        <img id=\"category_card_img\" className='things-page-card-img' src=\"logo192.png\" alt={individualData.name} style={{ height: '310px' }} />\n                        {/*<img id=\"category_card_img\" src={\"logo192.png\"} alt={this.props.id} />*/}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Individual;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\n\nclass ChosenIndividual extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <>\n                <button className='navButton' onClick={() => this.props.backToTeam()}>Back to Team</button>\n                <div class=\"flex-container\">\n\n                    <div class=\"flex-child teamMemberPic\">\n                        <img src=\"logo512.png\" alt={this.props.id} />\n                    </div>\n\n                    <div class=\"flex-child teamMemberInfo\">\n                        <h1 className=\"underline\">{this.props.chosenIndividual.name}</h1>\n                        <h2 className=\"infoBox\">{this.props.chosenIndividual.description}</h2>\n                        <div className=\"infoBox\">\n                            <h2>Email: {this.props.chosenIndividual.email}</h2>\n                            <h2>GitHub: <a href={this.props.chosenIndividual.github_link}> {this.props.chosenIndividual.github_link} </a> </h2>\n                            <h2>LinkedIn: <a href={this.props.chosenIndividual.linkedin_link}> {this.props.chosenIndividual.linkedin_link} </a> </h2>\n                        </div>\n                    </div>\n\n                </div>\n            </>\n        );\n    }\n\n}\n\n/*\n<>\n                <button onClick={() => this.props.backToTeam()}>Back to Team</button>\n                <div id=\"img_container\">\n                    <img className='things-page-card-img individual_img' src=\"logo192.png\" alt={this.props.id} style={{ height: '192px' }} />\n                    <img id=\"category_card_img\" src={\"logo192.png\"} alt={this.props.id} />\n                    </div>\n                    <div id=\"individual_info\">\n                        <h1>{this.props.chosenIndividual.name}</h1>\n                        <h2>{this.props.chosenIndividual.description}</h2>\n                        <h2>{this.props.chosenIndividual.email}</h2>\n                        <h2>{this.props.chosenIndividual.number}</h2>\n                        <h2>{this.props.chosenIndividual.link}</h2>\n                    </div>\n                </>\n*/\n\nexport default ChosenIndividual;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/categories.css';\nimport '../../css/About.css';\nimport Individual from './Individual';\nimport ChosenIndividual from './ChosenIndividual';\n\nclass About extends Component {\n\n    state = {\n        teamMembers: [],\n        hasChosen: false,\n        chosenIndividual: null\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n        const response = await fetch(`${process.env.REACT_APP_API_URL}teamMembers`, {\n            method: 'GET',\n            credentials: 'include'\n        });\n        const teamMembers = await response.json();\n        console.log(teamMembers);\n        this.setState({ teamMembers });\n    }\n\n    handleClick(individualData) {\n        console.log(individualData);\n        //return (<Redirect to=\"/\"/>);\n        this.setState({ chosenIndividual: individualData });\n        this.setState({ hasChosen: true });\n    }\n\n    backToTeam(){\n        this.setState({ hasChosen: false });\n    }\n\n    render() {\n        const { teamMembers, hasChosen, chosenIndividual } = this.state\n\n        if (hasChosen) {\n            //call parent method that goes to things with chosenValue\n            return (<ChosenIndividual chosenIndividual={chosenIndividual} backToTeam={(arg) => this.backToTeam(arg)}/>);\n        }\n\n        //console.log(categories);\n        if (teamMembers.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n            //console.log(categories[0].imgurl);\n\n            return (\n                <>\n                    <h1>Meet the team!</h1>\n                    <h1>Software Engineers:</h1>\n                    <div className='item-list'>\n                        {teamMembers.map(({ id, name, cv_img, description, email, github_link, linkedin_link }) =>\n                            <Individual key={id} id={id} name={name} cv_img={cv_img} description={description} email={email} github_link={github_link} linkedin_link={linkedin_link} handleClick={(arg) => this.handleClick(arg)} />\n                        )}\n                    </div>\n                </>\n            )\n        }\n    }\n\n} export default About;\n","import { ChatEngine, getOrCreateChat, ChatFeed } from 'react-chat-engine'\nimport '../../../css/Chat.css'\n\nexport default function MessagePage({ user }) {\n\n    console.log(user.first_name + user.id)\n    // return <DirectChatPage user={`${user.first_name}${user.id}`} email={user.email}/>\n    return <ChatEngine\n        height='99vh'\n        // userName={user}\n        userName={`${user.first_name}${user.id}`}\n        userSecret={user.email}\n        // userName='Darshan1'\n        // userSecret='darshan1@email.com'\n\n        projectID='738df1f7-4780-4c48-b34f-0938273bcb5d'\n        renderChatSettings={() => { }}\n        renderNewChatForm={() => {}}\n       \n    // renderChatFeed={(chatAppState) => {}}\n\n    //Test\n\n    />\n}\n\n// ","import React from 'react';\nimport '../../index.css';\n\nexport default function GenericPage() {\n\n\n    return (\n        <>\n            <h1>Item has been successfully posted!</h1>\n            <h1>✅</h1>\n        </>\n    )\n}","import React, { Component } from 'react';\nimport './index.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink,\n    Redirect\n} from 'react-router-dom';\nimport Home from './components/home/Home';\nimport CreateAccount from './components/user/CreateAccount';\nimport Login from './components/user/Login';\nimport Item from './components/products/Item'\nimport Profile from './components/user/profile/Profile.js';\nimport PostItem from './components/products/PostItem';\nimport MyRentals from './components/user/profile/MyRentals'\nimport Categories from './components/products/Categories';\nimport ThingsHandler from './components/framework/ThingsHandler.js';\nimport About from './components/home/About';\nimport MessagePage from './components/user/profile/MessagePage.js';\nimport GenericPage from './components/framework/GenericPage';\n\nclass App extends Component {\n\n    state = { isLoggedIn: false, user: '', redirect: false };\n\n    async componentWillMount() {\n        await this.cookieCheck()\n    }\n\n    async componentDidUpdate(PrevProps, PrevState) {\n      if(this.state.redirect !== PrevState.redirect) {\n        this.setState({redirect: false})\n      }\n    }\n\n    async cookieCheck(){  //Checks who is signed in and if anyone is, sets the user and toggles isLoggedIn\n      const user = await this.checkWhoIsSignedIn()\n      //if(await user.id){\n        //this.toggleLoggedIn(this.state.isLoggedIn)\n        this.toggleLoggedIn(user);\n        this.setUser(user)\n      //}\n    }\n\n    async checkWhoIsSignedIn() {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}checkWhoIsSignedIn`, { method: 'GET', credentials: 'include' });\n        const user = await response.json();\n        return await user;\n    }\n\n    async toggleLoggedIn(arg) {\n        /*\n        if (arg) {\n            this.setState({ isLoggedIn: false });\n        } else {\n            this.setState({ isLoggedIn: true });\n        }\n        */\n        if (arg) {\n            this.setState({ isLoggedIn: true });\n        } else {\n            this.setState({ isLoggedIn: false });\n        }\n    }\n\n    setUser(updatedUserValue) {\n        this.setState(state => ({ ...state, user: updatedUserValue }));\n    }\n\n/*\n    async submitSearch(params) {\n        this.setState({\n          hasSearched: true,\n          searchParams: params\n        })\n    }\n*/\n  async logout() {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}logout`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n    );\n    const isLoggedOut = await response.json();\n    if (isLoggedOut) {\n        this.setState({redirect: true})\n        await this.cookieCheck();\n    }\n  }\n\n    render() {\n        const { redirect, isLoggedIn, user, hasSearched, searchParams } = this.state;\n        //console.log(\"USER:\")\n        //console.log(user);\n        return (\n\n            <Router>\n                <div className=\"header\">\n                    RENT-A-THING\n                </div>\n                { !isLoggedIn &&\n                  <nav className=\"navBar\">\n                      <NavLink className=\"navButton noUnderline\" to=\"/home\" activeClassName=\"active\">Home</NavLink>\n                      <NavLink className=\"navButton noUnderline\" to=\"/categories\" activeClassName=\"active\">Categories</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/about\" activeClassName=\"active\">About</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/login\" activeClassName=\"active\">Login</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/createaccount\" activeClassName=\"active\">Create Account</NavLink>\n                </nav>\n                }\n                { isLoggedIn &&\n                  <nav className=\"navBar\">\n                      <NavLink className=\"navButton noUnderline\" to=\"/home\" activeClassName=\"active\">Home</NavLink>\n                      <NavLink className=\"navButton noUnderline\" to=\"/categories\" activeClassName=\"active\">Categories</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/about\" activeClassName=\"active\">About</NavLink>\n                      <div className=\"navButton floatRight noUnderline\" onClick={ () => { this.logout() } }>Logout</div>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/myAccount\" activeClassName=\"active\">Account</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/postItem\" activeClassName=\"active\">Post a new item</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/messages\" activeClassName=\"active\">My Messages</NavLink>\n                  </nav>\n                }\n                { redirect && <Redirect to='/' />}\n                <main>\n                <Switch>\n                    <Route exact path={[\"/\", \"/home\"]}>\n                        <Home cookieCheck={ () => this.cookieCheck() } onHomePage={true} />\n                    </Route>\n                    <Route exact path=\"/categories\">\n                        <Categories cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/createaccount\">\n                        <CreateAccount cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/myaccount\">\n                        <Profile user={user} cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/about\">\n                        <About cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/Item\">\n                        <Item user={user} cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/postitem\">\n                        <PostItem  user = {user} cookieCheck={() => this.cookieCheck()()}/>\n                    </Route>\n                    <Route path=\"/myrentals\">\n                         <MyRentals cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/visitingUser\" render={(props) => <Profile {...props} />}/>\n                    <Route path=\"/messages\">\n                         <MessagePage user={user}cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/page\">\n                         <GenericPage user={user}cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                </Switch>\n                </main>\n\n                <div className=\"footer\">\n                    <p>Legal stuff | Contact info | etc.</p>\n                    {isLoggedIn && <p>Logged in as {user.first_name}</p>}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}