[{"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/index.js":"1","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/App.js":"2","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Home.js":"3","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js":"4","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Login.js":"5","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Things.js":"6","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js":"7","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Card.js":"8","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Item.js":"9"},{"size":167,"mtime":1625572880540,"results":"10","hashOfConfig":"11"},{"size":3871,"mtime":1625739859745,"results":"12","hashOfConfig":"11"},{"size":2243,"mtime":1625735783718,"results":"13","hashOfConfig":"11"},{"size":10390,"mtime":1625735783717,"results":"14","hashOfConfig":"11"},{"size":4406,"mtime":1625735783718,"results":"15","hashOfConfig":"11"},{"size":1230,"mtime":1625740980890,"results":"16","hashOfConfig":"11"},{"size":1816,"mtime":1625735783718,"results":"17","hashOfConfig":"11"},{"size":623,"mtime":1625742117292,"results":"18","hashOfConfig":"11"},{"size":2002,"mtime":1625742221590,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"kg5duh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/index.js",[],["42","43"],"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/App.js",[],"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Home.js",["44"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport SearchBar from './SearchBar';\nimport Things from './Things';\n\nclass Home extends Component {\n\n    state = {\n        submissionConfirmed: false,\n        searchCriteria: {}\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    /*\n    formSubmission(event) {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ submissionConfirmed: true });\n        //this\n        //const response = await fetch(.../thing);\n        //const data = await response.jsonStringify();\n        //if(data === 200){\n        //    redirect to things \n        //} else {\n        //    redirect to error page\n        //}\n    }\n*/\n    submitSearch(arg) {\n        console.log(arg);\n        this.setState({ submissionConfirmed: true, searchCriteria: arg });\n\n\n    }\n\n    render() {\n        const { submissionConfirmed, searchCriteria } = this.state;\n\n        if (submissionConfirmed) {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <Things searchCriteria={searchCriteria} />\n                </>\n            );\n        }\n        else {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <main>\n                        <h1>Welcome! Fill in the boxes above if you know what your after!</h1>\n                        <h1>If you are not sure what you want, check out the <span className=\"highlight\">Categories</span> page!</h1>\n                        <h1>If you just want to browse, go straight to the <span className=\"highlight\">Things</span> page!</h1>\n                    </main>\n                </>\n            );\n        }\n    }\n}\n\nexport default Home;","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass CreateAccount extends Component {\n\n    state = {\n      valid_new_user: false,\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      DoB: \"\",\n      phone_number: \"\",\n      address_1: \"\",\n      address_2: \"\",\n      city: \"\",\n      postcode: \"\",\n      validationMessage: null,\n      validEmail: true,\n      successfullySubmitted: false\n     }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    updateState(e) {\n\n    }\n\n    updateInfo(e) {\n      const { name, value } = e.target;\n      this.setState({\n        [name]: value\n      })\n    }\n\n    async submitEmailInfo(e) { //async\n      e.preventDefault();\n      const { email, password1, password2 } = this.state\n      if(this.validateSubmit('first')) //And the user doesnt exist already\n          {\n        this.setState({\n          valid_new_user: true,\n          validationMessage: null\n        })\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async submitUser(e) {\n      e.preventDefault()\n      if(this.validateSubmit('second')){\n        this.setState({validationMessage: null})\n        const toBeSent = {\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          password1: this.state.password1,\n          password2: this.state.password2,\n          DoB: this.state.DoB,\n          phone_number: this.state.phone_number,\n          address_1: this.state.address_1,\n          address_2: this.state.address_2,\n          city: this.state.city,\n          postcode: this.state.postcode\n         }\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/createAccount`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(toBeSent)\n            }\n        );\n        const isSuccess = await response.json()\n\n        if(isSuccess.code === 200){\n          this.props.cookieCheck()\n          this.setState({ successfullySubmitted: true })\n        }\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n      if(prevState.email !== this.state.email && this.state.email !== ''){\n        await this.checkValidEmail()\n      }\n    }\n\n    async checkValidEmail() {\n      const { email } = this.state\n      const response = await fetch(\n          `${process.env.REACT_APP_API_URL}/isValidNewEmail`,\n          {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ email })\n          }\n        )\n        const isEmailValid = await response.json()\n        if(await isEmailValid !== this.state.validEmail){\n          this.setState({ validEmail: isEmailValid})\n        }\n    }\n\n    validateLive(info) {\n      const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      switch(info) {\n        case first_name: {}\n        break\n        case last_name: {}\n        break\n        case email: {}\n        break\n        case password1: {\n          if(password1.length < 8){\n            return (<p className=\"error\">Password must be at least 8 characters</p>)\n          }\n        }\n        break\n        case password2: {\n          if(password2 !== password1){\n            return (<p className=\"error\">Passwords do not match</p>)\n          }\n        }\n        break\n        case DoB: {}\n        break\n        case phone_number: {\n          if(phone_number[0] === \"+\"){\n            if(phone_number.length !== 12) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }else{\n            if(phone_number.length !== 11) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n          for(const i of phone_number){\n            if(isNaN(i)){\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n        }\n        break\n        case address_1: {}\n        break\n        case address_2: {}\n        break\n        case city: {}\n        break\n        case postcode: {} //Link to royal mail postcodes API\n        break\n      }\n    }\n\n    validateSubmit(which) {\n      const { validEmail, password1, password2, phone_number } = this.state\n\n      if(which === 'first'){\n        if(password2 !== password1 || password1.length < 8 || !validEmail){\n          return false\n        }else{\n          return true;\n        }\n      }else if(which === 'second'){\n        if(phone_number[0] === \"+\"){\n          if(phone_number.length !== 12) {\n            return false\n          }\n        }else{\n          if(phone_number.length !== 11) {\n            return false\n          }\n        }\n        for(const i of phone_number){\n          if(isNaN(i)){\n            return false\n          }\n        }\n        return true;\n      }\n    }\n\n    render() {\n      const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      if(successfullySubmitted){\n        return (<Redirect to=\"/\"/>);\n      }\n\n      if(!valid_new_user) {\n          return(\n            <main>\n                <div>\n                  <h1>CreateAccount</h1>\n                  <form className=\"SubmissionForm\">\n                      <section>\n                        <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                        <input type=\"text\" name=\"email\" id=\"email\" value={ email } onChange={(e) => this.updateInfo(e)}/>\n                        { !validEmail && <p className=\"error\" >email address unavailable</p>}\n                      </section>\n                      <section>\n                        <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                        <input type=\"text\" name=\"password1\" id=\"password1\" value={ password1 } onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password1)}</div>\n                      </section>\n                      <section>\n                        <label htmlFor=\"password2\" value=\"Re-enter password: \" value={ password2 } >Re-enter password: </label>\n                        <input type=\"text\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password2)}</div>\n                      </section>\n                      <section>\n                        <input type=\"submit\"  onClick={(e) => this.submitEmailInfo(e)} value=\"Submit\"/>\n                        {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                      </section>\n                </form>\n                </div>\n              </main>\n          );\n      }\n      else{\n          return(\n            <main>\n                <div>\n                  <h1>User details:</h1>\n                  <form className=\"SubmissionForm\">\n                    <section>\n                      <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                      <input type=\"text\" name=\"first_name\" id=\"first_name\" value={ first_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                      <input type=\"text\" name=\"last_name\" id=\"last_name\" value={ last_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                      <input type=\"date\" name=\"DoB\" id=\"DoB\" value={ DoB } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                      <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={ phone_number } onChange={(e) => this.updateInfo(e)}/>\n                      <div>{this.validateLive(phone_number)}</div>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                      <input type=\"text\" name=\"address_1\" id=\"address_1\" value={ address_1 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                      <input type=\"text\" name=\"address_2\" id=\"address_2\" value={ address_2 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                      <input type=\"text\" name=\"city\" id=\"city\" value={ city } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                      <input type=\"text\" name=\"postcode\" id=\"postcode\" value={ postcode } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <input type=\"submit\" name=\"submit\" value=\"Submit\" onClick={(e) => this.submitUser(e)}/>\n                      {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                    </section>\n                </form>\n                </div>\n              </main>\n          )\n      }\n    }\n}\n\nexport default CreateAccount;\n","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Login.js",[],"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Things.js",["62"],"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js",["63","64"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n        dateFrom: '',\n        dateTo: '',\n        location: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        this.props.submitSearch(this.state);\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <main>\n                <h1></h1>\n                <form type=\"submit\" className=\"searchBar\">\n                    <span><input type=\"text\" name=\"item\" id=\"item\" value={item} onChange={(e) => this.handleChange(e)} placeholder='item' /></span>\n                    <span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    <span><button onClick={(e) => this.formSubmission(e)} >Click Me!</button></span>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default SearchBar;","/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Card.js",["65","66"],"/Users/darshan/apr-2021-appliances/FrontEnd/web-app/src/Item.js",["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":55,"column":15,"nodeType":"75","messageId":"76","endLine":55,"endColumn":20},{"ruleId":"73","severity":1,"message":"78","line":55,"column":22,"nodeType":"75","messageId":"76","endLine":55,"endColumn":31},{"ruleId":"73","severity":1,"message":"79","line":55,"column":33,"nodeType":"75","messageId":"76","endLine":55,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":110,"column":5,"nodeType":"82","messageId":"83","endLine":114,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":137,"column":7,"nodeType":"86","messageId":"87","endLine":183,"endColumn":8},{"ruleId":"88","severity":1,"message":"89","line":138,"column":26,"nodeType":"90","messageId":"91","endLine":138,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":140,"column":25,"nodeType":"90","messageId":"91","endLine":140,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":142,"column":21,"nodeType":"90","messageId":"91","endLine":142,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":144,"column":25,"nodeType":"90","messageId":"91","endLine":148,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":150,"column":25,"nodeType":"90","messageId":"91","endLine":154,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":156,"column":19,"nodeType":"90","messageId":"91","endLine":156,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":158,"column":28,"nodeType":"90","messageId":"91","endLine":173,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":175,"column":25,"nodeType":"90","messageId":"91","endLine":175,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":177,"column":25,"nodeType":"90","messageId":"91","endLine":177,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":179,"column":20,"nodeType":"90","messageId":"91","endLine":179,"endColumn":22},{"ruleId":"88","severity":1,"message":"89","line":181,"column":24,"nodeType":"90","messageId":"91","endLine":181,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":238,"column":80,"nodeType":"94","endLine":238,"endColumn":99},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":51,"column":17,"nodeType":"97","endLine":51,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":2,"column":16,"nodeType":"75","messageId":"76","endLine":2,"endColumn":24},{"ruleId":"73","severity":1,"message":"98","line":2,"column":26,"nodeType":"75","messageId":"76","endLine":2,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"100","line":13,"column":21,"nodeType":"97","endLine":13,"endColumn":144},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","'password1' is assigned a value but never used.","'password2' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Switch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]