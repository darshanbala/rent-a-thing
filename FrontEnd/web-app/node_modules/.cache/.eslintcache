[{"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/index.js":"1","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/App.js":"2","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js":"3","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Login.js":"4","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Home.js":"5","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Things.js":"6","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js":"7","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Card.js":"8","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Item.js":"9","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Logout.js":"10","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/PostItem.js":"11","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/MyRentals.js":"12","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Categories.js":"13","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Category.js":"14","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Profile.js":"15","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js":"16","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js":"17","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js":"18","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js":"19","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js":"20","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/ThingsHandler.js":"21"},{"size":167,"mtime":1625576710502,"results":"22","hashOfConfig":"23"},{"size":5387,"mtime":1625828815465,"results":"24","hashOfConfig":"23"},{"size":10401,"mtime":1625771985416,"results":"25","hashOfConfig":"23"},{"size":4409,"mtime":1625771985421,"results":"26","hashOfConfig":"23"},{"size":2778,"mtime":1625829792393,"results":"27","hashOfConfig":"23"},{"size":1265,"mtime":1625830299739,"results":"28","hashOfConfig":"23"},{"size":1816,"mtime":1625676935270,"results":"29","hashOfConfig":"23"},{"size":1383,"mtime":1625771985413,"results":"30","hashOfConfig":"23"},{"size":2672,"mtime":1625771985419,"results":"31","hashOfConfig":"23"},{"size":1007,"mtime":1625772004353,"results":"32","hashOfConfig":"23"},{"size":2874,"mtime":1625771985423,"results":"33","hashOfConfig":"23"},{"size":1826,"mtime":1625771985423,"results":"34","hashOfConfig":"23"},{"size":1681,"mtime":1625827980288,"results":"35","hashOfConfig":"23"},{"size":964,"mtime":1625771985414,"results":"36","hashOfConfig":"23"},{"size":2574,"mtime":1625823307592,"results":"37","hashOfConfig":"23"},{"size":394,"mtime":1625772540516,"results":"38","hashOfConfig":"23"},{"size":2259,"mtime":1625772004359,"results":"39","hashOfConfig":"23"},{"size":409,"mtime":1625772544277,"results":"40","hashOfConfig":"23"},{"size":499,"mtime":1625772004358,"results":"41","hashOfConfig":"23"},{"size":2298,"mtime":1625772004351,"results":"42","hashOfConfig":"23"},{"size":1665,"mtime":1625829999968,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"oe3iu1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/index.js",[],["94","95"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/App.js",["96","97","98"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass CreateAccount extends Component {\n\n    state = {\n      valid_new_user: false,\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      DoB: \"\",\n      phone_number: \"\",\n      address_1: \"\",\n      address_2: \"\",\n      city: \"\",\n      postcode: \"\",\n      validationMessage: null,\n      validEmail: true,\n      successfullySubmitted: false\n     }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    async componentDidMount() {\n      this.props.cookieCheck();\n  }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    updateState(e) {\n\n    }\n\n    updateInfo(e) {\n      const { name, value } = e.target;\n      this.setState({\n        [name]: value\n      })\n    }\n\n    async submitEmailInfo(e) { //async\n      e.preventDefault();\n      const { email, password1, password2 } = this.state\n      if(this.validateSubmit('first')) //And the user doesnt exist already\n          {\n        this.setState({\n          valid_new_user: true,\n          validationMessage: null\n        })\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async submitUser(e) {\n      e.preventDefault()\n      if(this.validateSubmit('second')){\n        this.setState({validationMessage: null})\n        const toBeSent = {\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          password1: this.state.password1,\n          password2: this.state.password2,\n          DoB: this.state.DoB,\n          phone_number: this.state.phone_number,\n          address_1: this.state.address_1,\n          address_2: this.state.address_2,\n          city: this.state.city,\n          postcode: this.state.postcode\n         }\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/createAccount`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(toBeSent)\n            }\n        );\n        const isSuccess = await response.json()\n\n        if(isSuccess.code === 200){\n          this.props.cookieCheck()\n          this.setState({ successfullySubmitted: true })\n        }\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n      if(prevState.email !== this.state.email && this.state.email !== ''){\n        await this.checkValidEmail()\n      }\n    }\n\n    async checkValidEmail() {\n      const { email } = this.state\n      const response = await fetch(\n          `${process.env.REACT_APP_API_URL}/isValidNewEmail`,\n          {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ email })\n          }\n        )\n        const isEmailValid = await response.json()\n        if(await isEmailValid !== this.state.validEmail){\n          this.setState({ validEmail: isEmailValid})\n        }\n    }\n\n    validateLive(info) {\n      const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      switch(info) {\n        case first_name: {}\n        break\n        case last_name: {}\n        break\n        case email: {}\n        break\n        case password1: {\n          if(password1.length < 8){\n            return (<p className=\"error\">Password must be at least 8 characters</p>)\n          }\n        }\n        break\n        case password2: {\n          if(password2 !== password1){\n            return (<p className=\"error\">Passwords do not match</p>)\n          }\n        }\n        break\n        case DoB: {}\n        break\n        case phone_number: {\n          if(phone_number[0] === \"+\"){\n            if(phone_number.length !== 12) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }else{\n            if(phone_number.length !== 11) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n          for(const i of phone_number){\n            if(isNaN(i)){\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n        }\n        break\n        case address_1: {}\n        break\n        case address_2: {}\n        break\n        case city: {}\n        break\n        case postcode: {} //Link to royal mail postcodes API\n        break\n      }\n    }\n\n    validateSubmit(which) {\n      const { validEmail, password1, password2, phone_number } = this.state\n\n      if(which === 'first'){\n        if(password2 !== password1 || password1.length < 8 || !validEmail){\n          return false\n        }else{\n          return true;\n        }\n      }else if(which === 'second'){\n        if(phone_number[0] === \"+\"){\n          if(phone_number.length !== 12) {\n            return false\n          }\n        }else{\n          if(phone_number.length !== 11) {\n            return false\n          }\n        }\n        for(const i of phone_number){\n          if(isNaN(i)){\n            return false\n          }\n        }\n        return true;\n      }\n    }\n\n    render() {\n      const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      if(successfullySubmitted){\n        return (<Redirect to=\"/\"/>);\n      }\n\n      if(!valid_new_user) {\n          return(\n            <main>\n                <div>\n                  <h1>CreateAccount</h1>\n                  <form className=\"SubmissionForm\">\n                      <section>\n                        <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                        <input type=\"text\" name=\"email\" id=\"email\" value={ email } onChange={(e) => this.updateInfo(e)}/>\n                        { !validEmail && <p className=\"error\" >email address unavailable</p>}\n                      </section>\n                      <section>\n                        <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                        <input type=\"text\" name=\"password1\" id=\"password1\" value={ password1 } onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password1)}</div>\n                      </section>\n                      <section>\n                        <label htmlFor=\"password2\" value=\"Re-enter password: \" value={ password2 } >Re-enter password: </label>\n                        <input type=\"text\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password2)}</div>\n                      </section>\n                      <section>\n                        <input type=\"submit\"  onClick={(e) => this.submitEmailInfo(e)} value=\"Submit\"/>\n                        {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                      </section>\n                </form>\n                </div>\n              </main>\n          );\n      }\n      else{\n          return(\n            <main>\n                <div>\n                  <h1>User details:</h1>\n                  <form className=\"SubmissionForm\">\n                    <section>\n                      <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                      <input type=\"text\" name=\"first_name\" id=\"first_name\" value={ first_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                      <input type=\"text\" name=\"last_name\" id=\"last_name\" value={ last_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                      <input type=\"date\" name=\"DoB\" id=\"DoB\" value={ DoB } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                      <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={ phone_number } onChange={(e) => this.updateInfo(e)}/>\n                      <div>{this.validateLive(phone_number)}</div>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                      <input type=\"text\" name=\"address_1\" id=\"address_1\" value={ address_1 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                      <input type=\"text\" name=\"address_2\" id=\"address_2\" value={ address_2 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                      <input type=\"text\" name=\"city\" id=\"city\" value={ city } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                      <input type=\"text\" name=\"postcode\" id=\"postcode\" value={ postcode } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <input type=\"submit\" name=\"submit\" value=\"Submit\" onClick={(e) => this.submitUser(e)}/>\n                      {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                    </section>\n                </form>\n                </div>\n              </main>\n          )\n      }\n    }\n}\n\nexport default CreateAccount;\n","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Login.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Home.js",["116"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Things.js",["117"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js",["118","119"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n        dateFrom: '',\n        dateTo: '',\n        location: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        this.props.submitSearch(this.state);\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <main>\n                <h1></h1>\n                <form type=\"submit\" className=\"searchBar\">\n                    <span><input type=\"text\" name=\"item\" id=\"item\" value={item} onChange={(e) => this.handleChange(e)} placeholder='item' /></span>\n                    <span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    <span><button onClick={(e) => this.formSubmission(e)} >Click Me!</button></span>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default SearchBar;","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Card.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Item.js",["120","121","122"],"import React, { Component, useReducer } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport './index.css'\nimport './Item.css'\n\nclass Item extends Component {\n\n    state = {\n        item: []\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n      \n        // Get id from the url\n        const url = window.location.href\n        const urlSplit = url.split('/')\n        const id = urlSplit[urlSplit.length - 1]\n\n        // Fetch API response\n        const response = await fetch(`${ process.env.REACT_APP_API_URL }/item/${ id }`)\n        const [ item ] = await response.json()\n\n        // Set state\n        this.setState({ item })\n    }\n\n    render() {\n        const item = this.state.item\n\n        return (\n            <div className='item-page-container'>\n                <div className='item-page-image'>\n                    <img src=\"https://www.radmoretucker.co.uk/wp-content/uploads/2018/01/Husqvarna-435-Mark-II-Petrol-Chainsaw-15-600x600.jpg\" />\n                </div>\n                <div className='item-page-content-container'>\n                    <div className=\"item-page-name\">\n                        <h1>{item.name}</h1>\n                        <p>Offered by {item.first_name} {item.last_name}</p>\n                    </div>\n                    <div className=\"item-page-info\">\n                        <h2>Description</h2>\n                        <p>{item.description}</p>\n                    </div>\n                    <div className=\"item-page-reviews\">\n                        <h2>Reviews</h2>\n                    </div>\n                    <div className=\"item-page-rent\">\n                        <form>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentFrom\">Rent from: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentFrom\"\n                                    id=\"rentFrom\" />\n                            </span>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentUntil\">Rent until: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentUntil\"\n                                    id=\"rentUntil\" />\n                            </span>\n                            <input className=\"item-page-rent-button item-page-form-field\" type=\"button\" value=\"Rent item\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Logout.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/PostItem.js",["123","124"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass PostItem extends Component {\n\n    initialState = {\n        name: '',\n        description: '',\n        category:'' ,\n        age_restriction: '',\n        owner_id : ''\n       \n       \n        \n    }\n\n    state = this.initialState;\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n    \n\n    \n\n    async handleSubmit(e) {\n        // const user = this.props.checkWhoIsSignedIn()\n       \n        \n        const { name, description, category, age_restriction } = this.state;\n        const ownerID = this.props.userID\n        e.preventDefault();\n        this.resetForm();\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/postItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ name, description, category, age_restriction, ownerID })\n            }\n        );\n        //const test = await response.json();\n        //console.log(test)\n        //console.log(document.cookie)\n       \n    }\n\n\n    render() {\n        const { name, description, category, age_restriction } = this.state;\n      \n       \n\n        return (\n            \n            <main>\n            <h1 className=\"centered\">Post Item</h1>\n            <form className='SubmissionForm' onSubmit={(e) => this.handleSubmit(e)}>\n            <label>Item Name <input type = 'text' name = 'name' value={name}\n            onChange = {(e) => this.setState({name: e.target.value})}></input></label>\n            <label>description <input type = 'text' name = 'description' value={description}\n            onChange = {(e) => this.setState({description: e.target.value})}></input></label>\n            \n             \n\n            \n             <select name = \"category\" value={category} onChange = {(e) => this.setState({category: e.target.value})}>\n                <option>Please Select Category</option>\n                <option value=\"1\">Landscape</option>\n                <option value=\"2\">Indoor</option>\n                <option value=\"3\">Sport</option>\n                <option value=\"4\">Gaming</option>\n                \n            </select>\n\n            <select name = \"category\" value={age_restriction} onChange = {(e) => this.setState({age_restriction: e.target.value})}>\n                <option>Please select Age restrction</option>\n                <option value='0'>No restriction</option>\n                <option value=\"18\">18 and over</option>\n                \n                \n            </select>\n\n\n           \n                    \n            <button type='submit'>PostItem</button>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default PostItem;","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/MyRentals.js",["125"],"import React, { Component } from 'react';\nimport './MyRentals.css'\nimport Card from './Card'\n\nclass MyRentals extends Component {\n\n\n    render() {\n        const borrowing = {\n            name: \"Xbox\",\n            pickUp: new Date('1 Jan 2021'),\n            dropOff: new Date('7 Jan 2021'),\n            lenderName: \"Tom\"\n        }\n\n\n        return (\n            <div className=\"my-rentals-container\">\n                <div className=\"lending\">\n                    <h2>Lending</h2>\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                </div>\n                <div className=\"borrowing\">\n                    <h2>Borrowing</h2>\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MyRentals;","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Categories.js",["126"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Category.js",["127"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport './Things.css'\n\nclass Category extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <h2>{this.props.name}</h2>\n                <h2>{this.props.description}</h2>\n                {/*<h2>{imgurl}</h2>*/}\n                <img src={this.props.imgurl} alt={this.props.id}/>\n            </div>\n    \n        )\n    }\n\n} \n\n/*\nhandleClick(arg) {\n    console.log(arg);\n}\n*/\n/*\nexport default function Category({ id, name, description, imgurl }) {\n    //console.log(imgurl);\n    return (\n        <div className=\"category\" onClick={handleClick(id)}>\n            <h2>{name}</h2>\n            <h2>{description}</h2>\n            <img src={imgurl} alt={id}/>\n        </div>\n\n    )\n    \n}\n*/\n\nexport default Category;\n\n","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Profile.js",["128"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js",["129"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js",["130"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js",["131"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass AddUserReview extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      review: '',\n      rating: null,\n      reviewAdded: false\n    }\n  }\n\n  textInput(e) {\n    const value = e.target.value\n    const name = e.target.name\n    this.setState({\n      [name]: value\n    })\n  }\n\n  changeStarRating(e) {\n    let rating = e.target.value;\n    rating = parseInt(rating);\n    this.setState({\n      rating: rating\n    })\n  }\n\n  async submitUserReview(e) {\n    //e.preventDefault();\n    const { review, rating, title } = this.state\n    //console.log(this.props.user)\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/postUserReview`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ review: review, star_rating: rating, user: this.props.user, title: title })\n        }\n    );\n  }\n\n  render() {\n      const { review, title, reviewAdded } = this.state\n      //console.log(this.props)\n      if(reviewAdded){\n        return(<Redirect to=\"/myAccount\"/>)\n      }\n\n      const { user } = this.props\n\n\n      return(\n        <div>\n          <br/>\n          <p>Leave a review:</p>\n          <form>\n          <label htmlFor=\"title\" value=\"title\">Review title: </label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => this.textInput(e)} />\n          <textarea name=\"review\" rows=\"4\" id=\"new_review\" type=\"text\" value={review} onChange={(e) => this.textInput(e)} /> <br/><br/>\n          <select name=\"rating\" id=\"rating\" onChange={(e) => this.changeStarRating(e)}>\n              <option value=\"\">Give {user.first_name} a star rating</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n          </select>\n          <br/><br/>\n          <input type=\"submit\" value=\"Submit review\" onClick={(e) => {this.submitUserReview(e)}}/>\n          </form>\n          <br/>\n          <br/>\n        </div>\n      )\n    }\n}\n\nexport default AddUserReview;\n","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/ThingsHandler.js",["132","133","134","135","136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":19,"column":8,"nodeType":"144","messageId":"145","endLine":19,"endColumn":21},{"ruleId":"142","severity":1,"message":"146","line":73,"column":35,"nodeType":"144","messageId":"145","endLine":73,"endColumn":46},{"ruleId":"142","severity":1,"message":"147","line":73,"column":48,"nodeType":"144","messageId":"145","endLine":73,"endColumn":60},{"ruleId":"142","severity":1,"message":"148","line":55,"column":15,"nodeType":"144","messageId":"145","endLine":55,"endColumn":20},{"ruleId":"142","severity":1,"message":"149","line":55,"column":22,"nodeType":"144","messageId":"145","endLine":55,"endColumn":31},{"ruleId":"142","severity":1,"message":"150","line":55,"column":33,"nodeType":"144","messageId":"145","endLine":55,"endColumn":42},{"ruleId":"151","severity":1,"message":"152","line":110,"column":5,"nodeType":"153","messageId":"154","endLine":114,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":137,"column":7,"nodeType":"157","messageId":"158","endLine":183,"endColumn":8},{"ruleId":"159","severity":1,"message":"160","line":138,"column":26,"nodeType":"161","messageId":"162","endLine":138,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":140,"column":25,"nodeType":"161","messageId":"162","endLine":140,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":142,"column":21,"nodeType":"161","messageId":"162","endLine":142,"endColumn":23},{"ruleId":"159","severity":1,"message":"160","line":144,"column":25,"nodeType":"161","messageId":"162","endLine":148,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":150,"column":25,"nodeType":"161","messageId":"162","endLine":154,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":156,"column":19,"nodeType":"161","messageId":"162","endLine":156,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":158,"column":28,"nodeType":"161","messageId":"162","endLine":173,"endColumn":10},{"ruleId":"159","severity":1,"message":"160","line":175,"column":25,"nodeType":"161","messageId":"162","endLine":175,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":177,"column":25,"nodeType":"161","messageId":"162","endLine":177,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":179,"column":20,"nodeType":"161","messageId":"162","endLine":179,"endColumn":22},{"ruleId":"159","severity":1,"message":"160","line":181,"column":24,"nodeType":"161","messageId":"162","endLine":181,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":238,"column":80,"nodeType":"165","endLine":238,"endColumn":99},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"168","line":51,"column":17,"nodeType":"169","endLine":51,"endColumn":21},{"ruleId":"142","severity":1,"message":"170","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":34,"column":21,"nodeType":"169","endLine":34,"endColumn":146},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"173","line":36,"column":15,"nodeType":"144","messageId":"145","endLine":36,"endColumn":23},{"ruleId":"142","severity":1,"message":"174","line":9,"column":15,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"166","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":60,"column":15,"nodeType":"169","endLine":60,"endColumn":64},{"ruleId":"142","severity":1,"message":"175","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"175","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"173","line":35,"column":11,"nodeType":"144","messageId":"145","endLine":35,"endColumn":19},{"ruleId":"142","severity":1,"message":"176","line":63,"column":20,"nodeType":"144","messageId":"145","endLine":63,"endColumn":30},{"ruleId":"142","severity":1,"message":"147","line":63,"column":32,"nodeType":"144","messageId":"145","endLine":63,"endColumn":44},{"ruleId":"142","severity":1,"message":"177","line":63,"column":46,"nodeType":"144","messageId":"145","endLine":63,"endColumn":55},{"ruleId":"142","severity":1,"message":"178","line":63,"column":57,"nodeType":"144","messageId":"145","endLine":63,"endColumn":64},{"ruleId":"142","severity":1,"message":"179","line":63,"column":66,"nodeType":"144","messageId":"145","endLine":63,"endColumn":69},{"ruleId":"159","severity":1,"message":"180","line":69,"column":6,"nodeType":"161","messageId":"181","endLine":73,"endColumn":8},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'ThingsHandler' is defined but never used.","Identifier","unusedVar","'hasSearched' is assigned a value but never used.","'searchParams' is assigned a value but never used.","'email' is assigned a value but never used.","'password1' is assigned a value but never used.","'password2' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useReducer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'response' is assigned a value but never used.","'borrowing' is assigned a value but never used.","'Things' is defined but never used.","'categoryId' is assigned a value but never used.","'date_from' is assigned a value but never used.","'date_to' is assigned a value but never used.","'all' is assigned a value but never used.","Nested block is redundant.","redundantNestedBlock","no-global-assign","no-unsafe-negation"]