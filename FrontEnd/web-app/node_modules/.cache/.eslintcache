[{"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/index.js":"1","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/App.js":"2","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Profile.js":"3","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Home.js":"4","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js":"5","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Login.js":"6","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Item.js":"7","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Categories.js":"8","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Things.js":"9","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/MyRentals.js":"10","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Logout.js":"11","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/PostItem.js":"12","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js":"13","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js":"14","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js":"15","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Category.js":"16","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js":"17","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js":"18","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Card.js":"19","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js":"20","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/City.js":"21"},{"size":167,"mtime":1625570407470,"results":"22","hashOfConfig":"23"},{"size":5168,"mtime":1625837841185,"results":"24","hashOfConfig":"23"},{"size":2574,"mtime":1625837841186,"results":"25","hashOfConfig":"23"},{"size":2719,"mtime":1625748477258,"results":"26","hashOfConfig":"23"},{"size":12409,"mtime":1625849011194,"results":"27","hashOfConfig":"23"},{"size":4409,"mtime":1625748477258,"results":"28","hashOfConfig":"23"},{"size":2672,"mtime":1625757012932,"results":"29","hashOfConfig":"23"},{"size":1600,"mtime":1625837841185,"results":"30","hashOfConfig":"23"},{"size":1199,"mtime":1625758807663,"results":"31","hashOfConfig":"23"},{"size":1826,"mtime":1625837841186,"results":"32","hashOfConfig":"23"},{"size":1007,"mtime":1625837841185,"results":"33","hashOfConfig":"23"},{"size":2874,"mtime":1625837841186,"results":"34","hashOfConfig":"23"},{"size":2259,"mtime":1625837841186,"results":"35","hashOfConfig":"23"},{"size":394,"mtime":1625837841186,"results":"36","hashOfConfig":"23"},{"size":409,"mtime":1625837841186,"results":"37","hashOfConfig":"23"},{"size":964,"mtime":1625837841185,"results":"38","hashOfConfig":"23"},{"size":1816,"mtime":1625677026460,"results":"39","hashOfConfig":"23"},{"size":499,"mtime":1625837841186,"results":"40","hashOfConfig":"23"},{"size":1383,"mtime":1625837841185,"results":"41","hashOfConfig":"23"},{"size":2298,"mtime":1625837841185,"results":"42","hashOfConfig":"23"},{"size":488,"mtime":1625841249291,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1cu5lzl",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/index.js",[],["100","101"],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/App.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Profile.js",["102"],"import React from 'react';\nimport './Profile_page.css';\nimport UserReviews from './UserReviews.js';\nimport UserPosts from './UserPosts.js';\nimport UserLookingFor from './UserLookingFor';\nimport profile_picture from './template_profile_picture.png';\n//TODO make dynamic import for profile pictures based on the user\n//and a link to their pp from the db\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      star_rating: 'loading...'\n    };\n  }\n  async componentDidMount() {\n    this.props.cookieCheck();\n    await this.getStarRating(this.props.user)\n    //this.setState({\n    //  user: await this.props.checkWhoIsSignedIn()\n    //})\n  }\n  async componentDidUpdate() {\n    if(this.state.star_rating === 'loading...'){\n      await this.getStarRating(this.props.user)\n    }\n  }\n\n  async getStarRating(user) {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/getStarRating`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ id: user.id })\n        }\n    );\n    const { rating } = await response.json()\n    if(!isNaN(rating)){\n      this.setState({\n        star_rating: rating\n      })\n    }\n  }\n\n  render() {\n    const { user } = this.props\n    //console.log(this.props)\n    //console.log('user @ profile render: '+JSON.stringify(user))\n    if(user){\n      return(\n        <main>\n          <section className='flex_container'>\n            <div id='left'>\n              <img src={profile_picture} id='profile_picture'/>\n              <h1>{`${user.first_name} ${user.last_name}`}</h1>\n              <p>email: {user.email}</p>\n              <p>average rating: {this.state.star_rating}</p>\n              <p>city: {user.city}</p>\n              <p>User since: {user.created_at.slice(0,4)}</p>\n            </div>\n            <div id='centre_spacer' />\n            <div id='right'>\n              <UserPosts user={user} />\n              <UserLookingFor user={user} />\n              <UserReviews user={user} />\n            </div>\n          </section>\n          <p>QUICKFIX FOR PAGE SPACING... REMOVE ME AND FIX CSS</p>\n          <p>QUICKFIX FOR PAGE SPACING... REMOVE ME AND FIX CSS</p>\n          <p>QUICKFIX FOR PAGE SPACING... REMOVE ME AND FIX CSS</p>\n          <p>QUICKFIX FOR PAGE SPACING... REMOVE ME AND FIX CSS</p>\n        </main>\n      )\n    }else{\n      return(\n        <section>Loading...</section>\n      )\n    }\n  }\n}\n\nexport default Profile;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Home.js",["103"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport SearchBar from './SearchBar';\nimport Things from './Things';\n\nclass Home extends Component {\n\n    state = {\n        submissionConfirmed: false,\n        searchCriteria: {}\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n/*\n    async checkForUser(){\n        let { user } = this.props;\n        user = await this.props.checkWhoIsSignedIn();\n        if(user){\n            //console.log(user.user[0]);\n            this.props.setUser(user.user[0]); // Set user as object of user data {...}\n            await this.props.toggleLoggedIn(true);\n        }else{\n            this.props.setUser(null); // Or set user as null\n            await this.props.toggleLoggedIn(false);\n        }\n    }\n*/\n    async componentDidMount() {\n        this.props.cookieCheck();\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    /*\n    formSubmission(event) {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ submissionConfirmed: true });\n        //this\n        //const response = await fetch(.../thing);\n        //const data = await response.jsonStringify();\n        //if(data === 200){\n        //    redirect to things \n        //} else {\n        //    redirect to error page\n        //}\n    }\n*/\n    submitSearch(arg) {\n        console.log(arg);\n        this.setState({ submissionConfirmed: true, searchCriteria: arg });\n\n\n    }\n\n    render() {\n        const { submissionConfirmed, searchCriteria } = this.state;\n\n        if (submissionConfirmed) {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <Things searchCriteria={searchCriteria} />\n                </>\n            );\n        }\n        else {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <main>\n                        <h1>Welcome! Fill in the boxes above if you know what your after!</h1>\n                        <h1>If you are not sure what you want, check out the <span className=\"highlight\">Categories</span> page!</h1>\n                        <h1>If you just want to browse, go straight to the <span className=\"highlight\">Things</span> page!</h1>\n                    </main>\n                </>\n            );\n        }\n    }\n}\n\nexport default Home;","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport City from './City';\n\nclass CreateAccount extends Component {\n\n  state = {\n    valid_new_user: false,\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n    DoB: \"\",\n    phone_number: \"\",\n    address_1: \"\",\n    address_2: \"\",\n    city: \"\",\n    postcode: \"\",\n    validationMessage: null,\n    validEmail: true,\n    successfullySubmitted: false,\n    cityOptions: null,\n    hasChosenCountry: false,\n    cityName: ''\n  }\n\n  constructor(props) {\n    super(props);\n    console.log(\"\");\n  }\n\n  async componentDidMount() {\n    this.props.cookieCheck();\n    const response = await fetch('http://localhost:8080/cities', {\n      method: 'GET',\n      credentials: 'include'\n    })\n    const cityOptions = await response.json()\n    this.setState({ cityOptions });\n  }\n\n  componentDidUpdate() {\n    console.log(\"\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"\");\n  }\n\n  updateState(e) {\n\n  }\n\n  updateInfo(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  async submitEmailInfo(e) { //async\n    e.preventDefault();\n    const { email, password1, password2 } = this.state\n    if (this.validateSubmit('first')) //And the user doesnt exist already\n    {\n      this.setState({\n        valid_new_user: true,\n        validationMessage: null\n      })\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async submitUser(e) {\n    e.preventDefault()\n    if (this.validateSubmit('second')) {\n      this.setState({ validationMessage: null })\n      const toBeSent = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        password1: this.state.password1,\n        password2: this.state.password2,\n        DoB: this.state.DoB,\n        phone_number: this.state.phone_number,\n        address_1: this.state.address_1,\n        address_2: this.state.address_2,\n        city: this.state.city,\n        postcode: this.state.postcode\n      }\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/createAccount`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(toBeSent)\n        }\n      );\n      const isSuccess = await response.json()\n\n      if (isSuccess.code === 200) {\n        this.props.cookieCheck()\n        this.setState({ successfullySubmitted: true })\n      }\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.email !== this.state.email && this.state.email !== '') {\n      await this.checkValidEmail()\n    }\n  }\n\n  async checkValidEmail() {\n    const { email } = this.state\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/isValidNewEmail`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email })\n      }\n    )\n    const isEmailValid = await response.json()\n    if (await isEmailValid !== this.state.validEmail) {\n      this.setState({ validEmail: isEmailValid })\n    }\n  }\n\n  validateLive(info) {\n    const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n    switch (info) {\n      case first_name: { }\n        break\n      case last_name: { }\n        break\n      case email: { }\n        break\n      case password1: {\n        if (password1.length < 8) {\n          return (<p className=\"error\">Password must be at least 8 characters</p>)\n        }\n      }\n        break\n      case password2: {\n        if (password2 !== password1) {\n          return (<p className=\"error\">Passwords do not match</p>)\n        }\n      }\n        break\n      case DoB: { }\n        break\n      case phone_number: {\n        if (phone_number[0] === \"+\") {\n          if (phone_number.length !== 12) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        } else {\n          if (phone_number.length !== 11) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        }\n        for (const i of phone_number) {\n          if (isNaN(i)) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        }\n      }\n        break\n      case address_1: { }\n        break\n      case address_2: { }\n        break\n      case city: { }\n        break\n      case postcode: { } //Link to royal mail postcodes API\n        break\n    }\n  }\n\n  validateSubmit(which) {\n    const { validEmail, password1, password2, phone_number } = this.state\n\n    if (which === 'first') {\n      if (password2 !== password1 || password1.length < 8 || !validEmail) {\n        return false\n      } else {\n        return true;\n      }\n    } else if (which === 'second') {\n      if (phone_number[0] === \"+\") {\n        if (phone_number.length !== 12) {\n          return false\n        }\n      } else {\n        if (phone_number.length !== 11) {\n          return false\n        }\n      }\n      for (const i of phone_number) {\n        if (isNaN(i)) {\n          return false\n        }\n      }\n      return true;\n    }\n  }\n  /*\n  myFunction(e) {\n    e.classList.toggle(\"show\");\n  }\n  */\n  /*\n  filterFunction(e) {\n    const filter = e.value.toUpperCase();\n    div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }\n*/\n\n  async changeCity(e) {\n    //console.log(e.target.innerHTML);\n    const cityName = e.target.innerHTML; // Get city string i.e. Glasgow\n    console.log(cityName);\n    //this.setState({ city });\n\n    //this.props.cookieCheck();\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/getCity`,\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cityName })\n      }\n    );\n    const cityId = await response.json(); // Get city id associated with i.e. Glasgow\n    //const cityOptions = await response.json()\n    console.log(cityId[0].id);\n    this.setState({ city: cityId[0].id, hasChosenCountry: true, cityName: cityName});  // set user city to this id so in future user and other components can searh for location id and get city name back\n  }\n\n  render() {\n    const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode, cityOptions, hasChosenCountry, cityName } = this.state\n    console.log(\"CITIES:\");\n    console.log(cityOptions);\n    if (successfullySubmitted) {\n      return (<Redirect to=\"/\" />);\n    }\n\n    if (!valid_new_user) {\n      return (\n        <main>\n          <div>\n            <h1>CreateAccount</h1>\n            <form className=\"SubmissionForm\">\n              <section>\n                <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={(e) => this.updateInfo(e)} />\n                {!validEmail && <p className=\"error\" >email address unavailable</p>}\n              </section>\n              <section>\n                <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                <input type=\"text\" name=\"password1\" id=\"password1\" value={password1} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password1)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"password2\" value=\"Re-enter password: \" value={password2} >Re-enter password: </label>\n                <input type=\"text\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password2)}</div>\n              </section>\n              <section>\n                <input type=\"submit\" onClick={(e) => this.submitEmailInfo(e)} value=\"Submit\" />\n                {validationMessage && <p className=\"error\">{validationMessage}</p>}\n              </section>\n            </form>\n          </div>\n        </main>\n      );\n    }\n    else {\n      return (\n        <main>\n          <div>\n            <h1>User details:</h1>\n            <form className=\"SubmissionForm\">\n              <section>\n                <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                <input type=\"text\" name=\"first_name\" id=\"first_name\" value={first_name} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                <input type=\"text\" name=\"last_name\" id=\"last_name\" value={last_name} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                <input type=\"date\" name=\"DoB\" id=\"DoB\" value={DoB} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={phone_number} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(phone_number)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                <input type=\"text\" name=\"address_1\" id=\"address_1\" value={address_1} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                <input type=\"text\" name=\"address_2\" id=\"address_2\" value={address_2} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n              <div className=\"cityParent\">\n                <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                {/*<input type=\"text\" name=\"city\" id=\"city\" value={city} onChange={(e) => this.updateInfo(e)} />*/}\n\n                { !hasChosenCountry && cityOptions.map(({ id, name }) => <span className=\"cityCard\" onClick={(e) => this.changeCity(e)} key={id} value={name}>{name}</span>)}\n                { hasChosenCountry && <span>{cityName}</span>}\n                {/*<City key={id} id={id} name={name} />*/}\n                {/*\n                <div className=\"dropdown\">\n                  <button onClick={(e) => this.myFunction(e)} className=\"dropbtn\">Dropdown</button>\n                  <div id=\"myDropdown\" className=\"dropdown-content\">\n                    <input type=\"text\" placeholder=\"Search..\" id=\"myInput\">\n                      <a href=\"#about\">About</a>\n                      <a href=\"#base\">Base</a>\n                      <a href=\"#blog\">Blog</a>\n                      <a href=\"#contact\">Contact</a>\n                      <a href=\"#custom\">Custom</a>\n                      <a href=\"#support\">Support</a>\n                      <a href=\"#tools\">Tools</a>\n                    </input>\n                  </div>\n                </div>\n                */}\n                </div>\n              </section>\n              <section>\n                <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                <input type=\"text\" name=\"postcode\" id=\"postcode\" value={postcode} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <input type=\"submit\" name=\"submit\" value=\"Submit\" onClick={(e) => this.submitUser(e)} />\n                {validationMessage && <p className=\"error\">{validationMessage}</p>}\n              </section>\n            </form>\n          </div>\n        </main>\n      )\n    }\n  }\n}\n\nexport default CreateAccount;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Login.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Item.js",["123","124","125"],"import React, { Component, useReducer } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport './index.css'\nimport './Item.css'\n\nclass Item extends Component {\n\n    state = {\n        item: []\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n      \n        // Get id from the url\n        const url = window.location.href\n        const urlSplit = url.split('/')\n        const id = urlSplit[urlSplit.length - 1]\n\n        // Fetch API response\n        const response = await fetch(`${ process.env.REACT_APP_API_URL }/item/${ id }`)\n        const [ item ] = await response.json()\n\n        // Set state\n        this.setState({ item })\n    }\n\n    render() {\n        const item = this.state.item\n\n        return (\n            <div className='item-page-container'>\n                <div className='item-page-image'>\n                    <img src=\"https://www.radmoretucker.co.uk/wp-content/uploads/2018/01/Husqvarna-435-Mark-II-Petrol-Chainsaw-15-600x600.jpg\" />\n                </div>\n                <div className='item-page-content-container'>\n                    <div className=\"item-page-name\">\n                        <h1>{item.name}</h1>\n                        <p>Offered by {item.first_name} {item.last_name}</p>\n                    </div>\n                    <div className=\"item-page-info\">\n                        <h2>Description</h2>\n                        <p>{item.description}</p>\n                    </div>\n                    <div className=\"item-page-reviews\">\n                        <h2>Reviews</h2>\n                    </div>\n                    <div className=\"item-page-rent\">\n                        <form>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentFrom\">Rent from: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentFrom\"\n                                    id=\"rentFrom\" />\n                            </span>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentUntil\">Rent until: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentUntil\"\n                                    id=\"rentUntil\" />\n                            </span>\n                            <input className=\"item-page-rent-button item-page-form-field\" type=\"button\" value=\"Rent item\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Categories.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Things.js",["126"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport './Things.css'\nimport Card from './Card'\n\nclass Things extends Component {\n\n    state = {\n        items: []\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n        \n        const response = await fetch('http://localhost:8080/items', {\n            method: 'GET',\n            credentials: 'include'\n        })\n        //respose is making the request\n        const items = await response.json()\n        //console.log(items.items)\n        this.setState({ items })\n        //console.log(this.state)\n    }\n\n    handleItemClick(id) {\n       console.log(id)\n\n    }\n\n    render() {\n        const { items } = this.state\n\n        if (items.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n\n            return (\n                <div className='item-list'>\n                    {items.items.map(({ id, name, is_available }) =>\n                        <Card key={id} id={id} name={name} is_available={is_available} cardType='things-page-card'/>\n                    )}\n                </div>\n\n            )\n        }\n    }\n\n} export default Things;\n\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/MyRentals.js",["127"],"import React, { Component } from 'react';\nimport './MyRentals.css'\nimport Card from './Card'\n\nclass MyRentals extends Component {\n\n\n    render() {\n        const borrowing = {\n            name: \"Xbox\",\n            pickUp: new Date('1 Jan 2021'),\n            dropOff: new Date('7 Jan 2021'),\n            lenderName: \"Tom\"\n        }\n\n\n        return (\n            <div className=\"my-rentals-container\">\n                <div className=\"lending\">\n                    <h2>Lending</h2>\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Lending\"\n                    />\n                </div>\n                <div className=\"borrowing\">\n                    <h2>Borrowing</h2>\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                    <Card\n                        cardType='myrentals-page-card'\n                        name=\"Borrowing\"\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MyRentals;","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Logout.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/PostItem.js",["128","129"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass PostItem extends Component {\n\n    initialState = {\n        name: '',\n        description: '',\n        category:'' ,\n        age_restriction: '',\n        owner_id : ''\n       \n       \n        \n    }\n\n    state = this.initialState;\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n    \n\n    \n\n    async handleSubmit(e) {\n        // const user = this.props.checkWhoIsSignedIn()\n       \n        \n        const { name, description, category, age_restriction } = this.state;\n        const ownerID = this.props.userID\n        e.preventDefault();\n        this.resetForm();\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/postItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ name, description, category, age_restriction, ownerID })\n            }\n        );\n        //const test = await response.json();\n        //console.log(test)\n        //console.log(document.cookie)\n       \n    }\n\n\n    render() {\n        const { name, description, category, age_restriction } = this.state;\n      \n       \n\n        return (\n            \n            <main>\n            <h1 className=\"centered\">Post Item</h1>\n            <form className='SubmissionForm' onSubmit={(e) => this.handleSubmit(e)}>\n            <label>Item Name <input type = 'text' name = 'name' value={name}\n            onChange = {(e) => this.setState({name: e.target.value})}></input></label>\n            <label>description <input type = 'text' name = 'description' value={description}\n            onChange = {(e) => this.setState({description: e.target.value})}></input></label>\n            \n             \n\n            \n             <select name = \"category\" value={category} onChange = {(e) => this.setState({category: e.target.value})}>\n                <option>Please Select Category</option>\n                <option value=\"1\">Landscape</option>\n                <option value=\"2\">Indoor</option>\n                <option value=\"3\">Sport</option>\n                <option value=\"4\">Gaming</option>\n                \n            </select>\n\n            <select name = \"category\" value={age_restriction} onChange = {(e) => this.setState({age_restriction: e.target.value})}>\n                <option>Please select Age restrction</option>\n                <option value='0'>No restriction</option>\n                <option value=\"18\">18 and over</option>\n                \n                \n            </select>\n\n\n           \n                    \n            <button type='submit'>PostItem</button>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default PostItem;","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js",["130"],"import React from 'react';\nimport Things from './Things.js';\n\nclass UserPosts extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is lending</h1>\n        <div id=\"posts\">\n        \n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserPosts;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js",["131"],"import React from 'react';\nimport Things from './Things.js';\n\n\nclass UserLookingFor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is looking for</h1>\n        <div id=\"posts\">\n        \n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserLookingFor;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Category.js",["132"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport './Things.css'\n\nclass Category extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <h2>{this.props.name}</h2>\n                <h2>{this.props.description}</h2>\n                {/*<h2>{imgurl}</h2>*/}\n                <img src={this.props.imgurl} alt={this.props.id}/>\n            </div>\n    \n        )\n    }\n\n} \n\n/*\nhandleClick(arg) {\n    console.log(arg);\n}\n*/\n/*\nexport default function Category({ id, name, description, imgurl }) {\n    //console.log(imgurl);\n    return (\n        <div className=\"category\" onClick={handleClick(id)}>\n            <h2>{name}</h2>\n            <h2>{description}</h2>\n            <img src={imgurl} alt={id}/>\n        </div>\n\n    )\n    \n}\n*/\n\nexport default Category;\n\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js",["133","134"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n        dateFrom: '',\n        dateTo: '',\n        location: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        this.props.submitSearch(this.state);\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <main>\n                <h1></h1>\n                <form type=\"submit\" className=\"searchBar\">\n                    <span><input type=\"text\" name=\"item\" id=\"item\" value={item} onChange={(e) => this.handleChange(e)} placeholder='item' /></span>\n                    <span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    <span><button onClick={(e) => this.formSubmission(e)} >Click Me!</button></span>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default SearchBar;","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/Card.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js",["135"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass AddUserReview extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      review: '',\n      rating: null,\n      reviewAdded: false\n    }\n  }\n\n  textInput(e) {\n    const value = e.target.value\n    const name = e.target.name\n    this.setState({\n      [name]: value\n    })\n  }\n\n  changeStarRating(e) {\n    let rating = e.target.value;\n    rating = parseInt(rating);\n    this.setState({\n      rating: rating\n    })\n  }\n\n  async submitUserReview(e) {\n    //e.preventDefault();\n    const { review, rating, title } = this.state\n    //console.log(this.props.user)\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/postUserReview`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ review: review, star_rating: rating, user: this.props.user, title: title })\n        }\n    );\n  }\n\n  render() {\n      const { review, title, reviewAdded } = this.state\n      //console.log(this.props)\n      if(reviewAdded){\n        return(<Redirect to=\"/myAccount\"/>)\n      }\n\n      const { user } = this.props\n\n\n      return(\n        <div>\n          <br/>\n          <p>Leave a review:</p>\n          <form>\n          <label htmlFor=\"title\" value=\"title\">Review title: </label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => this.textInput(e)} />\n          <textarea name=\"review\" rows=\"4\" id=\"new_review\" type=\"text\" value={review} onChange={(e) => this.textInput(e)} /> <br/><br/>\n          <select name=\"rating\" id=\"rating\" onChange={(e) => this.changeStarRating(e)}>\n              <option value=\"\">Give {user.first_name} a star rating</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n          </select>\n          <br/><br/>\n          <input type=\"submit\" value=\"Submit review\" onClick={(e) => {this.submitUserReview(e)}}/>\n          </form>\n          <br/>\n          <br/>\n        </div>\n      )\n    }\n}\n\nexport default AddUserReview;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/City.js",["136"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport './Things.css'\n\nclass City extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <span>{this.props.id}</span>\n                <span>{this.props.name}</span>\n            </div>\n    \n        )\n    }\n\n} \n\nexport default City;\n\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":60,"column":15,"nodeType":"143","endLine":60,"endColumn":64},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"148","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"149","line":65,"column":13,"nodeType":"146","messageId":"147","endLine":65,"endColumn":18},{"ruleId":"144","severity":1,"message":"150","line":65,"column":20,"nodeType":"146","messageId":"147","endLine":65,"endColumn":29},{"ruleId":"144","severity":1,"message":"151","line":65,"column":31,"nodeType":"146","messageId":"147","endLine":65,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":120,"column":3,"nodeType":"154","messageId":"155","endLine":124,"endColumn":4},{"ruleId":"156","severity":1,"message":"157","line":147,"column":5,"nodeType":"158","messageId":"159","endLine":193,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":148,"column":24,"nodeType":"162","messageId":"163","endLine":148,"endColumn":27},{"ruleId":"160","severity":1,"message":"161","line":150,"column":23,"nodeType":"162","messageId":"163","endLine":150,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":152,"column":19,"nodeType":"162","messageId":"163","endLine":152,"endColumn":22},{"ruleId":"160","severity":1,"message":"161","line":154,"column":23,"nodeType":"162","messageId":"163","endLine":158,"endColumn":8},{"ruleId":"160","severity":1,"message":"161","line":160,"column":23,"nodeType":"162","messageId":"163","endLine":164,"endColumn":8},{"ruleId":"160","severity":1,"message":"161","line":166,"column":17,"nodeType":"162","messageId":"163","endLine":166,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":168,"column":26,"nodeType":"162","messageId":"163","endLine":183,"endColumn":8},{"ruleId":"160","severity":1,"message":"161","line":185,"column":23,"nodeType":"162","messageId":"163","endLine":185,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":187,"column":23,"nodeType":"162","messageId":"163","endLine":187,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":189,"column":18,"nodeType":"162","messageId":"163","endLine":189,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":191,"column":22,"nodeType":"162","messageId":"163","endLine":191,"endColumn":25},{"ruleId":"144","severity":1,"message":"164","line":269,"column":176,"nodeType":"146","messageId":"147","endLine":269,"endColumn":180},{"ruleId":"165","severity":1,"message":"166","line":293,"column":72,"nodeType":"167","endLine":293,"endColumn":89},{"ruleId":"144","severity":1,"message":"168","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":38},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":34,"column":21,"nodeType":"143","endLine":34,"endColumn":146},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"169","line":9,"column":15,"nodeType":"146","messageId":"147","endLine":9,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"170","line":36,"column":15,"nodeType":"146","messageId":"147","endLine":36,"endColumn":23},{"ruleId":"144","severity":1,"message":"171","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"171","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"172","severity":1,"message":"173","line":51,"column":17,"nodeType":"143","endLine":51,"endColumn":21},{"ruleId":"144","severity":1,"message":"170","line":35,"column":11,"nodeType":"146","messageId":"147","endLine":35,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'City' is defined but never used.","'email' is assigned a value but never used.","'password1' is assigned a value but never used.","'password2' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'city' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useReducer' is defined but never used.","'borrowing' is assigned a value but never used.","'response' is assigned a value but never used.","'Things' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]