[{"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/index.js":"1","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/App.js":"2","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/Profile.js":"3","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/ThingsHandler.js":"4","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/Login.js":"5","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/CreateAccount.js":"6","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/MyRentals.js":"7","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/Home.js":"8","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Categories.js":"9","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Item.js":"10","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserReviews.js":"11","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Things.js":"12","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/PostItem.js":"13","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserPosts.js":"14","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserLookingFor.js":"15","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserReview.js":"16","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/City.js":"17","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Card.js":"18","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Category.js":"19","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/SearchBar.js":"20","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/AddUserReview.js":"21","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/ImageUpload.js":"22","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/About.js":"23","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/Individual.js":"24","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/ChosenIndividual.js":"25"},{"size":168,"mtime":1626116878274,"results":"26","hashOfConfig":"27"},{"size":6108,"mtime":1626177683404,"results":"28","hashOfConfig":"27"},{"size":2313,"mtime":1626116878758,"results":"29","hashOfConfig":"27"},{"size":6523,"mtime":1626118458819,"results":"30","hashOfConfig":"27"},{"size":4532,"mtime":1626116878758,"results":"31","hashOfConfig":"27"},{"size":13421,"mtime":1626118458819,"results":"32","hashOfConfig":"27"},{"size":2515,"mtime":1626116878273,"results":"33","hashOfConfig":"27"},{"size":2694,"mtime":1626116878761,"results":"34","hashOfConfig":"27"},{"size":1709,"mtime":1626178153803,"results":"35","hashOfConfig":"27"},{"size":5466,"mtime":1626116878760,"results":"36","hashOfConfig":"27"},{"size":2221,"mtime":1626116878757,"results":"37","hashOfConfig":"27"},{"size":1434,"mtime":1626118458819,"results":"38","hashOfConfig":"27"},{"size":4118,"mtime":1626176707738,"results":"39","hashOfConfig":"27"},{"size":404,"mtime":1626176707738,"results":"40","hashOfConfig":"27"},{"size":414,"mtime":1626116878758,"results":"41","hashOfConfig":"27"},{"size":571,"mtime":1626176707739,"results":"42","hashOfConfig":"27"},{"size":508,"mtime":1626116878762,"results":"43","hashOfConfig":"27"},{"size":1770,"mtime":1626116878760,"results":"44","hashOfConfig":"27"},{"size":1124,"mtime":1626116878760,"results":"45","hashOfConfig":"27"},{"size":2079,"mtime":1626116878761,"results":"46","hashOfConfig":"27"},{"size":2318,"mtime":1626116878758,"results":"47","hashOfConfig":"27"},{"size":1445,"mtime":1626116878762,"results":"48","hashOfConfig":"27"},{"size":2171,"mtime":1626191676933,"results":"49","hashOfConfig":"27"},{"size":1572,"mtime":1626189345010,"results":"50","hashOfConfig":"27"},{"size":2177,"mtime":1626192491409,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cu5lzl",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"54"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/index.js",[],["121","122"],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/App.js",["123","124","125"],"import React, { Component } from 'react';\nimport './index.css';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    NavLink\n} from 'react-router-dom';\nimport Home from './components/home/Home';\nimport CreateAccount from './components/user/CreateAccount';\nimport Login from './components/user/Login';\nimport Item from './components/products/Item'\nimport Profile from './components/user/profile/Profile.js';\nimport PostItem from './components/products/PostItem';\nimport MyRentals from './components/user/profile/MyRentals'\nimport Categories from './components/products/Categories';\nimport ThingsHandler from './components/framework/ThingsHandler.js';\nimport About from './components/home/About';\n\nclass App extends Component {\n\n    state = { isLoggedIn: false, user: '' };\n\n    async componentWillMount() {\n        await this.cookieCheck()\n    }\n\n    async cookieCheck(){  //Checks who is signed in and if anyone is, sets the user and toggles isLoggedIn\n      const user = await this.checkWhoIsSignedIn()\n      //if(await user.id){\n        //this.toggleLoggedIn(this.state.isLoggedIn)\n        this.toggleLoggedIn(user);\n        this.setUser(user)\n      //}\n    }\n\n    async checkWhoIsSignedIn() {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/checkWhoIsSignedIn`, { method: 'GET', credentials: 'include' });\n        const user = await response.json();\n        return await user;\n    }\n\n    async toggleLoggedIn(arg) {\n        /*\n        if (arg) {\n            this.setState({ isLoggedIn: false });\n        } else {\n            this.setState({ isLoggedIn: true });\n        }\n        */\n        if (arg) {\n            this.setState({ isLoggedIn: true });\n        } else {\n            this.setState({ isLoggedIn: false });\n        }\n    }\n\n    setUser(updatedUserValue) {\n        this.setState(state => ({ ...state, user: updatedUserValue }));\n    }\n\n/*\n    async submitSearch(params) {\n        this.setState({\n          hasSearched: true,\n          searchParams: params\n        })\n    }\n*/\n  async logout() {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/logout`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n    );\n    const isLoggedOut = await response.json();\n    if (isLoggedOut) {\n        await this.cookieCheck();\n    }\n  }\n\n    render() {\n        const { isLoggedIn, user, hasSearched, searchParams } = this.state;\n        //console.log(\"USER:\")\n        //console.log(user);\n        return (\n\n            <Router>\n                <div className=\"header\">\n                    RENT A THING\n                </div>\n                { !isLoggedIn &&\n                  <nav className=\"navBar\">\n                      <NavLink className=\"navButton noUnderline\" to=\"/Home\" activeClassName=\"active\">Home</NavLink>\n                      <NavLink className=\"navButton noUnderline\" to=\"/Categories\" activeClassName=\"active\">Categories</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/About\" activeClassName=\"active\">About</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/Login\" activeClassName=\"active\">Login</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/CreateAccount\" activeClassName=\"active\">Create Account</NavLink>\n                  </nav>\n                }\n                { isLoggedIn &&\n                  <nav className=\"navBar\">\n                      <NavLink className=\"navButton noUnderline\" to=\"/Home\" activeClassName=\"active\">Home</NavLink>\n                      <NavLink className=\"navButton noUnderline\" to=\"/Categories\" activeClassName=\"active\">Categories</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/About\" activeClassName=\"active\">About</NavLink>\n                      <div className=\"navButton floatRight noUnderline\" onClick={ () => { this.logout() } }>Logout</div>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/myAccount\" activeClassName=\"active\">Account</NavLink>\n                      <NavLink className=\"navButton floatRight noUnderline\" to=\"/postItem\" activeClassName=\"active\">Post a new item</NavLink>\n                  </nav>\n                }\n                <main>\n                <Switch>\n                    <Route exact path=\"/Home\">\n                        <Home cookieCheck={ () => this.cookieCheck() } />\n                    </Route>\n                    <Route exact path=\"/Categories\">\n                        <Categories cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/CreateAccount\">\n                        <CreateAccount cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/myAccount\">\n                        <Profile user={user} cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/About\">\n                        <About cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login cookieCheck={() => this.cookieCheck()} />\n                    </Route>\n                    <Route path=\"/Item\">\n                        <Item cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                    <Route path=\"/postItem\">\n                        <PostItem  userID = {user.id} cookieCheck={() => this.cookieCheck()()}/>\n                    </Route>\n                    <Route path=\"/MyRentals\">\n                         <MyRentals cookieCheck={() => this.cookieCheck()}/>\n                    </Route>\n                </Switch>\n                </main>\n\n                <div className=\"footer\">\n                    <p>Legal stuff | Contact Info | etc.</p>\n                    {isLoggedIn && <p>logged in as {user.first_name}</p>}\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/Profile.js",["126"],"import React from 'react';\nimport '../../../css/Profile_page.css';\nimport UserReviews from './UserReviews.js';\nimport UserPosts from './UserPosts.js';\nimport UserLookingFor from './UserLookingFor';\nimport profile_picture from './template_profile_picture.png';\n//TODO make dynamic import for profile pictures based on the user\n//and a link to their pp from the db\n\nclass Profile extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      star_rating: 'loading...'\n    };\n  }\n  async componentDidMount() {\n    this.props.cookieCheck();\n    await this.getStarRating(this.props.user)\n    //this.setState({\n    //  user: await this.props.checkWhoIsSignedIn()\n    //})\n  }\n  async componentDidUpdate() {\n    if(this.state.star_rating === 'loading...'){\n      await this.getStarRating(this.props.user)\n    }\n  }\n\n  async getStarRating(user) {\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/getStarRating`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ id: user.id })\n        }\n    );\n    const { rating } = await response.json()\n    if(!isNaN(rating)){\n      this.setState({\n        star_rating: rating\n      })\n    }\n  }\n\n  render() {\n    const { user } = this.props\n    //console.log(this.props)\n    //console.log('user @ profile render: '+JSON.stringify(user))\n    if(user){\n      return(\n        <main>\n          <section className='flex_container'>\n            <div id='left'>\n              <img src={profile_picture} id='profile_picture'/>\n              <h1>{`${user.first_name} ${user.last_name}`}</h1>\n              <p>email: {user.email}</p>\n              <p>average rating: {this.state.star_rating}</p>\n              <p>city: {user.city}</p>\n              <p>User since: {user.created_at.slice(0,4)}</p>\n            </div>\n            <div id='centre_spacer' />\n            <div id='right'>\n              <UserPosts user={user} />\n              <UserLookingFor user={user} />\n              <UserReviews user={user} />\n            </div>\n          </section>\n        </main>\n      )\n    }else{\n      return(\n        <section>Loading...</section>\n      )\n    }\n  }\n}\n\nexport default Profile;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/ThingsHandler.js",["127","128","129","130","131","132","133"],"import React from 'react';\nimport Things from '../products/Things.js'\n\nclass ThingsHandler extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      items: null,\n      categoryId: null,\n      searchCriteria: {\n        searchingFor: null,\n        date_from: null,\n        date_to: null,\n        location: null\n      },\n      all: null,\n      currentLocationId: null,\n      cityOptions: null,\n      showMenu: false,\n      locationFilteredItemList: ''\n    };\n  }\n\n  async componentDidUpdate(PrevProps, PrevState) {\n    if (this.props != PrevProps) {\n      await this.filterBy()\n    }\n  }\n\n  async getCities() {\n    const response = await fetch('http://localhost:8080/cities', {\n      method: 'GET',\n      credentials: 'include'\n    })\n    const cityOptions = await response.json()\n    this.setState({ cityOptions });\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({\n      showMenu: true,\n    });\n  }\n\n  async changeCity(e) {\n    const cityName = e.target.innerHTML;\n    //console.log(cityName);\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/getCity`,\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cityName })\n      }\n    );\n    const cityId = await response.json();\n    //console.log(cityId[0].id);\n    await this.setState({ currentLocationId: cityId[0].id });\n\n    let { items, locationFilteredItemList } = this.state;\n    locationFilteredItemList = await this.filterByLocation(items);\n    //console.log(\"locationFilteredItems:\");\n    //console.log(locationFilteredItemList);\n    this.setState({ locationFilteredItemList });\n  }\n\n  async componentDidMount() {\n    //get list of cities for drop down later \n    await this.getCities();\n    //Check if someone is logged in, in for get their city_id to later filter items\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/checkWhoIsSignedIn`, { method: 'GET', credentials: 'include' });\n    const user = await response.json();\n    if (user) {\n      //const response = await fetch(`${process.env.REACT_APP_API_URL}/checkUserLocation`, { method: 'GET', credentials: 'include', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({ user }) });\n      const userLocation = user.city_id;\n      //console.log(\"User Logged in:\");\n      //console.log(user);\n      //console.log(userLocation);\n      this.setState({ currentLocationId: userLocation });\n    } else {\n      //console.log(\"User NOT Logged in:\");\n      this.setState({ currentLocationId: 0 });\n    }\n\n    await this.filterBy()\n  }\n\n  async filterByLocation(itemList) {\n    //console.log(\"Item List: \");\n    //console.log(itemList);\n    const { currentLocationId } = await this.state;\n    //console.log(\"Filtering by location id:\")\n    //console.log(currentLocationId);//[0].id);\n    if (currentLocationId) {\n      //console.log(\"Filtering...\");\n      const filteredItems = itemList.filter(item => item.city_id === currentLocationId);\n      return filteredItems;\n    } else {\n      //console.log(\"NOT Filtering.\");\n      return itemList;\n    }\n  }\n\n  async filterBy() {\n    //console.log(\"IN FILTER BY\")\n    const { categoryId, searchCriteria, all, locationFilteredItemList } = this.props\n    //console.log(this.props)\n    let itemList = [];\n    if(categoryId){\n      //console.log('category search: '+categoryId)\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/searchByCategory`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ category_id: categoryId })\n        }\n      );\n\n      let itemList = await response.json();\n      if (await itemList) {\n        const locationFilteredItems = await this.filterByLocation(itemList);\n        this.setState({ items: await itemList, locationFilteredItemList: locationFilteredItems });\n      }\n    } else if (searchCriteria && searchCriteria.item) {\n      //console.log('searchbar search')\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/searchByFilter`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({ searchCriteria: searchCriteria })\n        }\n      );\n      itemList = await response.json();\n      //console.log(await itemList)\n\n      if (await itemList[0]) {\n        const locationFilteredItems = await this.filterByLocation(itemList);\n        this.setState({ items: await itemList, locationFilteredItemList: locationFilteredItems });\n      } else {\n        this.setState({ items: [] })\n      }\n    } else if (all) {\n      const response = await fetch('http://localhost:8080/items', {\n        method: 'GET',\n        credentials: 'include'\n      })\n      //respose is making the request\n      itemList = await response.json()\n      //console.log(items.items)\n      if (await itemList[0]) {\n        const locationFilteredItems = await this.filterByLocation(itemList);\n        this.setState({ items: await itemList, locationFilteredItemList: locationFilteredItems });\n      } else {\n        this.setState({ items: [] })\n      }\n    }else{\n      this.setState({items: []})\n    }\n\n  }\n\n  async\n\n  render() {\n    const { items, categoryId, searchParams, date_from, date_to, all, cityOptions, locationFilteredItemList } = this.state\n    console.log(\"Category filtered items:\");\n    console.log(items);\n    console.log(\"Location filtered items:\");\n    console.log(locationFilteredItemList);\n    if (!items) {\n      return (\n        <p>Loading...</p>\n      )\n    } {\n      return (\n        <>\n          <h1>ThingsHandler.js</h1>\n          <h2>category ID: {categoryId}</h2>\n\n          <div>\n            <button onClick={(e) => this.showMenu(e)}>\n              Show menu\n            </button>\n\n            {\n              this.state.showMenu\n                ? (\n                  <div className=\"menu\">\n                    {cityOptions.map(({ id, name }) => <span onClick={(e) => this.changeCity(e)} key={id} value={name}>{name}</span>)}\n                  </div>\n                )\n                : (\n                  null\n                )\n            }\n          </div>\n          <Things items={locationFilteredItemList} cookieCheck={this.props.cookieCheck} />\n        </>\n      )\n    }\n  }\n}\n\n\nexport default ThingsHandler;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/Login.js",["134"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\n\nclass Login extends Component {\n\n    initialState = {\n        email: '',\n        password: '',\n        touched: {\n            email: false,\n            password: false,\n        },\n        successfullySubmitted: false,\n        //user: null\n    }\n\n    state = this.initialState;\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n    }\n\n    markAsTouched(field) {\n        const newTouched = { ...this.state.touched };\n        newTouched[field] = true;\n        this.setState({ touched: newTouched });\n    }\n\n    emailErrors() {\n        const { email, touched } = this.state;\n        if (!touched.email) return false;\n        if (email.length < 10) return \"Email is too short\";\n        if (email.length > 50) return \"Email is too long\";\n    }\n\n    passwordErrors() {\n        const { password, touched } = this.state;\n        if (!touched.password) return false;\n        if (password.length < 8) return \"Password is too short\";\n        if (password.length > 50) return \"Password is too long\";\n    }\n\n    async handleSubmit(e) {\n        const { email, password } = this.state;\n        e.preventDefault();\n        this.resetForm();\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/login`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ email, password })\n            }\n        );\n        const isSuccess = await response.json();\n        if (isSuccess.code === 200) {\n            //console.log(isSuccess.loggedInAs);\n            //this.props.setSignedInUser(isSuccess.loggedInAs);\n            this.props.cookieCheck()\n            this.setState({ successfullySubmitted: true });\n        }\n    }\n/*\n    CHECKING THE COOKIE IS NOW DONE IN APP.js SO THAT IF A USER HAS A COOKIE\n    THEY WILL AUTOMATICALLY BE LOGGED STRAIGHT IN NO MATTER WHAT PART OF THE SITE\n    THEY GO TO\n\n    async checkForUser(){\n        let { user } = this.props;\n        user = await this.props.checkWhoIsSignedIn();\n        if(user){\n            //console.log(user.user[0]);\n            this.props.setUser(user.user[0]); // Set user as object of user data {...}\n            await this.props.toggleLoggedIn(true);\n        }else{\n            this.props.setUser(null); // Or set user as null\n            await this.props.toggleLoggedIn(false);\n        }\n    }\n*/\n\n    render() {\n        const { email, password, successfullySubmitted, touched } = this.state;\n        if (successfullySubmitted) {\n            //console.log(\"Sucessfully logged in and redirecting\")\n            return (<Redirect to=\"/\"/>);\n        }\n\n        return (\n            <main>\n            <h1 className=\"centered\">Sign In</h1>\n                <form className='SubmissionForm' onSubmit={(e) => this.handleSubmit(e)}>\n                    <section>\n                        <label>Email:\n                            <input\n                                value={email}\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                onBlur={() => this.markAsTouched('email')}\n                                type='text'\n                            />\n                        </label>\n                        {this.emailErrors() && <p className='error'>{this.emailErrors()}</p>}\n                    </section>\n                    <section>\n                        <label>Password:\n                            <input\n                                value={password}\n                                onChange={(e) => this.setState({ password: e.target.value })}\n                                onBlur={() => this.markAsTouched('password')}\n                                type='text'\n                            />\n                        </label>\n                        {this.passwordErrors() && <p className='error'>{this.passwordErrors()}</p>}\n                    </section>\n                    {/*<button type='submit' disabled={!touched.email || !touched.password || this.emailErrors() || this.passwordErrors()} >Login</button>*/}\n                    <input type='submit' value='Login' disabled={this.emailErrors() || this.passwordErrors()} />\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default Login;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/CreateAccount.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport City from '../framework/City';\n\nclass CreateAccount extends Component {\n\n  state = {\n    valid_new_user: false,\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n    DoB: \"\",\n    phone_number: \"\",\n    address_1: \"\",\n    address_2: \"\",\n    city: \"\",\n    postcode: \"\",\n    validationMessage: null,\n    validEmail: true,\n    successfullySubmitted: false,\n    cityOptions: null,\n    hasChosenCountry: false,\n    cityName: ''\n  }\n\n  constructor(props) {\n    super(props);\n    console.log(\"\");\n  }\n\n  async componentDidMount() {\n    this.props.cookieCheck();\n    const response = await fetch('http://localhost:8080/cities', {\n      method: 'GET',\n      credentials: 'include'\n    })\n    const cityOptions = await response.json()\n    this.setState({ cityOptions });\n\n    // NEW GeoDB STUFF\n    /*\n    const newResponse = await fetch(\n      \"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\",\n      {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          \"x-rapidapi-key\": \"b97ae692c1msh0cd7be3cd458128p1504dajsn77a8dde2b6be\",\n          \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n      }\n    );\n    const isSuccess = await newResponse.json();\n    console.log(isSuccess);\n    */\n\n    /*\n    fetch(\"https://wft-geo-db.p.rapidapi.com/v1/geo/cities\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"b97ae692c1msh0cd7be3cd458128p1504dajsn77a8dde2b6be\",\n        \"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\"\n      }\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n      */\n  }\n\n  componentDidUpdate() {\n    console.log(\"\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"\");\n  }\n\n  updateState(e) {\n\n  }\n\n  updateInfo(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  async submitEmailInfo(e) { //async\n    e.preventDefault();\n    const { email, password1, password2 } = this.state\n    if (this.validateSubmit('first')) //And the user doesnt exist already\n    {\n      this.setState({\n        valid_new_user: true,\n        validationMessage: null\n      })\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async submitUser(e) {\n    e.preventDefault()\n    if (this.validateSubmit('second')) {\n      this.setState({ validationMessage: null })\n      const toBeSent = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        password1: this.state.password1,\n        password2: this.state.password2,\n        DoB: this.state.DoB,\n        phone_number: this.state.phone_number,\n        address_1: this.state.address_1,\n        address_2: this.state.address_2,\n        city: this.state.city,\n        postcode: this.state.postcode\n      }\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/createAccount`,\n        {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(toBeSent)\n        }\n      );\n      const isSuccess = await response.json()\n\n      if (isSuccess.code === 200) {\n        this.props.cookieCheck()\n        this.setState({ successfullySubmitted: true })\n      }\n    } else {\n      this.setState({\n        validationMessage: \"Please ensure all fields are complete and valid\"\n      })\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    if (prevState.email !== this.state.email && this.state.email !== '') {\n      await this.checkValidEmail()\n    }\n  }\n\n  async checkValidEmail() {\n    const { email } = this.state\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/isValidNewEmail`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email })\n      }\n    )\n    const isEmailValid = await response.json()\n    if (await isEmailValid !== this.state.validEmail) {\n      this.setState({ validEmail: isEmailValid })\n    }\n  }\n\n  validateLive(info) {\n    const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n    switch (info) {\n      case first_name: { }\n        break\n      case last_name: { }\n        break\n      case email: { }\n        break\n      case password1: {\n        if (password1.length < 8) {\n          return (<p className=\"error\">Password must be at least 8 characters</p>)\n        }\n      }\n        break\n      case password2: {\n        if (password2 !== password1) {\n          return (<p className=\"error\">Passwords do not match</p>)\n        }\n      }\n        break\n      case DoB: { }\n        break\n      case phone_number: {\n        if (phone_number[0] === \"+\") {\n          if (phone_number.length !== 12) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        } else {\n          if (phone_number.length !== 11) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        }\n        for (const i of phone_number) {\n          if (isNaN(i)) {\n            return (<p className=\"error\">Please enter a valid phone number</p>)\n          }\n        }\n      }\n        break\n      case address_1: { }\n        break\n      case address_2: { }\n        break\n      case city: { }\n        break\n      case postcode: { } //Link to royal mail postcodes API\n        break\n    }\n  }\n\n  validateSubmit(which) {\n    const { validEmail, password1, password2, phone_number } = this.state\n\n    if (which === 'first') {\n      if (password2 !== password1 || password1.length < 8 || !validEmail) {\n        return false\n      } else {\n        return true;\n      }\n    } else if (which === 'second') {\n      if (phone_number[0] === \"+\") {\n        if (phone_number.length !== 12) {\n          return false\n        }\n      } else {\n        if (phone_number.length !== 11) {\n          return false\n        }\n      }\n      for (const i of phone_number) {\n        if (isNaN(i)) {\n          return false\n        }\n      }\n      return true;\n    }\n  }\n  /*\n  myFunction(e) {\n    e.classList.toggle(\"show\");\n  }\n  */\n  /*\n  filterFunction(e) {\n    const filter = e.value.toUpperCase();\n    div = document.getElementById(\"myDropdown\");\n    a = div.getElementsByTagName(\"a\");\n    for (i = 0; i < a.length; i++) {\n      txtValue = a[i].textContent || a[i].innerText;\n      if (txtValue.toUpperCase().indexOf(filter) > -1) {\n        a[i].style.display = \"\";\n      } else {\n        a[i].style.display = \"none\";\n      }\n    }\n  }\n*/\n\n  async changeCity(e) {\n    //console.log(e.target.innerHTML);\n    e.preventDefault();\n    const cityName = e.target.innerHTML; // Get city string i.e. Glasgow\n    console.log(cityName);\n    //this.setState({ city });\n\n    //this.props.cookieCheck();\n    const response = await fetch(\n      `${process.env.REACT_APP_API_URL}/getCity`,\n      {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ cityName })\n      }\n    );\n    const cityId = await response.json(); // Get city id associated with i.e. Glasgow\n    //const cityOptions = await response.json()\n    console.log(cityId[0].id);\n    this.setState({ city: cityId[0].id, hasChosenCountry: true, cityName: cityName });  // set user city to this id so in future user and other components can searh for location id and get city name back\n  }\n\n  render() {\n    const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode, cityOptions, hasChosenCountry, cityName } = this.state\n    //console.log(\"CITIES:\");\n    //console.log(cityOptions);\n    if (successfullySubmitted) {\n      return (<Redirect to=\"/\" />);\n    }\n\n    if (!valid_new_user) {\n      return (\n        <section>\n            <h1>CreateAccount</h1>\n            <form className=\"SubmissionForm\">\n              <section>\n                <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={(e) => this.updateInfo(e)} />\n                {!validEmail && <p className=\"error\" >email address unavailable</p>}\n              </section>\n              <section>\n                <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                <input type=\"text\" name=\"password1\" id=\"password1\" value={password1} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password1)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"password2\" value=\"Re-enter password: \" value={password2} >Re-enter password: </label>\n                <input type=\"text\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(password2)}</div>\n              </section>\n              <section>\n                <input type=\"submit\" onClick={(e) => this.submitEmailInfo(e)} value=\"Submit\" />\n                {validationMessage && <p className=\"error\">{validationMessage}</p>}\n              </section>\n            </form>\n        </section>\n      );\n    }\n    else {\n      return (\n        <section>\n            <h1>User details:</h1>\n            <form className=\"SubmissionForm\">\n              <section>\n                <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                <input type=\"text\" name=\"first_name\" id=\"first_name\" value={first_name} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                <input type=\"text\" name=\"last_name\" id=\"last_name\" value={last_name} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                <input type=\"date\" name=\"DoB\" id=\"DoB\" value={DoB} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={phone_number} onChange={(e) => this.updateInfo(e)} />\n                <div>{this.validateLive(phone_number)}</div>\n              </section>\n              <section>\n                <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                <input type=\"text\" name=\"address_1\" id=\"address_1\" value={address_1} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                <input type=\"text\" name=\"address_2\" id=\"address_2\" value={address_2} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n              <div className=\"cityParent\">\n                <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                <br/>\n                {/*<input type=\"text\" name=\"city\" id=\"city\" value={city} onChange={(e) => this.updateInfo(e)} />*/}\n                <section id='cities_section'>\n                { !hasChosenCountry && cityOptions.map(({ id, name }) => <div className=\"cityCard\" onClick={(e) => this.changeCity(e)} key={id} value={name}>{name}</div>)}\n                { hasChosenCountry && <div className=\"chosenCityCard\" onClick={(e) => this.changeCity(e)} value={cityName}>{cityName}</div>}\n                </section>\n                {/*<City key={id} id={id} name={name} />*/}\n                {/*\n                <div className=\"dropdown\">\n                  <button onClick={(e) => this.myFunction(e)} className=\"dropbtn\">Dropdown</button>\n                  <div id=\"myDropdown\" className=\"dropdown-content\">\n                    <input type=\"text\" placeholder=\"Search..\" id=\"myInput\">\n                      <a href=\"#about\">About</a>\n                      <a href=\"#base\">Base</a>\n                      <a href=\"#blog\">Blog</a>\n                      <a href=\"#contact\">Contact</a>\n                      <a href=\"#custom\">Custom</a>\n                      <a href=\"#support\">Support</a>\n                      <a href=\"#tools\">Tools</a>\n                    </input>\n                  </div>\n                </div>\n                */}\n                </div>\n              </section>\n              <section>\n                <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                <input type=\"text\" name=\"postcode\" id=\"postcode\" value={postcode} onChange={(e) => this.updateInfo(e)} />\n              </section>\n              <section>\n                <input type=\"submit\" name=\"submit\" value=\"Submit\" onClick={(e) => this.submitUser(e)} />\n                {validationMessage && <p className=\"error\">{validationMessage}</p>}\n              </section>\n            </form>\n        </section>\n      )\n    }\n  }\n}\n\nexport default CreateAccount;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/MyRentals.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/Home.js",["154"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport SearchBar from './SearchBar';\nimport ThingsHandler from '../framework/ThingsHandler';\n\nclass Home extends Component {\n\n    state = {\n        submissionConfirmed: false,\n        searchCriteria: {}\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n/*\n    async checkForUser(){\n        let { user } = this.props;\n        user = await this.props.checkWhoIsSignedIn();\n        if(user){\n            //console.log(user.user[0]);\n            this.props.setUser(user.user[0]); // Set user as object of user data {...}\n            await this.props.toggleLoggedIn(true);\n        }else{\n            this.props.setUser(null); // Or set user as null\n            await this.props.toggleLoggedIn(false);\n        }\n    }\n*/\n    async componentDidMount() {\n        this.props.cookieCheck();\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    /*\n    formSubmission(event) {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ submissionConfirmed: true });\n        //this\n        //const response = await fetch(.../thing);\n        //const data = await response.jsonStringify();\n        //if(data === 200){\n        //    redirect to things\n        //} else {\n        //    redirect to error page\n        //}\n    }\n*/\n    submitSearch(arg) {\n        //console.log(arg);\n        this.setState({ submissionConfirmed: true, searchCriteria: arg });\n    }\n\n    render() {\n        const { submissionConfirmed, searchCriteria } = this.state;\n\n        if (submissionConfirmed) {\n            return (\n                <section>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <ThingsHandler searchCriteria={ searchCriteria } cookieCheck={this.props.cookieCheck}/>\n                </section>\n            );\n        }\n        else {\n            return (\n                <section>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <main>\n                        <h1>Welcome! Fill in the boxes above if you know what your after!</h1>\n                        <h1>If you are not sure what you want, check out the <span className=\"highlight\">Categories</span> page!</h1>\n\n                    </main>\n                </section>\n            );\n        }\n    }\n}\n\nexport default Home;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Categories.js",["155"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/categories.css';\nimport Category from './Category';\nimport ThingsHandler from '../framework/ThingsHandler.js'\n\nclass Categories extends Component {\n\n    state = {\n        categories: [],\n        hasChosen: false,\n        chosenValue: ''\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n        const response = await fetch('http://localhost:8080/categories', {\n            method: 'GET',\n            credentials: 'include'\n        })\n        const categories = await response.json()\n        this.setState({ categories })\n    }\n\n    handleClick(chosenValue) {\n        console.log(chosenValue);\n        //return (<Redirect to=\"/\"/>);\n        this.setState({chosenValue});\n        this.setState({hasChosen: true});\n    }\n\n    render() {\n        const { categories, hasChosen, chosenValue } = this.state\n\n        if(hasChosen){\n            //call parent method that goes to things with chosenValue\n            return ( <ThingsHandler categoryId={ chosenValue } /> );\n        }\n\n        //console.log(categories);\n        if (categories.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n            //console.log(categories[0].imgurl);\n\n            return (\n                <div className='item-list'>\n                    {categories.map(({ id, name, description, imgurl }) =>\n                        <Category key={id} id={id} name={name} description={description} imgurl={imgurl} handleClick={(arg) => this.handleClick(arg)}/>\n                    )}\n                </div>\n\n            )\n        }\n    }\n\n} export default Categories;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Item.js",["156","157"],"import React, { Component, useReducer } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport '../../index.css'\nimport '../../css/Item.css'\n\nclass Item extends Component {\n\n    initialState = {\n        item: [],\n        fields: {\n            rentFrom: '',\n            rentUntil: '',\n        },\n        rentalConfirmed: false,\n        errorMessage: '',\n        usersOwnItem: false,\n    }\n\n    state = this.initialState\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n\n        // Get id from the url\n        const url = window.location.href\n        const urlSplit = url.split('/')\n        const id = urlSplit[urlSplit.length - 1]\n\n        // Fetch API response\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/item/${id}`,\n            {\n                method: 'GET',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            }\n        )\n        const { itemInArray, usersOwnItem } = await response.json()\n\n        const item = itemInArray[0]\n\n        // Set state\n        this.setState({ item, usersOwnItem })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n\n        this.setState(prevState => ({\n            fields: {\n                ...prevState.fields,\n                [name]: value,\n            },\n            errorMessage: '',\n            rentalConfirmed: false,\n        }))\n    }\n\n    submitForm = async () => {\n        const itemId = this.state.item.id\n        const { rentFrom, rentUntil } = this.state.fields\n\n        if (!rentFrom || !rentUntil) {\n            this.setState({ errorMessage: 'Please enter a valid rent from and rent until date' })\n            return\n        }\n\n        if (rentFrom > rentUntil) {\n            this.setState({ errorMessage: 'You cannot time travel (please set the return date to be later than the rental date)' })\n        }\n\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/rentItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ itemId, rentFrom, rentUntil })\n            }\n        )\n        const { errorMessage } = await response.json()\n\n        if (errorMessage) {\n            this.setState({ errorMessage })\n        } else {\n            this.setState({\n                fields: this.initialState.fields,\n                rentalConfirmed: true,\n            })\n        }\n\n    }\n\n    render() {\n        const item = this.state.item\n        const { rentFrom, rentUntil } = this.state.fields\n        const errorMessage = this.state.errorMessage\n        const rentalConfirmed = this.state.rentalConfirmed\n        const usersOwnItem = this.state.usersOwnItem\n\n        return (\n            <div className='item-page-container'>\n                <div className='item-page-image'>\n                    <img src={item.img_url} alt={item.name} style={{ height: '500px' }} />\n                </div>\n                <div className='item-page-content-container'>\n                    <div className=\"item-page-name\">\n                        <h1>{item.name}</h1>\n                        <p>Offered by {item.first_name} {item.last_name}</p>\n                    </div>\n                    <div className=\"item-page-info\">\n                        <h2>Description</h2>\n                        <p>{item.description}</p>\n                    </div>\n                    <div className=\"item-page-reviews\">\n                        <h2>Reviews</h2>\n                    </div>\n                    <div className=\"item-page-rent\">\n                        {!usersOwnItem &&\n                        <form>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentFrom\">Rent from: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentFrom\"\n                                    id=\"rentFrom\"\n                                    value={rentFrom}\n                                    onChange={(e) => this.handleChange(e)} />\n                            </span>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentUntil\">Rent until: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentUntil\"\n                                    id=\"rentUntil\"\n                                    value={rentUntil}\n                                    onChange={(e) => this.handleChange(e)} />\n                            </span>\n                            <input\n                                className=\"item-page-rent-button item-page-form-field\"\n                                type=\"button\"\n                                value=\"Rent item\"\n                                onClick={this.submitForm} />\n                            <br />\n                            {errorMessage && <p>{ errorMessage }</p>}\n                            {rentalConfirmed && <p>Item successfully rented</p>}\n                        </form>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserReviews.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Things.js",["158"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css';\nimport Card from './Card';\n\nclass Things extends Component {\n\n    state = {\n        items: null\n    }\n\n    async componentDidMount() {\n        const items = this.props.items\n        console.log(\"Items:\")\n        console.log(items)\n        this.setState({ items })\n\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n      console.log(this.props)\n      if(prevProps !== this.props){\n        \n        if(!this.props.items[0]){\n          this.setState({\n            items: false\n          })\n        }\n        this.setState({\n          items: this.props.items\n        })\n      }\n    }\n\n    handleItemClick(id) {\n        console.log(id)\n\n    }\n\n    render() {\n        //const { items } = this.state;\n        const items = this.props.items;\n        console.log(items);\n        //console.log(\"Items:\")\n        //console.log(items)\n        if (!items) {\n            return (<p>Loading....</p>)\n        } else {\n\n            return (\n                <div className='item-list'>\n                    {items.map(({ id, name, is_available, img_url }) =>\n                        <Card key={id} id={id} name={name} is_available={is_available} img_url={img_url} cardType='things-page-card' />\n                    )}\n                </div>\n\n            )\n        }\n    }\n\n} export default Things;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/PostItem.js",["159"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport ImageUpload from '../framework/ImageUpload'\n\nclass PostItem extends Component {\n\n    initialState = {\n        name: '',\n        categories: null,\n        description: '',\n        category: null,\n        age_restriction: null,\n        owner_id: null,\n        img_url: '',\n        previous_submit_successful: false,\n    }\n\n    state = this.initialState;\n\n    async componentDidMount() {\n        const response = await fetch('http://localhost:8080/categories', {\n            method: 'GET',\n            credentials: 'include'\n        })\n        const categories = await response.json()\n        this.setState({ categories })\n    }\n\n    resetForm() {\n        this.setState(this.initialState);\n    }\n\n\n    handleImgUrl = (url) => {\n        //console.log(url,'Url on PostItem')\n        this.setState({img_url: url})\n    }\n\n    handleChange = (e) => {\n        console.log('HANDLE CHANGE FUNCTION')\n\n        const {name, value} = e.target\n        if (name === 'category') {\n            this.setState({ category: parseInt(value, 10) })\n        } else if (name === 'age_restriction') {\n            this.setState({ age_restriction: parseInt(value, 10) })\n        }\n\n    }\n\n\n    async handleSubmit(e) {\n        //console.log('Submitting on PostItem.js')\n        e.preventDefault();\n        this.resetForm();\n\n        const { name, description, category, age_restriction, img_url } = this.state;\n        const ownerID = this.props.userID\n\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/postItem`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ name, description, category, age_restriction, ownerID, img_url })\n            }\n        );\n\n        const fromBackend = await response.json()\n        console.log(fromBackend, 'fromBackend')\n\n        if (fromBackend.submitted) {\n            this.setState({previous_submit_successful: true})  // Can use this to add a green tick to page or something..\n        }\n\n        console.log(this.state.previous_submit_successful)\n\n        //const test = await response.json();\n        //console.log(test)\n        //console.log(document.cookie)\n\n    }\n\n\n    render() {\n        const { name, description, category, age_restriction, categories } = this.state;\n\n        return (\n\n            <main>\n                <h1 className=\"centered\">Post Item</h1>\n                <form className='SubmissionForm' onSubmit={(e) => this.handleSubmit(e)}>\n                    <label>Item Name <input type='text' name='name' value={name}\n                        onChange={(e) => this.setState({ name: e.target.value })}></input></label>\n                    <label>description <input type='text' name='description' value={description}\n                        onChange={(e) => this.setState({ description: e.target.value })}></input></label>\n\n\n\n                      { categories &&\n                        <select name=\"category\" value={category} onChange={this.handleChange}>\n                            <option>Please Select Category</option>\n                              {categories.map(({ id, name, description, imgurl }) =>\n                                  <option key={id} id={id} name={category} value={id}>{name}</option>\n                              )}\n                        </select>\n                      }\n\n\n                    <select name=\"age_restriction\" value={age_restriction} onChange={this.handleChange}>\n                        <option>Please select Age restrction</option>\n                        <option value='0'>No restriction</option>\n                        <option value=\"18\">18 and over</option>\n\n\n                    </select>\n\n\n                    <input type='submit' value='Post rental' />\n                </form>\n                <ImageUpload handleImgUrl={this.handleImgUrl}/>\n            </main>\n        );\n    }\n}\n\nexport default PostItem;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserPosts.js",["160"],"import React from 'react';\nimport Things from '../../products/Things.js';\n\nclass UserPosts extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is lending</h1>\n        <div id=\"posts\">\n\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserPosts;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserLookingFor.js",["161"],"import React from 'react';\nimport Things from '../../products/Things.js';\n\n\nclass UserLookingFor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    };\n\n  }\n\n  render() {\n    const { user } = this.props;\n    return(\n      <section>\n        <h1>{user.first_name} is looking for</h1>\n        <div id=\"posts\">\n\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default UserLookingFor;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/UserReview.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/City.js",["162"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\n\nclass City extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div id='cityCard' className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <span>{this.props.id}</span>\n                <span>{this.props.name}</span>\n            </div>\n\n        )\n    }\n\n}\n\nexport default City;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Card.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/products/Category.js",["163"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\n\nclass Category extends Component {\n\n    async componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"category\" onClick={() => this.props.handleClick(this.props.id)}>\n                <div id=\"info_container\">\n                  <h2>{this.props.name}</h2>\n                  <h2>{this.props.description}</h2>\n                </div>\n                {/*<h2>{imgurl}</h2>*/}\n                <div id=\"img_container\">\n                  <img id=\"category_card_img\" src={this.props.imgurl} alt={this.props.id}/>\n                </div>\n            </div>\n\n        )\n    }\n\n}\n\n/*\nhandleClick(arg) {\n    console.log(arg);\n}\n*/\n/*\nexport default function Category({ id, name, description, imgurl }) {\n    //console.log(imgurl);\n    return (\n        <div className=\"category\" onClick={handleClick(id)}>\n            <h2>{name}</h2>\n            <h2>{description}</h2>\n            <img src={imgurl} alt={id}/>\n        </div>\n\n    )\n\n}\n*/\n\nexport default Category;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/SearchBar.js",["164"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n        dateFrom: '',\n        dateTo: '',\n        location: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate(PrevProps, PrevState) {\n        if(this.state.item!== PrevState.item){\n          //console.log(this.state)\n          this.props.submitSearch(this.state)\n        }\n\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        this.props.submitSearch(this.state);\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <section>\n                <form type=\"submit\" className=\"searchBar\">\n                    <div>\n                    <span><input type=\"text\" name=\"item\" id=\"item\" value={item} onChange={(e) => this.handleChange(e)} placeholder='item' /></span>\n                    <span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    </div>\n                    <div>\n                    <input id='search_submit' type='submit' onClick={(e) => this.formSubmission(e)} value='GO'/>\n                    </div>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default SearchBar;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/user/profile/AddUserReview.js",["165","166","167"],"import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../../css/reviews.css';\n\nclass AddUserReview extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      review: '',\n      rating: null,\n      reviewAdded: false\n    }\n  }\n\n  textInput(e) {\n    const value = e.target.value\n    const name = e.target.name\n    this.setState({\n      [name]: value\n    })\n  }\n\n  changeStarRating(e) {\n    let rating = e.target.value;\n    rating = parseInt(rating);\n    this.setState({\n      rating: rating\n    })\n  }\n\n  async submitUserReview(e) {\n    //e.preventDefault();\n    const { review, rating, title } = this.state\n    //console.log(this.props.user)\n    const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/postUserReview`,\n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ review: review, star_rating: rating, user: this.props.user, title: title })\n        }\n    );\n  }\n\n  render() {\n      const { review, title, reviewAdded } = this.state\n      //console.log(this.props)\n      if(reviewAdded){\n        return(<Redirect to=\"/myAccount\"/>)\n      }\n\n      const { user } = this.props\n\n\n      return(\n        <section id=\"review-body\">\n          <p>Leave a review:</p>\n          <form>\n          <input id='new_review_title' placeholder=\"Review title\" type=\"text\" name=\"title\" id=\"title\" value={title} onChange={(e) => this.textInput(e)} />\n          <textarea id='new_review_input' name=\"review\" rows=\"4\" id=\"new_review\" type=\"text\" value={review} onChange={(e) => this.textInput(e)} /> <br/><br/>\n          <select name=\"rating\" id=\"rating\" onChange={(e) => this.changeStarRating(e)}>\n              <option value=\"\">Give {user.first_name} a star rating</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n          </select>\n          <br/>\n          <input id='submit' type=\"submit\" value=\"Submit review\" onClick={(e) => {this.submitUserReview(e)}}/>\n          </form>\n        </section>\n      )\n    }\n}\n\nexport default AddUserReview;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/framework/ImageUpload.js",[],"/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/About.js",["168"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/categories.css';\nimport '../../css/About.css';\nimport Individual from './Individual';\nimport ChosenIndividual from './ChosenIndividual';\n\nclass About extends Component {\n\n    state = {\n        teamMembers: [],\n        hasChosen: false,\n        chosenIndividual: null\n    }\n\n    async componentDidMount() {\n        this.props.cookieCheck();\n        const response = await fetch('http://localhost:8080/teamMembers', {\n            method: 'GET',\n            credentials: 'include'\n        });\n        const teamMembers = await response.json();\n        console.log(teamMembers);\n        this.setState({ teamMembers });\n    }\n\n    handleClick(individualData) {\n        console.log(individualData);\n        //return (<Redirect to=\"/\"/>);\n        this.setState({ chosenIndividual: individualData });\n        this.setState({ hasChosen: true });\n    }\n\n    backToTeam(){\n        this.setState({ hasChosen: false });\n    }\n\n    render() {\n        const { teamMembers, hasChosen, chosenIndividual } = this.state\n\n        if (hasChosen) {\n            //call parent method that goes to things with chosenValue\n            return (<ChosenIndividual chosenIndividual={chosenIndividual} backToTeam={(arg) => this.backToTeam(arg)}/>);\n        }\n\n        //console.log(categories);\n        if (teamMembers.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n            //console.log(categories[0].imgurl);\n\n            return (\n                <>\n                    <h1>Meet the team!</h1>\n                    <h1>Software Engineers:</h1>\n                    <div className='item-list'>\n                        {teamMembers.map(({ id, name, description, email, number, cv_img, linkedin_link }) =>\n                            <Individual key={id} id={id} name={name} description={description} email={email} number={number} CVImg={cv_img} link={linkedin_link} handleClick={(arg) => this.handleClick(arg)} />\n                        )}\n                    </div>\n                </>\n            )\n        }\n    }\n\n} export default About;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/Individual.js",["169","170"],"import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport '../../index.css';\nimport '../../css/Things.css'\nimport '../../css/Card.css';\n\nclass Individual extends Component {\n\n    state = {\n        individualData: null\n    }\n\n    async componentDidMount() {\n        const { id, name, description, email, number, CVImg, link } = this.props;\n        const individualData = { id, name, description, email, number, CVImg, link };\n        this.setState({ individualData });\n    }\n\n    render() {\n        const { individualData } = this.state;\n        if (!individualData) {\n            return (<h1>Loading...</h1>);\n        } else {\n            return (\n                <div className=\"category\" onClick={() => this.props.handleClick(individualData)}>\n                    <div id=\"info_container\">\n                        <h2>{individualData.name}</h2>\n                        {/*<h2>{this.props.description}</h2>*/}\n                        {/*<h2>{this.props.email}</h2>*/}\n                        {/*<h2>{this.props.number}</h2>*/}\n                        {/*<h2>{this.props.link}</h2>*/}\n                    </div>\n                    <div id=\"img_container\">\n                        <img id=\"category_card_img\" className='things-page-card-img' src=\"logo192.png\" alt={individualData.name} style={{ height: '310px' }} />\n                        {/*<img id=\"category_card_img\" src={\"logo192.png\"} alt={this.props.id} />*/}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nexport default Individual;\n","/Users/kylepearce/Desktop/dev/SigmaLabs/GroupProjectOnline/apr-2021-appliances/FrontEnd/web-app/src/components/home/ChosenIndividual.js",["171"],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":17,"column":8,"nodeType":"178","messageId":"179","endLine":17,"endColumn":21},{"ruleId":"176","severity":1,"message":"180","line":88,"column":35,"nodeType":"178","messageId":"179","endLine":88,"endColumn":46},{"ruleId":"176","severity":1,"message":"181","line":88,"column":48,"nodeType":"178","messageId":"179","endLine":88,"endColumn":60},{"ruleId":"182","severity":1,"message":"183","line":60,"column":15,"nodeType":"184","endLine":60,"endColumn":64},{"ruleId":"185","severity":1,"message":"186","line":26,"column":20,"nodeType":"187","messageId":"188","endLine":26,"endColumn":22},{"ruleId":"176","severity":1,"message":"189","line":112,"column":46,"nodeType":"178","messageId":"179","endLine":112,"endColumn":70},{"ruleId":"176","severity":1,"message":"181","line":179,"column":32,"nodeType":"178","messageId":"179","endLine":179,"endColumn":44},{"ruleId":"176","severity":1,"message":"190","line":179,"column":46,"nodeType":"178","messageId":"179","endLine":179,"endColumn":55},{"ruleId":"176","severity":1,"message":"191","line":179,"column":57,"nodeType":"178","messageId":"179","endLine":179,"endColumn":64},{"ruleId":"176","severity":1,"message":"192","line":179,"column":66,"nodeType":"178","messageId":"179","endLine":179,"endColumn":69},{"ruleId":"193","severity":1,"message":"194","line":188,"column":7,"nodeType":"195","messageId":"196","endLine":214,"endColumn":6},{"ruleId":"176","severity":1,"message":"197","line":91,"column":57,"nodeType":"178","messageId":"179","endLine":91,"endColumn":64},{"ruleId":"176","severity":1,"message":"198","line":4,"column":8,"nodeType":"178","messageId":"179","endLine":4,"endColumn":12},{"ruleId":"176","severity":1,"message":"199","line":98,"column":13,"nodeType":"178","messageId":"179","endLine":98,"endColumn":18},{"ruleId":"176","severity":1,"message":"200","line":98,"column":20,"nodeType":"178","messageId":"179","endLine":98,"endColumn":29},{"ruleId":"176","severity":1,"message":"201","line":98,"column":31,"nodeType":"178","messageId":"179","endLine":98,"endColumn":40},{"ruleId":"202","severity":1,"message":"203","line":153,"column":3,"nodeType":"204","messageId":"188","endLine":157,"endColumn":4},{"ruleId":"205","severity":1,"message":"206","line":180,"column":5,"nodeType":"207","messageId":"208","endLine":226,"endColumn":6},{"ruleId":"193","severity":1,"message":"209","line":181,"column":24,"nodeType":"195","messageId":"210","endLine":181,"endColumn":27},{"ruleId":"193","severity":1,"message":"209","line":183,"column":23,"nodeType":"195","messageId":"210","endLine":183,"endColumn":26},{"ruleId":"193","severity":1,"message":"209","line":185,"column":19,"nodeType":"195","messageId":"210","endLine":185,"endColumn":22},{"ruleId":"193","severity":1,"message":"209","line":187,"column":23,"nodeType":"195","messageId":"210","endLine":191,"endColumn":8},{"ruleId":"193","severity":1,"message":"209","line":193,"column":23,"nodeType":"195","messageId":"210","endLine":197,"endColumn":8},{"ruleId":"193","severity":1,"message":"209","line":199,"column":17,"nodeType":"195","messageId":"210","endLine":199,"endColumn":20},{"ruleId":"193","severity":1,"message":"209","line":201,"column":26,"nodeType":"195","messageId":"210","endLine":216,"endColumn":8},{"ruleId":"193","severity":1,"message":"209","line":218,"column":23,"nodeType":"195","messageId":"210","endLine":218,"endColumn":26},{"ruleId":"193","severity":1,"message":"209","line":220,"column":23,"nodeType":"195","messageId":"210","endLine":220,"endColumn":26},{"ruleId":"193","severity":1,"message":"209","line":222,"column":18,"nodeType":"195","messageId":"210","endLine":222,"endColumn":21},{"ruleId":"193","severity":1,"message":"209","line":224,"column":22,"nodeType":"195","messageId":"210","endLine":224,"endColumn":25},{"ruleId":"176","severity":1,"message":"211","line":303,"column":176,"nodeType":"178","messageId":"179","endLine":303,"endColumn":180},{"ruleId":"212","severity":1,"message":"213","line":326,"column":72,"nodeType":"214","endLine":326,"endColumn":89},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"216","line":1,"column":28,"nodeType":"178","messageId":"179","endLine":1,"endColumn":38},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"217","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"217","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"218","line":36,"column":11,"nodeType":"178","messageId":"179","endLine":36,"endColumn":19},{"ruleId":"212","severity":1,"message":"213","line":63,"column":92,"nodeType":"214","endLine":63,"endColumn":102},{"ruleId":"212","severity":1,"message":"213","line":64,"column":66,"nodeType":"214","endLine":64,"endColumn":81},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},{"ruleId":"176","severity":1,"message":"219","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"215","line":2,"column":16,"nodeType":"178","messageId":"179","endLine":2,"endColumn":24},{"ruleId":"176","severity":1,"message":"215","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":18},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'ThingsHandler' is defined but never used.","Identifier","unusedVar","'hasSearched' is assigned a value but never used.","'searchParams' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'locationFilteredItemList' is assigned a value but never used.","'date_from' is assigned a value but never used.","'date_to' is assigned a value but never used.","'all' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'touched' is assigned a value but never used.","'City' is defined but never used.","'email' is assigned a value but never used.","'password1' is assigned a value but never used.","'password2' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Block is redundant.","redundantBlock","'city' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","'useReducer' is defined but never used.","'Things' is defined but never used.","'response' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]

