[{"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/index.js":"1","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/App.js":"2","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js":"3","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Login.js":"4","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Home.js":"5","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Things.js":"6","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js":"7","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Card.js":"8","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Item.js":"9","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Profile.js":"10","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js":"11","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js":"12","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js":"13","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js":"14","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Logout.js":"15","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js":"16"},{"size":167,"mtime":1625576710502,"results":"17","hashOfConfig":"18"},{"size":4336,"mtime":1625770060951,"results":"19","hashOfConfig":"18"},{"size":10390,"mtime":1625756007303,"results":"20","hashOfConfig":"18"},{"size":4406,"mtime":1625756007307,"results":"21","hashOfConfig":"18"},{"size":2243,"mtime":1625756007304,"results":"22","hashOfConfig":"18"},{"size":1345,"mtime":1625756007309,"results":"23","hashOfConfig":"18"},{"size":1816,"mtime":1625676935270,"results":"24","hashOfConfig":"18"},{"size":564,"mtime":1625756007302,"results":"25","hashOfConfig":"18"},{"size":2001,"mtime":1625756007306,"results":"26","hashOfConfig":"18"},{"size":2574,"mtime":1625770007199,"results":"27","hashOfConfig":"18"},{"size":2259,"mtime":1625770191674,"results":"28","hashOfConfig":"18"},{"size":404,"mtime":1625766395688,"results":"29","hashOfConfig":"18"},{"size":419,"mtime":1625757376997,"results":"30","hashOfConfig":"18"},{"size":499,"mtime":1625770081569,"results":"31","hashOfConfig":"18"},{"size":1006,"mtime":1625756188189,"results":"32","hashOfConfig":"18"},{"size":2298,"mtime":1625770028507,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"oe3iu1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/index.js",[],["72","73"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/App.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/CreateAccount.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass CreateAccount extends Component {\n\n    state = {\n      valid_new_user: false,\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      password1: \"\",\n      password2: \"\",\n      DoB: \"\",\n      phone_number: \"\",\n      address_1: \"\",\n      address_2: \"\",\n      city: \"\",\n      postcode: \"\",\n      validationMessage: null,\n      validEmail: true,\n      successfullySubmitted: false\n     }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    updateState(e) {\n\n    }\n\n    updateInfo(e) {\n      const { name, value } = e.target;\n      this.setState({\n        [name]: value\n      })\n    }\n\n    async submitEmailInfo(e) { //async\n      e.preventDefault();\n      const { email, password1, password2 } = this.state\n      if(this.validateSubmit('first')) //And the user doesnt exist already\n          {\n        this.setState({\n          valid_new_user: true,\n          validationMessage: null\n        })\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async submitUser(e) {\n      e.preventDefault()\n      if(this.validateSubmit('second')){\n        this.setState({validationMessage: null})\n        const toBeSent = {\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n          email: this.state.email,\n          password1: this.state.password1,\n          password2: this.state.password2,\n          DoB: this.state.DoB,\n          phone_number: this.state.phone_number,\n          address_1: this.state.address_1,\n          address_2: this.state.address_2,\n          city: this.state.city,\n          postcode: this.state.postcode\n         }\n        const response = await fetch(\n            `${process.env.REACT_APP_API_URL}/createAccount`,\n            {\n                method: 'POST',\n                credentials: 'include',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(toBeSent)\n            }\n        );\n        const isSuccess = await response.json()\n\n        if(isSuccess.code === 200){\n          this.props.cookieCheck()\n          this.setState({ successfullySubmitted: true })\n        }\n      }else{\n        this.setState({\n          validationMessage: \"Please ensure all fields are complete and valid\"\n        })\n      }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n      if(prevState.email !== this.state.email && this.state.email !== ''){\n        await this.checkValidEmail()\n      }\n    }\n\n    async checkValidEmail() {\n      const { email } = this.state\n      const response = await fetch(\n          `${process.env.REACT_APP_API_URL}/isValidNewEmail`,\n          {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({ email })\n          }\n        )\n        const isEmailValid = await response.json()\n        if(await isEmailValid !== this.state.validEmail){\n          this.setState({ validEmail: isEmailValid})\n        }\n    }\n\n    validateLive(info) {\n      const { first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      switch(info) {\n        case first_name: {}\n        break\n        case last_name: {}\n        break\n        case email: {}\n        break\n        case password1: {\n          if(password1.length < 8){\n            return (<p className=\"error\">Password must be at least 8 characters</p>)\n          }\n        }\n        break\n        case password2: {\n          if(password2 !== password1){\n            return (<p className=\"error\">Passwords do not match</p>)\n          }\n        }\n        break\n        case DoB: {}\n        break\n        case phone_number: {\n          if(phone_number[0] === \"+\"){\n            if(phone_number.length !== 12) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }else{\n            if(phone_number.length !== 11) {\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n          for(const i of phone_number){\n            if(isNaN(i)){\n              return (<p className=\"error\">Please enter a valid phone number</p>)\n            }\n          }\n        }\n        break\n        case address_1: {}\n        break\n        case address_2: {}\n        break\n        case city: {}\n        break\n        case postcode: {} //Link to royal mail postcodes API\n        break\n      }\n    }\n\n    validateSubmit(which) {\n      const { validEmail, password1, password2, phone_number } = this.state\n\n      if(which === 'first'){\n        if(password2 !== password1 || password1.length < 8 || !validEmail){\n          return false\n        }else{\n          return true;\n        }\n      }else if(which === 'second'){\n        if(phone_number[0] === \"+\"){\n          if(phone_number.length !== 12) {\n            return false\n          }\n        }else{\n          if(phone_number.length !== 11) {\n            return false\n          }\n        }\n        for(const i of phone_number){\n          if(isNaN(i)){\n            return false\n          }\n        }\n        return true;\n      }\n    }\n\n    render() {\n      const { successfullySubmitted, validEmail, validationMessage, valid_new_user, first_name, last_name, email, password1, password2, DoB, phone_number, address_1, address_2, city, postcode } = this.state\n\n      if(successfullySubmitted){\n        return (<Redirect to=\"/\"/>);\n      }\n\n      if(!valid_new_user) {\n          return(\n            <main>\n                <div>\n                  <h1>CreateAccount</h1>\n                  <form className=\"SubmissionForm\">\n                      <section>\n                        <label htmlFor=\"email\" value=\"Email address: \" >Email address: </label>\n                        <input type=\"text\" name=\"email\" id=\"email\" value={ email } onChange={(e) => this.updateInfo(e)}/>\n                        { !validEmail && <p className=\"error\" >email address unavailable</p>}\n                      </section>\n                      <section>\n                        <label htmlFor=\"password1\" value=\"Password: \" >Password: </label>\n                        <input type=\"text\" name=\"password1\" id=\"password1\" value={ password1 } onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password1)}</div>\n                      </section>\n                      <section>\n                        <label htmlFor=\"password2\" value=\"Re-enter password: \" value={ password2 } >Re-enter password: </label>\n                        <input type=\"text\" name=\"password2\" id=\"password2\" onChange={(e) => this.updateInfo(e)}/>\n                        <div>{this.validateLive(password2)}</div>\n                      </section>\n                      <section>\n                        <input type=\"submit\"  onClick={(e) => this.submitEmailInfo(e)} value=\"Submit\"/>\n                        {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                      </section>\n                </form>\n                </div>\n              </main>\n          );\n      }\n      else{\n          return(\n            <main>\n                <div>\n                  <h1>User details:</h1>\n                  <form className=\"SubmissionForm\">\n                    <section>\n                      <label htmlFor=\"first_name\" value=\"First name: \" >First name: </label>\n                      <input type=\"text\" name=\"first_name\" id=\"first_name\" value={ first_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"last_name\" value=\"Last name: \" >Last name: </label>\n                      <input type=\"text\" name=\"last_name\" id=\"last_name\" value={ last_name } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"DoB\" value=\"Date of birth : \" >Date of birth : </label>\n                      <input type=\"date\" name=\"DoB\" id=\"DoB\" value={ DoB } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"phone_number\" value=\"Phone number: \" >Phone number: </label>\n                      <input type=\"text\" name=\"phone_number\" id=\"phone_number\" value={ phone_number } onChange={(e) => this.updateInfo(e)}/>\n                      <div>{this.validateLive(phone_number)}</div>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_1\" value=\"Address line 1: \" >Address line 1: </label>\n                      <input type=\"text\" name=\"address_1\" id=\"address_1\" value={ address_1 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"address_2\" value=\"Address line 2: \" >Address line 2: </label>\n                      <input type=\"text\" name=\"address_2\" id=\"address_2\" value={ address_2 } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"city\" value=\"City : \" >City : </label>\n                      <input type=\"text\" name=\"city\" id=\"city\" value={ city } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <label htmlFor=\"postcode\" value=\"Postcode: \" >Postcode: </label>\n                      <input type=\"text\" name=\"postcode\" id=\"postcode\" value={ postcode } onChange={(e) => this.updateInfo(e)}/>\n                    </section>\n                    <section>\n                      <input type=\"submit\" name=\"submit\" value=\"Submit\" onClick={(e) => this.submitUser(e)}/>\n                      {validationMessage && <p className=\"error\">{validationMessage}</p>}\n                    </section>\n                </form>\n                </div>\n              </main>\n          )\n      }\n    }\n}\n\nexport default CreateAccount;\n","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Login.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Home.js",["91"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport SearchBar from './SearchBar';\nimport Things from './Things';\n\nclass Home extends Component {\n\n    state = {\n        submissionConfirmed: false,\n        searchCriteria: {}\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n    /*\n    formSubmission(event) {\n        event.preventDefault();\n        console.log(this.state);\n        this.setState({ submissionConfirmed: true });\n        //this\n        //const response = await fetch(.../thing);\n        //const data = await response.jsonStringify();\n        //if(data === 200){\n        //    redirect to things \n        //} else {\n        //    redirect to error page\n        //}\n    }\n*/\n    submitSearch(arg) {\n        console.log(arg);\n        this.setState({ submissionConfirmed: true, searchCriteria: arg });\n\n\n    }\n\n    render() {\n        const { submissionConfirmed, searchCriteria } = this.state;\n\n        if (submissionConfirmed) {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <Things searchCriteria={searchCriteria} />\n                </>\n            );\n        }\n        else {\n            return (\n                <>\n                    <SearchBar submitSearch={(arg) => this.submitSearch(arg)} />\n                    <main>\n                        <h1>Welcome! Fill in the boxes above if you know what your after!</h1>\n                        <h1>If you are not sure what you want, check out the <span className=\"highlight\">Categories</span> page!</h1>\n                        <h1>If you just want to browse, go straight to the <span className=\"highlight\">Things</span> page!</h1>\n                    </main>\n                </>\n            );\n        }\n    }\n}\n\nexport default Home;","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Things.js",["92"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\nimport './Things.css'\nimport Card from './Card'\n\nclass Things extends Component {\n\n    state = {\n        items: []\n    }\n\n    async componentDidMount() {\n        const response = await fetch('http://localhost:8080/items', {\n            method: 'GET',\n            credentials: 'include'\n        })\n        //respose is making the request\n        const items = await response.json()\n        //console.log(items.items)\n        this.setState({ items })\n        //console.log(this.state)\n    }\n\n\n    render() {\n        const { items } = this.state\n\n        // if (items.length !== 0) {\n        //     const available = items.items[0].is_available\n        //     console.log(available)\n        // }\n\n        // return(\n        //     <h1>{JSON.stringify(items)}</h1>\n        // )\n\n        if (items.length === 0) {\n            return (<p>Loading....</p>)\n        } else {\n            //console.log(items.items[0].is_available)\n            return (\n                <div className=\"item-list\">\n                    {items.items.map(({id, name, isAvailable }) =>\n                        <Card key={id} name={name} isAvailable={isAvailable} />\n                    )}\n                </div>\n            )\n        }\n    }\n\n} export default Things;\n\n","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/SearchBar.js",["93","94"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './index.css';\n\nclass SearchBar extends Component {\n\n    state = {\n        item: '',\n        dateFrom: '',\n        dateTo: '',\n        location: ''\n    }\n\n    constructor(props) {\n        super(props);\n        console.log(\"\");\n    }\n\n    componentDidMount() {\n        console.log(\"\");\n    }\n\n    componentDidUpdate() {\n        console.log(\"\");\n    }\n\n    componentWillUnmount() {\n        console.log(\"\");\n    }\n\n    changesState() {\n\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    formSubmission(event) {\n        event.preventDefault();\n        this.props.submitSearch(this.state);\n    }\n\n    render() {\n        const { item, dateFrom, dateTo, location } = this.state;\n        return (\n            <main>\n                <h1></h1>\n                <form type=\"submit\" className=\"searchBar\">\n                    <span><input type=\"text\" name=\"item\" id=\"item\" value={item} onChange={(e) => this.handleChange(e)} placeholder='item' /></span>\n                    <span><input type=\"date\" name=\"dateFrom\" id=\"dateFrom\" value={dateFrom} onChange={(e) => this.handleChange(e)} placeholder='dateFrom' /></span>\n                    <span><input type=\"date\" name=\"dateTo\" id=\"dateTo\" value={dateTo} onChange={(e) => this.handleChange(e)} placeholder='dateTo' /></span>\n                    <span><input type=\"text\" name=\"location\" id=\"location\" value={location} onChange={(e) => this.handleChange(e)} placeholder='location' /></span>\n                    <span><button onClick={(e) => this.formSubmission(e)} >Click Me!</button></span>\n                </form>\n            </main>\n        );\n    }\n}\n\nexport default SearchBar;","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Card.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Item.js",["95","96"],"import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport './index.css'\nimport './Item.css'\n\nclass Item extends Component {\n\n    render() {\n        return (\n            <div className='item-page-container'>\n                <div className='item-page-image'>\n                    <img src=\"https://www.radmoretucker.co.uk/wp-content/uploads/2018/01/Husqvarna-435-Mark-II-Petrol-Chainsaw-15-600x600.jpg\"></img>\n                </div>\n                <div className='item-page-content-container'>\n                    <div className=\"item-page-name\">\n                        <h1>Name of item</h1>\n                    </div>\n                    <div className=\"item-page-info\">\n                        <h2>Information</h2>\n                    </div>\n                    <div className=\"item-page-reviews\">\n                        <h2>Reviews</h2>\n                    </div>\n                    <div className=\"item-page-rent\">\n                        <form>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentFrom\">Rent from: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentFrom\"\n                                    id=\"rentFrom\" />\n                            </span>\n                            <span className=\"item-page-form-field\">\n                                <label htmlFor=\"rentUntil\">Rent until: </label>\n                                <input\n                                    type=\"date\"\n                                    name=\"rentUntil\"\n                                    id=\"rentUntil\" />\n                            </span>\n                            <input className=\"item-page-rent-button item-page-form-field\" type=\"button\" value=\"Rent item\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Item","/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Profile.js",["97"],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReviews.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserPosts.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserLookingFor.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/UserReview.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/Logout.js",[],"/Users/rob/Code/sigma_group_project/apr-2021-appliances/FrontEnd/web-app/src/AddUserReview.js",["98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":55,"column":15,"nodeType":"105","messageId":"106","endLine":55,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":55,"column":22,"nodeType":"105","messageId":"106","endLine":55,"endColumn":31},{"ruleId":"103","severity":1,"message":"108","line":55,"column":33,"nodeType":"105","messageId":"106","endLine":55,"endColumn":42},{"ruleId":"109","severity":1,"message":"110","line":110,"column":5,"nodeType":"111","messageId":"112","endLine":114,"endColumn":6},{"ruleId":"113","severity":1,"message":"114","line":137,"column":7,"nodeType":"115","messageId":"116","endLine":183,"endColumn":8},{"ruleId":"117","severity":1,"message":"118","line":138,"column":26,"nodeType":"119","messageId":"120","endLine":138,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":140,"column":25,"nodeType":"119","messageId":"120","endLine":140,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":142,"column":21,"nodeType":"119","messageId":"120","endLine":142,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":144,"column":25,"nodeType":"119","messageId":"120","endLine":148,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":150,"column":25,"nodeType":"119","messageId":"120","endLine":154,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":156,"column":19,"nodeType":"119","messageId":"120","endLine":156,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":158,"column":28,"nodeType":"119","messageId":"120","endLine":173,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":175,"column":25,"nodeType":"119","messageId":"120","endLine":175,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":177,"column":25,"nodeType":"119","messageId":"120","endLine":177,"endColumn":27},{"ruleId":"117","severity":1,"message":"118","line":179,"column":20,"nodeType":"119","messageId":"120","endLine":179,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":181,"column":24,"nodeType":"119","messageId":"120","endLine":181,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":238,"column":80,"nodeType":"123","endLine":238,"endColumn":99},{"ruleId":"103","severity":1,"message":"124","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"103","severity":1,"message":"124","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"103","severity":1,"message":"124","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":51,"column":17,"nodeType":"127","endLine":51,"endColumn":21},{"ruleId":"103","severity":1,"message":"124","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":12,"column":21,"nodeType":"127","endLine":12,"endColumn":144},{"ruleId":"128","severity":1,"message":"129","line":60,"column":15,"nodeType":"127","endLine":60,"endColumn":64},{"ruleId":"103","severity":1,"message":"130","line":35,"column":11,"nodeType":"105","messageId":"106","endLine":35,"endColumn":19},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'email' is assigned a value but never used.","Identifier","unusedVar","'password1' is assigned a value but never used.","'password2' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'componentDidUpdate'.","MethodDefinition","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Redirect' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]